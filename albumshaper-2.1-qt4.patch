diff -urN albumshaper_2.1_src/AlbumShaper.pro albumshaper_2.1_src-qt4/AlbumShaper.pro
--- albumshaper_2.1_src/AlbumShaper.pro	2014-06-05 09:42:13.223855910 +0200
+++ albumshaper_2.1_src-qt4/AlbumShaper.pro	2014-06-05 09:42:53.687350047 +0200
@@ -204,8 +204,8 @@
 
 # Define preprocessor variables specifying where items will be installed. This is
 # needed to set up the MATERIAL_DIR variable which is used to load application resources
-DEFINES += BIN_DIR=\"$$BIN_DIR\"
-DEFINES += DATA_DIR=\"$$DATA_DIR\"
+DEFINES += BIN_DIR=\\\"$$BIN_DIR\\\"
+DEFINES += DATA_DIR=\\\"$$DATA_DIR\\\"
 
 # xcopy is needed to properly copy directories in Windows
 # /Y - supress overwrite confirm messages
@@ -525,3 +525,5 @@
 } else {
   message('-> Constructing Makefile, when done run "make"    ')
 }
+#The following line was inserted by qt3to4
+QT += xml  qt3support 
diff -urN albumshaper_2.1_src/src/backend/album.cpp albumshaper_2.1_src-qt4/src/backend/album.cpp
--- albumshaper_2.1_src/src/backend/album.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/backend/album.cpp	2014-06-05 09:42:36.142569387 +0200
@@ -16,7 +16,7 @@
 #include <time.h>
 #include <qfile.h>
 #include <qfileinfo.h>
-#include <qtextstream.h>
+#include <q3textstream.h>
 #include <qdom.h>
 #include <qdir.h>
 #include <qapplication.h>
@@ -301,7 +301,7 @@
   QFile albumFile( fileName );
 
   //unable to open xml file? alert user
-  if( !albumFile.open( IO_ReadOnly ) )
+  if( !albumFile.open( QIODevice::ReadOnly ) )
     return ALBUM_READ_ERROR;
 
   //parse dom
@@ -805,12 +805,12 @@
 
   //create/open xml file
   QFile file( exportPath + "/Album.xml" );
-  if(file.open(IO_WriteOnly))
+  if(file.open(QIODevice::WriteOnly))
   {
     //-----
-    QTextStream stream;
+    Q3TextStream stream;
     stream.setDevice( &file );
-    stream.setEncoding( QTextStream::UnicodeUTF8 );
+    stream.setEncoding( Q3TextStream::UnicodeUTF8 );
     
     //write album information
     stream << "<?xml version=\"1.0\"?>\n";
diff -urN albumshaper_2.1_src/src/backend/album.h albumshaper_2.1_src-qt4/src/backend/album.h
--- albumshaper_2.1_src/src/backend/album.h	2014-06-05 09:42:13.221855935 +0200
+++ albumshaper_2.1_src-qt4/src/backend/album.h	2014-06-05 09:42:36.435565724 +0200
@@ -1,3 +1,5 @@
+//Added by qt3to4:
+#include <QPixmap>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
diff -urN albumshaper_2.1_src/src/backend/enhancements/color.cpp albumshaper_2.1_src-qt4/src/backend/enhancements/color.cpp
--- albumshaper_2.1_src/src/backend/enhancements/color.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/backend/enhancements/color.cpp	2014-06-05 09:57:47.247179012 +0200
@@ -17,6 +17,9 @@
 #include "color.h"
 #include "../../gui/statusWidget.h"
 
+#define MIN(x,y) ((x) < (y) ? (x) : (y))
+#define MAX(x,y) ((x) > (y) ? (x) : (y))
+
 //----------------------------------------------
 // Inputs:
 // -------
@@ -189,9 +192,9 @@
       if(indexHighG != indexLowG) { g = (255*(g-indexLowG))/(indexHighG-indexLowG); }
       if(indexHighB != indexLowB) { b = (255*(b-indexLowB))/(indexHighB-indexLowB); }
         
-      int rp = (int) QMIN( QMAX(r, 0), 255 );
-      int gp = (int) QMIN( QMAX(g, 0), 255 );
-      int bp = (int) QMIN( QMAX(b, 0), 255 );
+      int rp = (int) MIN( MAX(r, 0), 255 );
+      int gp = (int) MIN( MAX(g, 0), 255 );
+      int bp = (int) MIN( MAX(b, 0), 255 );
       
       //set adjusted color value
       *rgb = qRgb(rp,gp,bp);
diff -urN albumshaper_2.1_src/src/backend/enhancements/contrast.cpp albumshaper_2.1_src-qt4/src/backend/enhancements/contrast.cpp
--- albumshaper_2.1_src/src/backend/enhancements/contrast.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/backend/enhancements/contrast.cpp	2014-06-05 09:58:42.961482487 +0200
@@ -18,6 +18,9 @@
 #include "../tools/imageTools.h"
 #include "../../gui/statusWidget.h"
 
+#define MIN(x,y) ((x) < (y) ? (x) : (y))
+#define MAX(x,y) ((x) < (y) ? (x) : (y))
+
 //----------------------------------------------
 // Inputs:
 // -------
@@ -192,9 +195,9 @@
         
         //convert adjusted color back to rgb colorspace and clamp
         HSVtoRGB( &r,&g,&b, h,s,v);         
-        int rp = (int) QMIN( QMAX((r*255), 0), 255 );
-        int gp = (int) QMIN( QMAX((g*255), 0), 255 );
-        int bp = (int) QMIN( QMAX((b*255), 0), 255 );
+        int rp = (int) MIN( MAX((r*255), 0), 255 );
+        int gp = (int) MIN( MAX((g*255), 0), 255 );
+        int bp = (int) MIN( MAX((b*255), 0), 255 );
         
         //set adjusted color value
         *rgb = qRgb(rp,gp,bp);
diff -urN albumshaper_2.1_src/src/backend/enhancements/redEye_internal.h albumshaper_2.1_src-qt4/src/backend/enhancements/redEye_internal.h
--- albumshaper_2.1_src/src/backend/enhancements/redEye_internal.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/backend/enhancements/redEye_internal.h	2014-06-05 09:42:36.442565637 +0200
@@ -12,7 +12,7 @@
 #define BACKEND_ENHANCEMENTS_REDEYE_INTERNAL_H
 
 #include <qimage.h>
-#include <qvaluestack.h>
+#include <q3valuestack.h>
 #include <qpoint.h>
 
 //--------------------
@@ -51,11 +51,11 @@
 
 int* regionOfInterest;
 void pushPixel(int x, int y, int id);
-QValueStack<QPoint> spreadablePixels;
+Q3ValueStack<QPoint> spreadablePixels;
 
-QValueStack<int> blobIDs;
-QValueStack<int> blobSizes;
-QValueStack<double> blobAspectRatios;  
+Q3ValueStack<int> blobIDs;
+Q3ValueStack<int> blobSizes;
+Q3ValueStack<double> blobAspectRatios;  
 //-------  
 //sort blob list by decreasing size (pixel count)
 void sortBlobsByDecreasingSize();
diff -urN albumshaper_2.1_src/src/backend/enhancements/tilt.cpp albumshaper_2.1_src-qt4/src/backend/enhancements/tilt.cpp
--- albumshaper_2.1_src/src/backend/enhancements/tilt.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/backend/enhancements/tilt.cpp	2014-06-05 09:59:22.814984250 +0200
@@ -14,6 +14,9 @@
 #include <qapplication.h>
 #include <math.h>
 
+#define MIN(x,y) ((x) < (y) ? (x) : (y))
+#define MAX(x,y) ((x) < (y) ? (x) : (y))
+
 //Projectwide includes
 #include "tilt.h"
 #include "tilt_internal.h"
@@ -244,11 +247,11 @@
   DPoint safeBottomRight = findTwoLineIntersection( center, trueBottomRight, rightEdgeB, bottomEdgeR );
   
   //find constrained area
-  double minY = QMAX( safeTopLeft.y(), safeTopRight.y() );
-  double maxY = QMIN( safeBottomLeft.y(), safeBottomRight.y() );
+  double minY = MAX( safeTopLeft.y(), safeTopRight.y() );
+  double maxY = MIN( safeBottomLeft.y(), safeBottomRight.y() );
   
-  double minX = QMAX( safeTopLeft.x(), safeBottomLeft.x() );
-  double maxX = QMIN( safeTopRight.x(), safeBottomRight.x() );
+  double minX = MAX( safeTopLeft.x(), safeBottomLeft.x() );
+  double maxX = MIN( safeTopRight.x(), safeBottomRight.x() );
 
   //find contrained area in integer coordinates. this is semi-tricky.
   //if the minimum values decimal porition is nonzero then increment by one 
@@ -359,9 +362,9 @@
 QRgb blendColors( QRgb color1, QRgb color2, double alpha )
 {
   double alpha2 = 1.0-alpha;
-  return qRgb( (int) QMAX( QMIN( 255, alpha2*qRed  (color1) + alpha*qRed(color2)   ), 0 ),
-               (int) QMAX( QMIN( 255, alpha2*qGreen(color1) + alpha*qGreen(color2) ), 0 ),
-               (int) QMAX( QMIN( 255, alpha2*qBlue (color1) + alpha*qBlue(color2)  ), 0 ) );
+  return qRgb( (int) MAX( MIN( 255, alpha2*qRed  (Qt::color1) + alpha*qRed(color2)   ), 0 ),
+               (int) MAX( MIN( 255, alpha2*qGreen(Qt::color1) + alpha*qGreen(color2) ), 0 ),
+               (int) MAX( MIN( 255, alpha2*qBlue (Qt::color1) + alpha*qBlue(color2)  ), 0 ) );
 }
 //==============================================
 DPoint findTwoLineIntersection(DPoint p1, DPoint p2,
diff -urN albumshaper_2.1_src/src/backend/manipulations/edgeDetect.cpp albumshaper_2.1_src-qt4/src/backend/manipulations/edgeDetect.cpp
--- albumshaper_2.1_src/src/backend/manipulations/edgeDetect.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/backend/manipulations/edgeDetect.cpp	2014-06-05 10:01:34.070343332 +0200
@@ -18,6 +18,9 @@
 #include "blur.h"
 #include "../enhancements/contrast.h"
 
+#define MIN(x,y) ((x) < (y) ? (x) : (y))
+#define MAX(x,y) ((x) < (y) ? (x) : (y))
+
 //----------------------------------------------
 // Inputs:
 // -------
@@ -421,8 +424,8 @@
 //==============================================
 int EdgeDetect::pixelLum(int x, int y)
 {
-  int clampedX = QMAX( QMIN( x, image->width()-1), 0);
-  int clampedY = QMAX( QMIN( y, image->height()-1), 0);
+  int clampedX = MAX( MIN( x, image->width()-1), 0);
+  int clampedY = MAX( MIN( y, image->height()-1), 0);
   return lumMap[ clampedX + clampedY * image->width() ];
 }
 //==============================================
@@ -536,7 +539,7 @@
     
     //mark peaks  
     int lumJND = 255/50;
-    for(i=QMAX(0, maxIndex-lumJND); i<QMIN(256, maxIndex+lumJND); i++)
+    for(i=MAX(0, maxIndex-lumJND); i<MIN(256, maxIndex+lumJND); i++)
     { 
       clusterPeaks[i] = 1; 
     }
@@ -575,7 +578,7 @@
       {      
         clusters[cluster].totalEdgeMagnitude+= edgeMagMap[i]; 
         clusters[cluster].numPixels++;
-        clusters[cluster].edgeMagHistogram[ QMIN( QMAX( (int)edgeMagMap[i], 0), 255) ]++;
+        clusters[cluster].edgeMagHistogram[ MIN( MAX( (int)edgeMagMap[i], 0), 255) ]++;
         break;
       }
     } //cluster
@@ -597,7 +600,7 @@
   int JND = 255/50;
   for(cluster=0; cluster<numClusters; cluster++)
   {
-    clusters[cluster].meanMode = QMIN( clusters[cluster].totalEdgeMagnitude / clusters[cluster].numPixels,
+    clusters[cluster].meanMode = MIN( clusters[cluster].totalEdgeMagnitude / clusters[cluster].numPixels,
                                        3*JND );
     
     int i;
@@ -607,7 +610,7 @@
       if( clusters[cluster].edgeMagHistogram[i] > clusters[cluster].edgeMagHistogram[ mode ] )
         mode = i;
     }
-    clusters[cluster].mode = QMIN( mode, 2*JND );
+    clusters[cluster].mode = MIN( mode, 2*JND );
         
     clusters[cluster].pixelCount = ((float)(clusters[cluster].numPixels - minClusterSize)) / 
                                    (maxClusterSize - minClusterSize);  
@@ -631,26 +634,26 @@
     //----
     //compute S,M, and L values for each input
     //----
-    S1 = QMAX( 1.0f - ((clusters[cluster].meanMode/JND) / 1.5f), 0 );
+    S1 = MAX( 1.0f - ((clusters[cluster].meanMode/JND) / 1.5f), 0 );
 
     if( (clusters[cluster].meanMode/JND) <= 1.5f )
-      M1 = QMAX( (clusters[cluster].meanMode/JND) - 0.5f, 0 );
+      M1 = MAX( (clusters[cluster].meanMode/JND) - 0.5f, 0 );
     else
-      M1 = QMAX( 2.5f - (clusters[cluster].meanMode/JND), 0 );
+      M1 = MAX( 2.5f - (clusters[cluster].meanMode/JND), 0 );
     
-    L1 = QMAX( ((clusters[cluster].meanMode/JND) - 1.5f) / 1.5f, 0 );
+    L1 = MAX( ((clusters[cluster].meanMode/JND) - 1.5f) / 1.5f, 0 );
     //----
-    S2 = QMAX( 1.0f - (clusters[cluster].mode/JND), 0 );
+    S2 = MAX( 1.0f - (clusters[cluster].mode/JND), 0 );
     
     if( (clusters[cluster].mode/JND) <= 1.0f )
-      M2 = QMAX( -1.0f + 2*(clusters[cluster].mode/JND), 0 );
+      M2 = MAX( -1.0f + 2*(clusters[cluster].mode/JND), 0 );
     else
-      M2 = QMAX( 3.0f - 2*(clusters[cluster].mode/JND), 0 );
+      M2 = MAX( 3.0f - 2*(clusters[cluster].mode/JND), 0 );
     
-    L2 = QMAX( (clusters[cluster].mode/JND) - 1.0, 0 );
+    L2 = MAX( (clusters[cluster].mode/JND) - 1.0, 0 );
     //----
-    S3 = QMAX( 1.0f - 2*clusters[cluster].pixelCount, 0 );
-    L3 = QMAX( -1.0f + 2*clusters[cluster].pixelCount, 0 );
+    S3 = MAX( 1.0f - 2*clusters[cluster].pixelCount, 0 );
+    L3 = MAX( -1.0f + 2*clusters[cluster].pixelCount, 0 );
     //----
     
     //Compute M,L for outputs using set of 18 rules.
diff -urN albumshaper_2.1_src/src/backend/manipulations/emboss.cpp albumshaper_2.1_src-qt4/src/backend/manipulations/emboss.cpp
--- albumshaper_2.1_src/src/backend/manipulations/emboss.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/backend/manipulations/emboss.cpp	2014-06-05 10:02:04.560962147 +0200
@@ -14,6 +14,9 @@
 #include <qapplication.h>
 #include <math.h>
 
+#define MIN(x,y) ((x) < (y) ? (x) : (y))
+#define MAX(x,y) ((x) < (y) ? (x) : (y))
+
 //Projectwide includes
 #include "emboss.h"
 #include "manipulationOptions.h"
@@ -127,23 +130,23 @@
   int yPrev, yNext, xPrev, xNext;
   
   //compute the radius using image resolution
-  double minDimen = (double) QMIN( editedImage->width(), editedImage->height() );  
-  const int embossRadius = (int) QMAX( 1, (sqrt(minDimen)/8) );
+  double minDimen = (double) MIN( editedImage->width(), editedImage->height() );  
+  const int embossRadius = (int) MAX( 1, (sqrt(minDimen)/8) );
   
   for( y=0; y<editedImage->height(); y++)
   {   
     scanLine = originalImage.scanLine(y);
 
     //compute previous and next y pixel coordinates
-    yPrev = QMAX( y-embossRadius, 0 );
-    yNext = QMIN( y+embossRadius, editedImage->height() - 1 );
+    yPrev = MAX( y-embossRadius, 0 );
+    yNext = MIN( y+embossRadius, editedImage->height() - 1 );
     
     //iterate over each selected pixel in scanline
     for( x=0; x<editedImage->width(); x++)
     {
       //compute previous and next x  pixel coordinates
-      xPrev = QMAX( x-embossRadius, 0 );
-      xNext = QMIN( x+embossRadius, editedImage->width() - 1 );
+      xPrev = MAX( x-embossRadius, 0 );
+      xNext = MIN( x+embossRadius, editedImage->width() - 1 );
 
       //start with a default luminance of 128 (50% luminance)
       int sum = 128;
@@ -162,7 +165,7 @@
       sum+= qGray( *((QRgb*)scanLine + xNext ) );
       
       //clamp sum to within 0-255 range
-      sum = QMAX( QMIN( sum, 255), 0 );
+      sum = MAX( MIN( sum, 255), 0 );
 
       //get original pixel color in HSV space
       scanLine = editedImage->scanLine(y);            
@@ -180,9 +183,9 @@
       
       //convert adjusted color back to rgb colorspace and clamp
       HSVtoRGB( &r,&g,&b, h,s,v);         
-      int rp = (int) QMIN( QMAX((r*255), 0), 255 );
-      int gp = (int) QMIN( QMAX((g*255), 0), 255 );
-      int bp = (int) QMIN( QMAX((b*255), 0), 255 );
+      int rp = (int) MIN( MAX((r*255), 0), 255 );
+      int gp = (int) MIN( MAX((g*255), 0), 255 );
+      int bp = (int) MIN( MAX((b*255), 0), 255 );
       
       //set adjusted color value
       *rgb = qRgb(rp,gp,bp);
diff -urN albumshaper_2.1_src/src/backend/manipulations/mosaic.cpp albumshaper_2.1_src-qt4/src/backend/manipulations/mosaic.cpp
--- albumshaper_2.1_src/src/backend/manipulations/mosaic.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/backend/manipulations/mosaic.cpp	2014-06-05 10:04:12.166366860 +0200
@@ -16,6 +16,9 @@
 #include <time.h>
 #include <math.h>
 
+#define MIN(x,y) ((x) < (y) ? (x) : (y))
+#define MAX(x,y) ((x) < (y) ? (x) : (y))
+
 //Projectwide includes
 #include "mosaic.h"
 #include "manipulationOptions.h"
@@ -414,7 +417,7 @@
 {
   //---------------------------------  
   //setup number of initialized tiles
-  imageTiles.numInitialized = QMIN(files.size(), MAX_TILES);
+  imageTiles.numInitialized = MIN(files.size(), MAX_TILES);
   //---------------------------------  
   //create file index list, we'll use this to construct a
   //list of indices to the randomply picked files from the master list
@@ -482,7 +485,7 @@
 
   //resetting numInitialized should not be necessary, we should have the right
   //number of files in chosenFiles, but as a sanity check, we'll reset it here again.
-  imageTiles.numInitialized = QMIN((int)chosenFiles.size(), imageTiles.numInitialized);
+  imageTiles.numInitialized = MIN((int)chosenFiles.size(), imageTiles.numInitialized);
 
   //---------------------------------  
   //free up the temporary index list, it's nolonger needed since we now have an
@@ -520,7 +523,7 @@
     
     //scaleImage does not like to scale more than 2x, so if image is not the right size scale it up again
     if( scaledImage.width() != tileSize.width() || scaledImage.height() != tileSize.height() )
-      scaledImage = scaledImage.scale( tileSize, QImage::ScaleFree );
+      scaledImage = scaledImage.scaled( tileSize, Qt::IgnoreAspectRatio );
     
     //construct tile image
     imageTiles.tiles[tile].image.create( tileSize.width(), tileSize.height(), 32);
@@ -605,9 +608,9 @@
   //------------------------------  
   //dermine boundary we'll be iterating over
   int xMin = 0; 
-  int xMax = QMIN( tileSet->tiles[0].image.width(),   image->width() - topLeftCorner.x() );
+  int xMax = MIN( tileSet->tiles[0].image.width(),   image->width() - topLeftCorner.x() );
   int yMin = 0;
-  int yMax = QMIN( tileSet->tiles[0].image.height(), image->height() - topLeftCorner.y() );
+  int yMax = MIN( tileSet->tiles[0].image.height(), image->height() - topLeftCorner.y() );
   //------------------------------   
   //find most common hue, and average color, saturation and luminance for this portion of the image 
   double avgR=0; double avgG=0; double avgB=0;
@@ -630,7 +633,7 @@
       
       int h,s,l;
       color.getHsv( &h, &s, &l );
-      hueHist[ QMIN( QMAX(h,0), 360 ) ]++;
+      hueHist[ MIN( MAX(h,0), 360 ) ]++;
       avgS += s;
       avgL += l;
     }
@@ -681,7 +684,7 @@
   double epsilon = 0.000000001;
   for(i=0; i<tileSet->numInitialized; i++)
   {
-    distances[i] = 1.0 / QMAX(distances[i], epsilon);
+    distances[i] = 1.0 / MAX(distances[i], epsilon);
     sum += distances[i];
   } 
 
@@ -728,8 +731,8 @@
       
       //adjust saturation and luminance to more closely match the average values
       //found in this region of the target image.
-      s = (int)QMIN( QMAX( s+sInc, 0), 255 );
-      l = (int)QMIN( QMAX( l+lInc, 0), 255 );
+      s = (int)MIN( MAX( s+sInc, 0), 255 );
+      l = (int)MIN( MAX( l+lInc, 0), 255 );
       
       //convert back to rgb
       color.setHsv( mostCommonHue, s, l );
diff -urN albumshaper_2.1_src/src/backend/manipulations/painting.cpp albumshaper_2.1_src-qt4/src/backend/manipulations/painting.cpp
--- albumshaper_2.1_src/src/backend/manipulations/painting.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/backend/manipulations/painting.cpp	2014-06-05 10:04:39.848020792 +0200
@@ -14,6 +14,9 @@
 #include <qapplication.h>
 #include <math.h>
 
+#define MIN(x,y) ((x) < (y) ? (x) : (y))
+#define MAX(x,y) ((x) < (y) ? (x) : (y))
+
 //Projectwide includes
 #include "painting.h"
 #include "manipulationOptions.h"
@@ -141,8 +144,8 @@
   }
   
   //compute the radius using image resolution
-  double minDimen = (double) QMIN( editedImage->width(), editedImage->height() );  
-  const int RADIUS = (int) QMAX( 2, (sqrt(minDimen)/4) );
+  double minDimen = (double) MIN( editedImage->width(), editedImage->height() );  
+  const int RADIUS = (int) MAX( 2, (sqrt(minDimen)/4) );
   
   //iterate over image
   int originalImageX, originalImageY;
@@ -167,14 +170,14 @@
         originalImageY <= 0 - 1 + RADIUS; 
         originalImageY++)
     {
-      clampedY = QMAX( QMIN( originalImageY, originalImage.height() - 1 ), 0 );        
+      clampedY = MAX( MIN( originalImageY, originalImage.height() - 1 ), 0 );        
       scanLine = originalImage.scanLine( clampedY );
       
       for(originalImageX =  editedImageX - RADIUS;
           originalImageX <= editedImageX + RADIUS; 
           originalImageX++)
       {
-        clampedX = QMAX( QMIN( originalImageX, originalImage.width() - 1 ), 0 );
+        clampedX = MAX( MIN( originalImageX, originalImage.width() - 1 ), 0 );
         
         //get rgb value
         rgb = ((QRgb*)scanLine+clampedX);
@@ -190,8 +193,8 @@
     //now iterate over rows by simply removing trailing edge data and adding leading edge data
     for( editedImageY=0; editedImageY < editedImage->height(); editedImageY++)
     {             
-      trailingEdgeY = QMAX( QMIN( editedImageY-1-RADIUS, originalImage.height() - 1 ), 0 );        
-      leadingEdgeY  = QMAX( QMIN( editedImageY+RADIUS, originalImage.height() - 1 ), 0 );        
+      trailingEdgeY = MAX( MIN( editedImageY-1-RADIUS, originalImage.height() - 1 ), 0 );        
+      leadingEdgeY  = MAX( MIN( editedImageY+RADIUS, originalImage.height() - 1 ), 0 );        
     
       trailingScanLine = originalImage.scanLine( trailingEdgeY );
       leadingScanLine  = originalImage.scanLine( leadingEdgeY );
@@ -200,7 +203,7 @@
           originalImageX <= editedImageX + RADIUS; 
           originalImageX++)
       {
-        clampedX = QMAX( QMIN( originalImageX, originalImage.width() - 1 ), 0 );
+        clampedX = MAX( MIN( originalImageX, originalImage.width() - 1 ), 0 );
        
         //remove trail edge data
         rgb = ((QRgb*)trailingScanLine+clampedX);
diff -urN albumshaper_2.1_src/src/backend/manipulations/sharpen.cpp albumshaper_2.1_src-qt4/src/backend/manipulations/sharpen.cpp
--- albumshaper_2.1_src/src/backend/manipulations/sharpen.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/backend/manipulations/sharpen.cpp	2014-06-05 10:05:02.903732556 +0200
@@ -12,6 +12,9 @@
 #include <qimage.h>
 #include <qstring.h>
 
+#define MIN(x,y) ((x) < (y) ? (x) : (y))
+#define MAX(x,y) ((x) < (y) ? (x) : (y))
+
 //Projectwide includes
 #include "sharpen.h"
 #include "blur.h"
@@ -151,13 +154,13 @@
       RGBtoHSV(r2,g2,b2,&h2,&s2,&v2);
       
       //reset v
-      v1  = (alpha * QMIN( QMAX(2*v1 - v2, 0), 1.0 )) + (1-alpha)*v1;
+      v1  = (alpha * MIN( MAX(2*v1 - v2, 0), 1.0 )) + (1-alpha)*v1;
       
       //convert adjusted color back to rgb colorspace and clamp
       HSVtoRGB( &r1,&g1,&b1, h1,s1,v1);         
-      int rp = (int) QMIN( QMAX((r1*255), 0), 255 );
-      int gp = (int) QMIN( QMAX((g1*255), 0), 255 );
-      int bp = (int) QMIN( QMAX((b1*255), 0), 255 );
+      int rp = (int) MIN( MAX((r1*255), 0), 255 );
+      int gp = (int) MIN( MAX((g1*255), 0), 255 );
+      int bp = (int) MIN( MAX((b1*255), 0), 255 );
       
       //set adjusted color value
       *origRgb = qRgb(rp,gp,bp);
diff -urN albumshaper_2.1_src/src/backend/photo.cpp albumshaper_2.1_src-qt4/src/backend/photo.cpp
--- albumshaper_2.1_src/src/backend/photo.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/backend/photo.cpp	2014-06-05 09:47:12.095119505 +0200
@@ -11,11 +11,12 @@
 #include <qpixmap.h>
 #include <qimage.h>
 #include <qstring.h>
-#include <qtextstream.h>
+#include <q3textstream.h>
 #include <qdom.h>
 #include <qdir.h>
 #include <qfileinfo.h>
 #include <qregexp.h>
+#include <QDateTime>
 
 //Projectwide includes
 #include "photo.h"
@@ -410,7 +411,7 @@
   return modified;
 }
 //==============================================
-void Photo::exportToXML(QTextStream& stream)
+void Photo::exportToXML(Q3TextStream& stream)
 {
   QFileInfo info;
 
diff -urN albumshaper_2.1_src/src/backend/photo.h albumshaper_2.1_src-qt4/src/backend/photo.h
--- albumshaper_2.1_src/src/backend/photo.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/backend/photo.h	2014-06-05 09:42:36.439565674 +0200
@@ -20,6 +20,9 @@
 //this is a temporary hack, I the enum for photo transofmrations need to be revealed
 //to all classes that include photo.h becaue one private function uses thsi enum, DAMN
 #include "tools/imageTools.h"
+//Added by qt3to4:
+#include <QPixmap>
+#include <Q3TextStream>
 
 //--------------------
 //forward declarations
@@ -126,7 +129,7 @@
   QDateTime* importFromDisk(QDomNode* root);
   
   ///Exports photo to xml
-  void exportToXML(QTextStream& stream);
+  void exportToXML(Q3TextStream& stream);
   //------------------------------------------
   ///Rotates image clockwise 90 degrees
   void rotate90();
diff -urN albumshaper_2.1_src/src/backend/recentAlbums.cpp albumshaper_2.1_src-qt4/src/backend/recentAlbums.cpp
--- albumshaper_2.1_src/src/backend/recentAlbums.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/backend/recentAlbums.cpp	2014-06-05 09:54:11.054881788 +0200
@@ -66,13 +66,22 @@
   else
   {
     //prepend item
-    QStringList::Iterator namesIterator       = ++albumNames.prepend       ( name     );
-    QStringList::Iterator locationsIterator   = ++albumLocations.prepend   ( location );
-    QStringList::Iterator photoCountsIterator = ++albumPhotoCounts.prepend ( photos   );
+    albumNames.prepend(name);
+    albumLocations.prepend(location);
+    albumPhotoCounts.prepend(photos);
+
+    QStringList::Iterator namesIterator=albumNames.find(name);
+    QStringList::Iterator locationsIterator=albumLocations.find(location);
+    QStringList::Iterator photoCountsIterator=albumPhotoCounts.find(photos);
 
     //search list for dupes
     while( true )
     {
+      //move to next item.
+      namesIterator++;
+      locationsIterator++;
+      photoCountsIterator++; 
+
       //if location matches remove item
       if( location.compare(*locationsIterator) == 0 )
       {
@@ -84,11 +93,6 @@
 
       //end of list? stop
       if( namesIterator == albumNames.end() ) break;
-      
-      //move to next item.
-      namesIterator++;
-      locationsIterator++;
-      photoCountsIterator++; 
     }
 
   }//end else
diff -urN albumshaper_2.1_src/src/backend/subalbum.cpp albumshaper_2.1_src-qt4/src/backend/subalbum.cpp
--- albumshaper_2.1_src/src/backend/subalbum.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/backend/subalbum.cpp	2014-06-05 09:46:51.006383151 +0200
@@ -12,12 +12,13 @@
 #include <qimage.h>
 #include <qpixmap.h>
 #include <qstring.h>
-#include <qtextstream.h>
+#include <q3textstream.h>
 #include <qdom.h>
 #include <fstream>
 #include <qdir.h>
 #include <qregexp.h>
 #include <qapplication.h>
+#include <QDateTime>
 
 //Projectwide includes
 #include "album.h"
@@ -309,7 +310,7 @@
   albm->setModified();
 }
 //==============================================
-void Subalbum::exportToXML(StatusWidget*, QTextStream& stream)
+void Subalbum::exportToXML(StatusWidget*, Q3TextStream& stream)
 {
   //write subalbum information
   stream << "  <subalbum>\n";
diff -urN albumshaper_2.1_src/src/backend/subalbum.h albumshaper_2.1_src-qt4/src/backend/subalbum.h
--- albumshaper_2.1_src/src/backend/subalbum.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/backend/subalbum.h	2014-06-05 09:42:36.437565699 +0200
@@ -1,3 +1,6 @@
+//Added by qt3to4:
+#include <QPixmap>
+#include <Q3TextStream>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
@@ -110,7 +113,7 @@
   Photo* getLast();
 
   ///Exports subalbum to xml
-  void exportToXML(StatusWidget* status, QTextStream& stream);
+  void exportToXML(StatusWidget* status, Q3TextStream& stream);
 
   ///Builds subalbum from XML DOM node
   void importFromDisk(QDomNode* root, int subalbumNum,
diff -urN albumshaper_2.1_src/src/backend/tools/fileTools.cpp albumshaper_2.1_src-qt4/src/backend/tools/fileTools.cpp
--- albumshaper_2.1_src/src/backend/tools/fileTools.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/backend/tools/fileTools.cpp	2014-06-05 09:42:36.178568937 +0200
@@ -67,8 +67,8 @@
   //load both files
   QFile oldFile(oldFilePath);
   QFile newFile(newFilePath);
-  bool openOld = oldFile.open( IO_ReadOnly );
-  bool openNew = newFile.open( IO_WriteOnly );
+  bool openOld = oldFile.open( QIODevice::ReadOnly );
+  bool openNew = newFile.open( QIODevice::WriteOnly );
 
   //if either file fails to open bail
   if(!openOld || !openNew) { return false; }
diff -urN albumshaper_2.1_src/src/backend/tools/guiTools.cpp albumshaper_2.1_src-qt4/src/backend/tools/guiTools.cpp
--- albumshaper_2.1_src/src/backend/tools/guiTools.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/backend/tools/guiTools.cpp	2014-06-05 10:05:19.438525842 +0200
@@ -14,6 +14,7 @@
 #include <qstring.h>
 #include <qstringlist.h>
 #include <qpixmap.h>
+#include <QDesktopWidget>
 
 //Projectwide includes
 #include "guiTools.h"
diff -urN albumshaper_2.1_src/src/backend/tools/guiTools.h albumshaper_2.1_src-qt4/src/backend/tools/guiTools.h
--- albumshaper_2.1_src/src/backend/tools/guiTools.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/backend/tools/guiTools.h	2014-06-05 09:42:36.449565549 +0200
@@ -12,7 +12,9 @@
 #define BACKEND_TOOLS_GUITOOLS_H
 
 #include <qlabel.h>
-#include <qfiledialog.h>
+#include <q3filedialog.h>
+//Added by qt3to4:
+#include <QPixmap>
 
 //--------------------
 //forward declarations
diff -urN albumshaper_2.1_src/src/backend/tools/imageTools.cpp albumshaper_2.1_src-qt4/src/backend/tools/imageTools.cpp
--- albumshaper_2.1_src/src/backend/tools/imageTools.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/backend/tools/imageTools.cpp	2014-06-05 10:06:25.686697626 +0200
@@ -95,7 +95,7 @@
  
   //create slideshow image and fill with white
   slideshowImage.create( SLIDESHOW_WIDTH, SLIDESHOW_HEIGHT, 32 );
-  slideshowImage.fill( Qt::white.rgb() );
+  slideshowImage.fill( QColor(Qt::white).rgb() );
   
   //paint unpadded scaled image
   int xDiff = SLIDESHOW_WIDTH - slideWidth;
@@ -185,7 +185,7 @@
     targetHeight = 2*orig.height();
   }
   
-  scaledImage = orig.smoothScale( targetWidth, targetHeight, QImage::ScaleMin );
+  scaledImage = orig.smoothScale( targetWidth, targetHeight, Qt::KeepAspectRatio );
   return true;
 }
 //==============================================
diff -urN albumshaper_2.1_src/src/backend/tools/jpeg/jpegTools.cpp albumshaper_2.1_src-qt4/src/backend/tools/jpeg/jpegTools.cpp
--- albumshaper_2.1_src/src/backend/tools/jpeg/jpegTools.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/backend/tools/jpeg/jpegTools.cpp	2014-06-05 09:42:36.195568724 +0200
@@ -168,7 +168,7 @@
       clampedTargetHeight = 2*origHeight;
     }
     
-    scaledImage = scaledImage.smoothScale(clampedTargetWidth, clampedTargetHeight, QImage::ScaleMin);
+    scaledImage = scaledImage.smoothScale(clampedTargetWidth, clampedTargetHeight, Qt::KeepAspectRatio);
   }
   jpeg_destroy_decompress(&cinfo);
   fclose(inputFile);
diff -urN albumshaper_2.1_src/src/backend/tools/wallpaperTools.cpp albumshaper_2.1_src-qt4/src/backend/tools/wallpaperTools.cpp
--- albumshaper_2.1_src/src/backend/tools/wallpaperTools.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/backend/tools/wallpaperTools.cpp	2014-06-05 10:05:35.366326717 +0200
@@ -13,9 +13,12 @@
 #include <qimage.h>
 #include <qapplication.h>
 #include <qdir.h>
-#include <qprocess.h>
+#include <q3process.h>
 #include <qfile.h>
 #include <qdir.h>
+//Added by qt3to4:
+#include <Q3TextStream>
+#include <QDesktopWidget>
 
 //PLATFORM_SPECIFIC_CODE
 #if defined(Q_OS_WIN)
@@ -171,12 +174,12 @@
     "/tmpBackgroundScript";
 
   QFile file( scriptFilename );
-  if(file.open(IO_WriteOnly))
+  if(file.open(QIODevice::WriteOnly))
   {
     //-----
-    QTextStream stream;
+    Q3TextStream stream;
     stream.setDevice( &file );
-    stream.setEncoding( QTextStream::UnicodeUTF8 );
+    stream.setEncoding( Q3TextStream::UnicodeUTF8 );
     //-----
     stream << "tell application \"Finder\"\n";
     stream << "set pFile to POSIX file \"" << chosenFilename.ascii() << "\"\n";
@@ -186,7 +189,7 @@
   file.close();
   
   //run script to set background
-  QProcess p;
+  Q3Process p;
   p.addArgument( "/usr/bin/osascript" );
   p.addArgument( scriptFilename );
   p.start();
@@ -201,7 +204,7 @@
 
   //first try setting KDE background through DCOP interface
   {
-    QProcess p;   
+    Q3Process p;   
     p.clearArguments();
     p.addArgument( "dcop" );
     p.addArgument( "kdesktop" );
@@ -224,7 +227,7 @@
   
   //try setting GNOME background using gconftool
   {
-    QProcess p;   
+    Q3Process p;   
     p.clearArguments();
     p.addArgument( "gconftool-2" );
     p.addArgument( "-t" );
@@ -237,7 +240,7 @@
 
   //try setting WindowMaker background using wmsetbg
   {
-    QProcess p;   
+    Q3Process p;   
     p.clearArguments();
     p.addArgument( "wmsetbg" );
     p.addArgument( "--maxscale" );
@@ -265,7 +268,7 @@
 
   //Last try, check if dcop or gconftool-2 can be used
   #else
-  QProcess p;
+  Q3Process p;
 
   p.addArgument( "dcop" );
   bool DCOP_Present = p.start();
diff -urN albumshaper_2.1_src/src/backend/tools/xmlTools.cpp albumshaper_2.1_src-qt4/src/backend/tools/xmlTools.cpp
--- albumshaper_2.1_src/src/backend/tools/xmlTools.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/backend/tools/xmlTools.cpp	2014-06-05 09:42:36.186568837 +0200
@@ -12,7 +12,7 @@
 #include <qstring.h>
 #include <qdir.h>
 #include <qfile.h>
-#include <qdragobject.h>
+#include <q3dragobject.h>
 
 #include <iostream>
 #include <string>
@@ -67,7 +67,7 @@
   //URI on OSX. We need to nail this weirdness at some point and be consistant IMHO but for now
   //this works...
 #ifndef Q_OS_WIN
-  quotedPath = QUriDrag::localFileToUri( quotedPath );  
+  quotedPath = Q3UriDrag::localFileToUri( quotedPath );  
 #endif
   
   params[1] = quotedPath.prepend('\"').append('\"').ascii();
@@ -120,7 +120,7 @@
   //URI on OSX. We need to nail this weirdness at some point and be consistant IMHO but for now
   //this works...
   #ifndef Q_OS_WIN
-  quotedPath = QUriDrag::localFileToUri( quotedPath );  
+  quotedPath = Q3UriDrag::localFileToUri( quotedPath );  
   #endif
 
 
diff -urN albumshaper_2.1_src/src/configuration/alertsWidget.cpp albumshaper_2.1_src-qt4/src/configuration/alertsWidget.cpp
--- albumshaper_2.1_src/src/configuration/alertsWidget.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/configuration/alertsWidget.cpp	2014-06-05 09:42:36.206568587 +0200
@@ -13,9 +13,11 @@
 #include <qlabel.h>
 #include <qfont.h>
 #include <qcheckbox.h>
-#include <qframe.h>
-#include <qvgroupbox.h>
+#include <q3frame.h>
+#include <q3vgroupbox.h>
 #include <qapplication.h>
+//Added by qt3to4:
+#include <Q3GridLayout>
 
 //Projectwide includes
 #include "alertsWidget.h"
@@ -35,16 +37,16 @@
   labelFont.setWeight(QFont::Bold);
   categoryLabel->setFont( labelFont );
 
-  horizontalLine = new QFrame(this);
+  horizontalLine = new Q3Frame(this);
   horizontalLine->setLineWidth(2);
   horizontalLine->setMidLineWidth(1);
-  horizontalLine->setFrameStyle( QFrame::HLine | QFrame::Raised );
+  horizontalLine->setFrameStyle( Q3Frame::HLine | Q3Frame::Raised );
 
-  behavior = new QVGroupBox( tr("Behavior"), this);
+  behavior = new Q3VGroupBox( tr("Behavior"), this);
   showDestructiveAlerts = new QCheckBox( tr("Alert me to destructive actions"), behavior);
   showSoftwareUpdateAlerts = new QCheckBox( tr("Alert me to software updates"), behavior);
 
-  grid = new QGridLayout( this, 4, 1, 0);
+  grid = new Q3GridLayout( this, 4, 1, 0);
   grid->setSpacing( WIDGET_SPACING );
 
   grid->addWidget( categoryLabel,  0, 0, Qt::AlignLeft );
diff -urN albumshaper_2.1_src/src/configuration/alertsWidget.h albumshaper_2.1_src-qt4/src/configuration/alertsWidget.h
--- albumshaper_2.1_src/src/configuration/alertsWidget.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/configuration/alertsWidget.h	2014-06-05 09:42:36.462565387 +0200
@@ -12,13 +12,17 @@
 #define CONFIGURATION_ALERTSWIDGET_H
 
 #include <qdialog.h>
+//Added by qt3to4:
+#include <Q3GridLayout>
+#include <Q3Frame>
+#include <QLabel>
 
 //forward declarations
-class QGridLayout;
+class Q3GridLayout;
 class QLabel;
-class QFrame;
+class Q3Frame;
 class QCheckBox;
-class QVGroupBox;
+class Q3VGroupBox;
 class Configuration;
 
 //=====================================
@@ -41,12 +45,12 @@
   ///Backend config object pointer
   Configuration* config;
 
-  QGridLayout* grid;
+  Q3GridLayout* grid;
 
   QLabel* categoryLabel;
-  QFrame* horizontalLine;
+  Q3Frame* horizontalLine;
 
-  QVGroupBox* behavior;
+  Q3VGroupBox* behavior;
   QCheckBox* showDestructiveAlerts;
   QCheckBox* showSoftwareUpdateAlerts;
 
diff -urN albumshaper_2.1_src/src/configuration/configuration.cpp albumshaper_2.1_src-qt4/src/configuration/configuration.cpp
--- albumshaper_2.1_src/src/configuration/configuration.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/configuration/configuration.cpp	2014-06-05 09:42:36.198568687 +0200
@@ -12,7 +12,7 @@
 #include <qdir.h>
 #include <qfile.h>
 #include <qstring.h>
-#include <qtextstream.h>
+#include <q3textstream.h>
 #include <qdom.h>
 
 #if defined(Q_OS_WIN)
@@ -270,7 +270,7 @@
   //-----------------------------------
   //attempt to load xml settings file and construct dom, if either action failes return false
   QFile settingsFile( settingsFilename );
-  if( !settingsFile.open( IO_ReadOnly ) )
+  if( !settingsFile.open( QIODevice::ReadOnly ) )
     return false;
 
   QDomDocument DOM;
@@ -346,12 +346,12 @@
 {
   //create/open html file
   QFile file( settingsFilename );
-  if(file.open(IO_WriteOnly))
+  if(file.open(QIODevice::WriteOnly))
   {
     //-----
-    QTextStream stream;
+    Q3TextStream stream;
     stream.setDevice( &file );
-    stream.setEncoding( QTextStream::UnicodeUTF8 );
+    stream.setEncoding( Q3TextStream::UnicodeUTF8 );
     
     //write header
     stream << "<settings app=\"Album Shaper\" version=\"" << ALBUMSHAPER_VERSION << "\">\n";
diff -urN albumshaper_2.1_src/src/configuration/configurationWidget.cpp albumshaper_2.1_src-qt4/src/configuration/configurationWidget.cpp
--- albumshaper_2.1_src/src/configuration/configurationWidget.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/configuration/configurationWidget.cpp	2014-06-05 09:42:36.201568649 +0200
@@ -15,6 +15,10 @@
 #include <qapplication.h>
 #include <qtooltip.h>
 #include <qpushbutton.h>
+//Added by qt3to4:
+#include <Q3GridLayout>
+#include <Q3Frame>
+#include <QCloseEvent>
 
 //Projectwide includes
 #include "configuration.h"
@@ -48,7 +52,7 @@
   //----------------------------------------------
   //create iconview and icons for groups
   groups = new GroupsWidget( this );
-  groups->setItemTextPos( QIconView::Right );
+  groups->setItemTextPos( Q3IconView::Right );
 //  groups->setMaxItemWidth(20);
   //----
   //construct group labels
@@ -88,12 +92,12 @@
   alertsWidget->hide();
   //-------------------------
   //connect selectionChanged signal to update which settings dialog is displayed
-  connect( groups, SIGNAL(selectionChanged(QIconViewItem*)),
-           SLOT(updateDialogue(QIconViewItem*)) );
+  connect( groups, SIGNAL(selectionChanged(Q3IconViewItem*)),
+           SLOT(updateDialogue(Q3IconViewItem*)) );
 
   //connect mouse over events to paint pseudo selection in ligher blue
-  connect( groups, SIGNAL(onItem(QIconViewItem*)),
-           SLOT(repaintGroup(QIconViewItem*)) );
+  connect( groups, SIGNAL(onItem(Q3IconViewItem*)),
+           SLOT(repaintGroup(Q3IconViewItem*)) );
 
   //clear any pseudo selection when mouse moves off icons
   connect( groups, SIGNAL(onViewport()),
@@ -101,7 +105,7 @@
 
 
   //create buttons frame and widgets
-  buttonsFrame = new QFrame( this );
+  buttonsFrame = new Q3Frame( this );
   okButton = new QPushButton( tr("Apply"), buttonsFrame );
   okButton->setSizePolicy( QSizePolicy::Fixed, QSizePolicy::Fixed );
   okButton->setDefault(true);
@@ -109,7 +113,7 @@
   cancelButton = new QPushButton( tr("Cancel"), buttonsFrame );
   cancelButton->setSizePolicy( QSizePolicy::Fixed, QSizePolicy::Fixed );
   connect( cancelButton, SIGNAL(clicked()), SLOT(reject()) );
-  buttonsGrid = new QGridLayout( buttonsFrame, 1, 5, 0 );
+  buttonsGrid = new Q3GridLayout( buttonsFrame, 1, 5, 0 );
   buttonsGrid->setColStretch( 0, 1 );
   buttonsGrid->addWidget( okButton, 0, 1 );
   buttonsGrid->addColSpacing( 2, 10 );
@@ -117,7 +121,7 @@
   buttonsGrid->setColStretch( 4, 1 );
   //----------------------------------------------
   //place all widgets in a grid
-  grid = new QGridLayout( this, 5, 5, 0 );
+  grid = new Q3GridLayout( this, 5, 5, 0 );
 
   grid->setRowSpacing(0,8);
 
@@ -185,7 +189,7 @@
   //----------------------------------------------
 }
 //==============================================
-void ConfigurationWidget::updateDialogue( QIconViewItem* selection)
+void ConfigurationWidget::updateDialogue( Q3IconViewItem* selection)
 {
   //hide current selection
   currentSettingsWidget->hide();
@@ -195,7 +199,7 @@
   currentSettingsWidget->show();
 }
 //==============================================
-void ConfigurationWidget::repaintGroup( QIconViewItem* pseudoSelection)
+void ConfigurationWidget::repaintGroup( Q3IconViewItem* pseudoSelection)
 {
   //if old pseudo selection unselect it
   clearPseudoSelection();
diff -urN albumshaper_2.1_src/src/configuration/configurationWidget.h albumshaper_2.1_src-qt4/src/configuration/configurationWidget.h
--- albumshaper_2.1_src/src/configuration/configurationWidget.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/configuration/configurationWidget.h	2014-06-05 09:42:36.459565424 +0200
@@ -1,3 +1,7 @@
+//Added by qt3to4:
+#include <Q3Frame>
+#include <Q3GridLayout>
+#include <QCloseEvent>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
@@ -12,12 +16,12 @@
 #define CONFIGURATION_CONFIGURATIONWIDGET_H
 
 //forward declarations
-class QGridLayout;
-class QIconView;
-class QIconViewItem;
+class Q3GridLayout;
+class Q3IconView;
+class Q3IconViewItem;
 class QPushButton;
 class GroupIcon;
-class QFrame;
+class Q3Frame;
 
 class Configuration;
 class AlertsWidget;
@@ -45,10 +49,10 @@
 //----------------------
 private slots:
 ///updates shown settings dialogue based on newly selected group
-void updateDialogue( QIconViewItem* selection);
+void updateDialogue( Q3IconViewItem* selection);
 
 ///repaints a group icon if move is moved over it
-void repaintGroup( QIconViewItem* pseudoSelection);
+void repaintGroup( Q3IconViewItem* pseudoSelection);
 
 ///clears any pseudo selections
 void clearPseudoSelection();
@@ -65,7 +69,7 @@
   Configuration* config;
 
   ///Grid widgets place in
-  QGridLayout* grid;
+  Q3GridLayout* grid;
 
   ///list of subalbums
   GroupsWidget* groups;
@@ -83,9 +87,9 @@
   GroupIcon *alertsIcon, *layoutIcon, *loadingSavingIcon;
 
   //ok and cancel buttons, frame, and grid
-  QFrame* buttonsFrame;
+  Q3Frame* buttonsFrame;
   QPushButton *okButton, *cancelButton;
-  QGridLayout*  buttonsGrid;
+  Q3GridLayout*  buttonsGrid;
 };
 //======================
 
diff -urN albumshaper_2.1_src/src/configuration/groupIcon.cpp albumshaper_2.1_src-qt4/src/configuration/groupIcon.cpp
--- albumshaper_2.1_src/src/configuration/groupIcon.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/configuration/groupIcon.cpp	2014-06-05 09:42:36.202568637 +0200
@@ -12,16 +12,16 @@
 #include <qpixmap.h>
 #include <qstring.h>
 #include <qpainter.h>
-#include <qiconview.h>
+#include <q3iconview.h>
 
 //Projectwide includes
 #include "groupIcon.h"
 #include "groupsWidget.h"
 
 //==============================================
-GroupIcon::GroupIcon( QIconView* parent, QPixmap icon, 
+GroupIcon::GroupIcon( Q3IconView* parent, QPixmap icon, 
                       QString text, QWidget* settingsWidget) :
-                      QIconViewItem(parent, text, icon)
+                      Q3IconViewItem(parent, text, icon)
 {
   this->parent = parent;
   this->settingsWidget = settingsWidget;
@@ -61,7 +61,7 @@
 
   p->drawPixmap( x()+3 , y() + ( height() - pixmap()->height() ) / 2, *pixmap());
 
-  int align = AlignLeft | WordBreak | BreakAnywhere;
+  int align = Qt::AlignLeft | Qt::TextWordWrap | Qt::TextWrapAnywhere;
   p->drawText( textRect( FALSE ), align, text());
 }
 //==============================================
diff -urN albumshaper_2.1_src/src/configuration/groupIcon.h albumshaper_2.1_src-qt4/src/configuration/groupIcon.h
--- albumshaper_2.1_src/src/configuration/groupIcon.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/configuration/groupIcon.h	2014-06-05 09:42:36.461565399 +0200
@@ -1,3 +1,5 @@
+//Added by qt3to4:
+#include <QPixmap>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
@@ -17,7 +19,7 @@
 class QString;
 //--------------------
 
-#include <qiconview.h>
+#include <q3iconview.h>
 #include <qobject.h>
 #include <qstring.h>
 
@@ -25,11 +27,11 @@
 /*! \brief Displays group icon and text, also contains pointer to widget for setting group settings
  */
 //=====================================
-class GroupIcon : public QIconViewItem
+class GroupIcon : public Q3IconViewItem
 {
 public:
   //creates icon, sets pointer to associated settings widget
-  GroupIcon( QIconView* parent,
+  GroupIcon( Q3IconView* parent,
                   QPixmap icon,
                   QString text,
                   QWidget* settingsWidget );
@@ -48,7 +50,7 @@
   //initializes item rect size
   void initializeItemRect();    
     
-  QIconView* parent;
+  Q3IconView* parent;
   QWidget* settingsWidget;
   bool mousedOver;
 
diff -urN albumshaper_2.1_src/src/configuration/groupsWidget.cpp albumshaper_2.1_src-qt4/src/configuration/groupsWidget.cpp
--- albumshaper_2.1_src/src/configuration/groupsWidget.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/configuration/groupsWidget.cpp	2014-06-05 09:42:36.202568637 +0200
@@ -9,14 +9,18 @@
 //==============================================
 
 //Systemwide includes
-#include <qiconview.h>
+#include <q3iconview.h>
+//Added by qt3to4:
+#include <QMouseEvent>
+#include <QKeyEvent>
+#include <QEvent>
 
 //Projectwide includes
 #include "groupsWidget.h"
 
 //==============================================
 GroupsWidget::GroupsWidget( QWidget* parent,
-                            const char* name ) : QIconView( parent, name)
+                            const char* name ) : Q3IconView( parent, name)
 {
   setSizePolicy( QSizePolicy::Fixed, QSizePolicy::Minimum);
 }
@@ -26,17 +30,17 @@
   //ignore all clicks other than left-clicks
   if( e->button() != Qt::LeftButton ) return;
   
-  QIconView::contentsMousePressEvent( e );
+  Q3IconView::contentsMousePressEvent( e );
 }
 //==============================================
 void GroupsWidget::keyPressEvent( QKeyEvent* e )
 {
   //change key left/right presses to up/down events
   int key = e->key();
-  if( key == Key_Left) key = Key_Up;
-  if( key == Key_Right) key = Key_Down;
+  if( key == Qt::Key_Left) key = Qt::Key_Up;
+  if( key == Qt::Key_Right) key = Qt::Key_Down;
 
-  QIconView::keyPressEvent(
+  Q3IconView::keyPressEvent(
     new QKeyEvent(QEvent::KeyPress,
               key,
               e->ascii(),
@@ -48,11 +52,11 @@
 //==============================================
 QSize GroupsWidget::sizeHint() const
 {
-  QSize s = QIconView::sizeHint();
+  QSize s = Q3IconView::sizeHint();
 
   //find max item width
   s.setWidth(0);
-  QIconViewItem *item;
+  Q3IconViewItem *item;
   for( item = firstItem(); item != NULL; item = item->nextItem() )
   {
     if(item->width() + 2 > s.width() )
diff -urN albumshaper_2.1_src/src/configuration/groupsWidget.h albumshaper_2.1_src-qt4/src/configuration/groupsWidget.h
--- albumshaper_2.1_src/src/configuration/groupsWidget.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/configuration/groupsWidget.h	2014-06-05 09:42:36.460565412 +0200
@@ -15,14 +15,17 @@
 //forward declarations
 //--------------------
 
-#include <qiconview.h>
+#include <q3iconview.h>
 #include <qobject.h>
+//Added by qt3to4:
+#include <QKeyEvent>
+#include <QMouseEvent>
 
 //=====================================
 /*! \brief Displays group icon and text, also contains pointer to widget for setting group settings
  */
 //=====================================
-class GroupsWidget : public QIconView
+class GroupsWidget : public Q3IconView
 {
 public:
   GroupsWidget( QWidget* parent=0,
diff -urN albumshaper_2.1_src/src/configuration/layoutSettingsWidget.cpp albumshaper_2.1_src-qt4/src/configuration/layoutSettingsWidget.cpp
--- albumshaper_2.1_src/src/configuration/layoutSettingsWidget.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/configuration/layoutSettingsWidget.cpp	2014-06-05 10:08:08.942406752 +0200
@@ -13,14 +13,17 @@
 #include <qlabel.h>
 #include <qfont.h>
 #include <qcheckbox.h>
-#include <qframe.h>
+#include <q3frame.h>
 #include <qslider.h>
 #include <qspinbox.h>
-#include <qvgroupbox.h>
+#include <q3vgroupbox.h>
 #include <qpushbutton.h>
 #include <qcombobox.h>
 #include <qapplication.h>
 #include <qtooltip.h>
+//Added by qt3to4:
+#include <Q3GridLayout>
+#include <QDesktopWidget>
 
 //Projectwide includes
 #include "layoutSettingsWidget.h"
@@ -41,25 +44,25 @@
   labelFont.setWeight(QFont::Bold);
   categoryLabel->setFont( labelFont );
 
-  horizontalLine = new QFrame(this);
+  horizontalLine = new Q3Frame(this);
   horizontalLine->setLineWidth(2);
   horizontalLine->setMidLineWidth(1);
-  horizontalLine->setFrameStyle( QFrame::HLine | QFrame::Raised );
+  horizontalLine->setFrameStyle( Q3Frame::HLine | Q3Frame::Raised );
   //----------------
   //General Settings:
   //-display image animations
   //-display tooltips
-  generalSettings = new QVGroupBox( tr("General"), this);
+  generalSettings = new Q3VGroupBox( tr("General"), this);
   useAnimation = new QCheckBox( tr("Use animation"), generalSettings);
   showTooltips = new QCheckBox( tr("Show tooltips"), generalSettings);
   //----------------
   //Window placement and size Settings:
   //-restore old placement and size
   //-preset default size (% of screen size) and placement
-  windowPlacementSize = new QVGroupBox( tr("Window Placement and Size"), this);
+  windowPlacementSize = new Q3VGroupBox( tr("Window Placement and Size"), this);
   restoreWindowPlacementSize = new QCheckBox( tr("Restore window placement and size"), windowPlacementSize);
 
-  sizeFrame = new QFrame(windowPlacementSize);
+  sizeFrame = new Q3Frame(windowPlacementSize);
   defaultWindowSizeLabel = new QLabel( tr("% of Screen:"), sizeFrame);
   defaultWindowSizeSlider = new QSlider(Qt::Horizontal, sizeFrame);
   defaultWindowSizeSlider->setMinValue(1);
@@ -88,7 +91,7 @@
                    this, SLOT(toggleDefaultSizeEnabled(bool)) );;
   //----------------
   //place window placement/size control in box grid
-  manualPlacementGrid = new QGridLayout( sizeFrame, 2, 3, 0);  
+  manualPlacementGrid = new Q3GridLayout( sizeFrame, 2, 3, 0);  
   manualPlacementGrid->setSpacing( WIDGET_SPACING );
 
   manualPlacementGrid->addWidget(defaultWindowSizeLabel,  0, 0);
@@ -100,7 +103,7 @@
   manualPlacementGrid->addMultiCellWidget(defaultWindowPlacement, 1, 1, 1, 2, Qt::AlignLeft);
   //----------------
   //Setup larger boxes in overall grid
-  mainGrid = new QGridLayout( this, 5, 1, 0);
+  mainGrid = new Q3GridLayout( this, 5, 1, 0);
   mainGrid->setSpacing( WIDGET_SPACING );
   
   mainGrid->addWidget( categoryLabel,       0, 0, Qt::AlignLeft );
@@ -164,7 +167,7 @@
   config->setInt( "layout", "defaultWindowPlacement", defaultWindowPlacement->currentItem() );
 
   //apply setting changes to application behavior
-  QToolTip::setGloballyEnabled( config->getBool( "layout", "showTooltips" ) );
+  //QToolTip::setGloballyEnabled( config->getBool( "layout", "showTooltips" ) );
   ((Window*)qApp->mainWidget())->getTitle()->useAnimation( config->getBool( "layout", "animation" ) );
 }
 //==============================================
diff -urN albumshaper_2.1_src/src/configuration/layoutSettingsWidget.h albumshaper_2.1_src-qt4/src/configuration/layoutSettingsWidget.h
--- albumshaper_2.1_src/src/configuration/layoutSettingsWidget.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/configuration/layoutSettingsWidget.h	2014-06-05 09:42:36.463565374 +0200
@@ -19,15 +19,19 @@
 #define BOTTOM_RIGHT 4
 
 #include <qdialog.h>
+//Added by qt3to4:
+#include <Q3Frame>
+#include <Q3GridLayout>
+#include <QLabel>
 
 //forward declarations
-class QGridLayout;
+class Q3GridLayout;
 class QLabel;
 class QCheckBox;
 class QSlider;
 class QSpinBox;
-class QVGroupBox;
-class QFrame;
+class Q3VGroupBox;
+class Q3Frame;
 class QPushButton;
 class QComboBox;
 class Configuration;
@@ -56,22 +60,22 @@
   ///Backend config object pointer
   Configuration* config;
 
-  QGridLayout* mainGrid;
+  Q3GridLayout* mainGrid;
   //-------
   //Main Category and separation line
   QLabel* categoryLabel;
-  QFrame* horizontalLine;
+  Q3Frame* horizontalLine;
   //-------
   //General Settings
-  QVGroupBox* generalSettings;
+  Q3VGroupBox* generalSettings;
   QCheckBox* photosBackgroundImage;
   QCheckBox* useAnimation;
   QCheckBox* showTooltips;
   //-------
   //Window Placement and Size Controls
-  QFrame* sizeFrame;
-  QGridLayout* manualPlacementGrid;
-  QVGroupBox* windowPlacementSize;
+  Q3Frame* sizeFrame;
+  Q3GridLayout* manualPlacementGrid;
+  Q3VGroupBox* windowPlacementSize;
   QCheckBox* restoreWindowPlacementSize;
 
   QLabel* defaultWindowSizeLabel;
diff -urN albumshaper_2.1_src/src/configuration/loadingSavingWidget.cpp albumshaper_2.1_src-qt4/src/configuration/loadingSavingWidget.cpp
--- albumshaper_2.1_src/src/configuration/loadingSavingWidget.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/configuration/loadingSavingWidget.cpp	2014-06-05 09:42:36.215568474 +0200
@@ -12,18 +12,21 @@
 #include <qlayout.h>
 #include <qlabel.h>
 #include <qfont.h>
-#include <qframe.h>
+#include <q3frame.h>
 #include <qcheckbox.h>
-#include <qvgroupbox.h>
+#include <q3vgroupbox.h>
 #include <qlineedit.h>
 #include <qpushbutton.h>
 #include <qtooltip.h>
 #include <qcombobox.h>
 #include <qstringlist.h>
 #include <qdir.h>
-#include <qfiledialog.h>
+#include <q3filedialog.h>
 #include <qslider.h>
 #include <qvalidator.h>
+//Added by qt3to4:
+#include <QPixmap>
+#include <Q3GridLayout>
 
 //Projectwide includes
 #include "loadingSavingWidget.h"
@@ -47,13 +50,13 @@
   labelFont.setWeight(QFont::Bold);
   categoryLabel->setFont( labelFont );
 
-  horizontalLine = new QFrame(this);
+  horizontalLine = new Q3Frame(this);
   horizontalLine->setLineWidth(2);
   horizontalLine->setMidLineWidth(1);
-  horizontalLine->setFrameStyle( QFrame::HLine | QFrame::Raised );
+  horizontalLine->setFrameStyle( Q3Frame::HLine | Q3Frame::Raised );
   //----------------
   //Default new album theme
-  defaultToThisThemeFrame = new QFrame( this );
+  defaultToThisThemeFrame = new Q3Frame( this );
   defaultToThisThemeOnNew = new QLabel( tr("Default new album theme:"), defaultToThisThemeFrame);
   defaultToThisTheme = new QComboBox( defaultToThisThemeFrame );
   
@@ -67,7 +70,7 @@
       defaultToThisTheme->insertItem( *file );
   }
   
-  defaultToThisThemeGrid = new QGridLayout(defaultToThisThemeFrame, 1, 4, 0);
+  defaultToThisThemeGrid = new Q3GridLayout(defaultToThisThemeFrame, 1, 4, 0);
   defaultToThisThemeGrid->addWidget(defaultToThisThemeOnNew, 0, 0);
   defaultToThisThemeGrid->setColSpacing(1, 8);
   defaultToThisThemeGrid->addWidget(defaultToThisTheme, 0, 2);
@@ -75,7 +78,7 @@
   defaultToThisThemeGrid->setColStretch(3, 1);
   //----------------
   //Temp directory
-  tempImageDirectoryFrame = new QFrame( this );
+  tempImageDirectoryFrame = new Q3Frame( this );
   tempImageDirectory = new QLabel( tr("Temporary image directory:"), tempImageDirectoryFrame);
   tempImageDirectoryVal = new QLineEdit( tempImageDirectoryFrame );
   tempImageDirectoryVal->setText( "/home" );
@@ -85,7 +88,7 @@
   QToolTip::add( browseButton, tr("Browse to temporary image directory") );
   connect( browseButton, SIGNAL(clicked()), SLOT(browse()) );
 
-  tempImageDirectoryGrid = new QGridLayout(tempImageDirectoryFrame, 1, 5, 0);
+  tempImageDirectoryGrid = new Q3GridLayout(tempImageDirectoryFrame, 1, 5, 0);
   tempImageDirectoryGrid->addWidget(tempImageDirectory, 0, 0);
   tempImageDirectoryGrid->setColSpacing(1, 8);
   tempImageDirectoryGrid->addWidget(tempImageDirectoryVal, 0, 2);
@@ -97,7 +100,7 @@
   checkPhotoMods = new QCheckBox( tr("Check for photo modifications"), this );
   //----------------
   //Setup larger boxes in overall grid
-  mainGrid = new QGridLayout( this, 6, 1, 0);  
+  mainGrid = new Q3GridLayout( this, 6, 1, 0);  
   mainGrid->setSpacing( WIDGET_SPACING );
     
   mainGrid->addWidget( categoryLabel, 0, 0, Qt::AlignLeft );
@@ -111,7 +114,7 @@
 //==============================================
 void LoadingSavingWidget::browse()
 {
-  QString dirName = QFileDialog::getExistingDirectory( tempImageDirectoryVal->text(),
+  QString dirName = Q3FileDialog::getExistingDirectory( tempImageDirectoryVal->text(),
                                                                           this, NULL, "Temporary Image Directory");
   if(!dirName.isNull())
     tempImageDirectoryVal->setText( dirName );
diff -urN albumshaper_2.1_src/src/configuration/loadingSavingWidget.h albumshaper_2.1_src-qt4/src/configuration/loadingSavingWidget.h
--- albumshaper_2.1_src/src/configuration/loadingSavingWidget.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/configuration/loadingSavingWidget.h	2014-06-05 09:42:36.464565362 +0200
@@ -12,15 +12,19 @@
 #define CONFIGURATION_LOADINGSAVINGWIDGET_H
 
 #include <qdialog.h>
+//Added by qt3to4:
+#include <Q3Frame>
+#include <Q3GridLayout>
+#include <QLabel>
 
 //forward declarations
-class QGridLayout;
+class Q3GridLayout;
 class QLabel;
 class QCheckBox;
-class QVGroupBox;
+class Q3VGroupBox;
 class QLineEdit;
 class QPushButton;
-class QFrame;
+class Q3Frame;
 class QComboBox;
 class QSlider;
 class Configuration;
@@ -48,21 +52,21 @@
   ///Backend config object pointer
   Configuration* config;
 
-  QGridLayout* mainGrid;
+  Q3GridLayout* mainGrid;
   //-------
   //Main Category and separation line
   QLabel* categoryLabel;
-  QFrame* horizontalLine;
+  Q3Frame* horizontalLine;
   //-------
   //Default new album theme
-  QFrame* defaultToThisThemeFrame;
-  QGridLayout* defaultToThisThemeGrid;
+  Q3Frame* defaultToThisThemeFrame;
+  Q3GridLayout* defaultToThisThemeGrid;
   QLabel* defaultToThisThemeOnNew;
   QComboBox* defaultToThisTheme;
   //----------------------
   ///Temporary Image directory
-  QFrame* tempImageDirectoryFrame;
-  QGridLayout* tempImageDirectoryGrid;
+  Q3Frame* tempImageDirectoryFrame;
+  Q3GridLayout* tempImageDirectoryGrid;
   QLabel* tempImageDirectory;
   QLineEdit* tempImageDirectoryVal;
   QPushButton* browseButton;
diff -urN albumshaper_2.1_src/src/configuration/settinggroup.cpp albumshaper_2.1_src-qt4/src/configuration/settinggroup.cpp
--- albumshaper_2.1_src/src/configuration/settinggroup.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/configuration/settinggroup.cpp	2014-06-05 09:42:36.199568674 +0200
@@ -10,7 +10,7 @@
 
 //Systemwide includes
 #include <qstring.h>
-#include <qtextstream.h>
+#include <q3textstream.h>
 #include <qdom.h>
 
 //Projectwide includes
@@ -101,7 +101,7 @@
   this->next = next;
 }
 //==============================================
-void SettingGroup::saveSettings(QTextStream& stream)
+void SettingGroup::saveSettings(Q3TextStream& stream)
 {
   stream << "  <group name=\"" << getName() << "\">\n";
 
diff -urN albumshaper_2.1_src/src/configuration/settinggroup.h albumshaper_2.1_src-qt4/src/configuration/settinggroup.h
--- albumshaper_2.1_src/src/configuration/settinggroup.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/configuration/settinggroup.h	2014-06-05 09:42:36.458565437 +0200
@@ -1,3 +1,5 @@
+//Added by qt3to4:
+#include <Q3TextStream>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
@@ -14,7 +16,7 @@
 //--------------------
 //forward declarations
 class QString;
-class QTextStream;
+class Q3TextStream;
 class Setting;
 //--------------------
 
@@ -51,7 +53,7 @@
   void loadSettings(QDomNode& node);
   
   ///writes out this group to file
-  void saveSettings(QTextStream& stream);
+  void saveSettings(Q3TextStream& stream);
 
   ///resets a setting to its default value
   void resetSetting(QString key);
diff -urN albumshaper_2.1_src/src/gui/ALabel.cpp albumshaper_2.1_src-qt4/src/gui/ALabel.cpp
--- albumshaper_2.1_src/src/gui/ALabel.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/ALabel.cpp	2014-06-05 11:30:49.512391093 +0200
@@ -17,6 +17,10 @@
 #include <qstyle.h>
 #include <qmutex.h>
 #include <qcursor.h>
+//Added by qt3to4:
+#include <QLabel>
+#include <QMouseEvent>
+#include <QEvent>
 
 //Projectwide includes
 #include "ALabel.h"
@@ -52,7 +56,7 @@
   resetPixStore = NULL;
 
   //don't clear pixmap area before painting, prevents flicker
-  setWFlags(WRepaintNoErase);
+  setWindowFlags(Qt::WNoAutoErase);
 
   //set delay defaults
   this->initDelay = initDelay;
@@ -253,8 +257,8 @@
       int h = (int) ( h1 + (h2-h1)*alpha );
 
       //resize old and new images
-      QImage oldImg = pixStore->scale( w, h );
-      QImage newImg = resetPixStore->scale( w, h );
+      QImage oldImg = pixStore->scaled( w, h );
+      QImage newImg = resetPixStore->scaled( w, h );
 
       //scale each image by alpha (step/100) and 1-alpha and combine
       int maxDepth = pixStore->depth();
@@ -312,7 +316,7 @@
     //draw full image
     else if(step == pixStore->width() )
     {
-      QLabel::setPixmap( *pixStore );
+      QLabel::setPixmap( QPixmap::fromImage(*pixStore) );
       repaint(false);
     }
     //draw a portion the image
@@ -443,15 +447,17 @@
   //---------------------------------------
 }
 //==============================================
-void ALabel::drawContents( QPainter* p )
+void ALabel::paintEvent( QPaintEvent* pe )
 {
   //draw conents of label
-  QLabel::drawContents(p);
+  QLabel::paintEvent(pe);
+
+  QPainter p(this);
 
   //if animation complete and image is being shown, draw hover over image
   if(!animating && imageShown && drawHoverOverImage)
   {
-    QRect r = style().itemRect( p, contentsRect(), alignment(), isEnabled(), pixmap(), text());
+    QRect r = rect();
 
     int minDim = r.width();
     if(r.height() < minDim)
@@ -461,16 +467,16 @@
       r.setLeft( r.right() - hoverOverImage->width() );
       r.setBottom( r.top() + hoverOverImage->height() );
       hoverOverRect = r;
-      p->drawPixmap( r, *hoverOverImage);
+      p.drawPixmap( r, *hoverOverImage);
     }
     else
     {
-      QImage resizedImage = hoverOverImage->convertToImage().scale(minDim, minDim);
+      QImage resizedImage = hoverOverImage->convertToImage().scaled(minDim, minDim);
       QPixmap resizedPixmap(resizedImage);
       r.setLeft( r.right() - resizedPixmap.width() );
       r.setBottom( r.top() + resizedPixmap.height() );
       hoverOverRect = r;
-      p->drawPixmap( r, resizedPixmap);
+      p.drawPixmap( r, resizedPixmap);
     }
   }
 }
@@ -502,7 +508,7 @@
   if( hoverOverImage == NULL ) return;
   
   QPainter* p = new QPainter();
-  QRect r = style().itemRect( p, contentsRect(), alignment(), isEnabled(), pixmap(), text());
+  QRect r = rect();
   delete p;
   int minDim = r.width();
   if(r.height() < minDim)
@@ -514,7 +520,7 @@
   }
   else
   {
-    QImage resizedImage = hoverOverImage->convertToImage().scale(minDim, minDim);
+    QImage resizedImage = hoverOverImage->convertToImage().scaled(minDim, minDim);
     QPixmap resizedPixmap(resizedImage);
     r.setLeft( r.right() - resizedPixmap.width() );
     r.setBottom( r.top() + resizedPixmap.height() );
diff -urN albumshaper_2.1_src/src/gui/ALabel.h albumshaper_2.1_src-qt4/src/gui/ALabel.h
--- albumshaper_2.1_src/src/gui/ALabel.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/ALabel.h	2014-06-05 10:14:17.479799401 +0200
@@ -1,3 +1,7 @@
+//Added by qt3to4:
+#include <QEvent>
+#include <QDropEvent>
+#include <QMouseEvent>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
@@ -63,7 +67,7 @@
   ///begin animating the pixmap
   void animatePixmap( );
 
-  void drawContents( QPainter* p);
+  void paintEvent( QPaintEvent* pe);
 
   void enterEvent( QEvent* e);
   void leaveEvent( QEvent* e);
diff -urN albumshaper_2.1_src/src/gui/blurSharpenSlider.cpp albumshaper_2.1_src-qt4/src/gui/blurSharpenSlider.cpp
--- albumshaper_2.1_src/src/gui/blurSharpenSlider.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/blurSharpenSlider.cpp	2014-06-05 09:42:36.222568387 +0200
@@ -11,7 +11,7 @@
 #include "blurSharpenSlider.h"
 
 //==========================================
-BlurSharpenSlider::BlurSharpenSlider( Orientation orientation, 
+BlurSharpenSlider::BlurSharpenSlider( Qt::Orientation orientation, 
                                       QWidget* parent, const char* name )
                                     : DynamicSlider( orientation, parent, name) 
 {
diff -urN albumshaper_2.1_src/src/gui/blurSharpenSlider.h albumshaper_2.1_src-qt4/src/gui/blurSharpenSlider.h
--- albumshaper_2.1_src/src/gui/blurSharpenSlider.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/blurSharpenSlider.h	2014-06-05 09:42:36.467565324 +0200
@@ -19,7 +19,7 @@
 Q_OBJECT
   
 public:
-  BlurSharpenSlider( Orientation orientation, QWidget* parent, const char* name=0 );  
+  BlurSharpenSlider( Qt::Orientation orientation, QWidget* parent, const char* name=0 );  
 protected:
   virtual QString mapValToString();
 };
diff -urN albumshaper_2.1_src/src/gui/clickableLabel.cpp albumshaper_2.1_src-qt4/src/gui/clickableLabel.cpp
--- albumshaper_2.1_src/src/gui/clickableLabel.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/clickableLabel.cpp	2014-06-05 11:31:04.336205770 +0200
@@ -11,6 +11,12 @@
 //Systemwide includes
 #include <qimage.h>
 #include <qpainter.h>
+//Added by qt3to4:
+#include <QPixmap>
+#include <QEvent>
+#include <QLabel>
+#include <QMouseEvent>
+#include <QPaintEvent>
 
 //Projectwide includes
 #include "clickableLabel.h"
@@ -21,7 +27,7 @@
 //==============================================
 ClickableLabel::ClickableLabel( QWidget* parent, const char* name ) : QLabel( parent, name ) 
 {
-  setWFlags(WRepaintNoErase);
+  setWindowFlags(Qt::WNoAutoErase);
   enabled = true;
   invisible = false;
   pressed = false;
diff -urN albumshaper_2.1_src/src/gui/clickableLabel.h albumshaper_2.1_src-qt4/src/gui/clickableLabel.h
--- albumshaper_2.1_src/src/gui/clickableLabel.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/clickableLabel.h	2014-06-05 09:42:36.466565337 +0200
@@ -13,6 +13,10 @@
 
 #include <qlabel.h>
 #include <qpixmap.h>
+//Added by qt3to4:
+#include <QPaintEvent>
+#include <QMouseEvent>
+#include <QEvent>
 
 //=====================================
 /*! \brief A clickable label
diff -urN albumshaper_2.1_src/src/gui/dialogs/about.cpp albumshaper_2.1_src-qt4/src/gui/dialogs/about.cpp
--- albumshaper_2.1_src/src/gui/dialogs/about.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/dialogs/about.cpp	2014-06-05 09:42:36.380566412 +0200
@@ -12,10 +12,10 @@
 #include <qlayout.h>
 #include <qlabel.h>
 #include <qfont.h>
-#include <qiconset.h>
+#include <qicon.h>
 #include <qpixmap.h>
 #include <qtabwidget.h>
-#include <qtextbrowser.h>
+#include <q3textbrowser.h>
 #include <qpushbutton.h>
 #include <qstringlist.h>
 #include <qdatetime.h>
@@ -25,7 +25,11 @@
 #include <qstringlist.h>
 #include <qmovie.h>
 #include <qapplication.h>
-#include <qframe.h>
+#include <q3frame.h>
+//Added by qt3to4:
+#include <Q3TextStream>
+#include <QCloseEvent>
+#include <Q3GridLayout>
 
 //Projectwide includes
 #include "about.h"
@@ -58,7 +62,7 @@
   setCaption( tr("About Album Shaper"));
   //--
   //application logo
-  QFrame* logoFrame = new QFrame( this );
+  Q3Frame* logoFrame = new Q3Frame( this );
   logoFrame->setSizePolicy( QSizePolicy::Minimum, QSizePolicy::Fixed );
   albumShaperLogo = new QLabel( logoFrame );
   albumShaperLogo->setPixmap( QPixmap( QString(IMAGE_PATH)+"miscImages/albumShaper.png" ) );
@@ -101,21 +105,21 @@
   tabWidget = new QTabWidget( this );
   //--
   //create credits tab
-  credits = new QTextBrowser( this );
-  credits->setFrameStyle( QFrame::Panel | QFrame::Sunken );
+  credits = new Q3TextBrowser( this );
+  credits->setFrameStyle( Q3Frame::Panel | Q3Frame::Sunken );
   credits->mimeSourceFactory()->setFilePath( QStringList(TEXT_PATH) );
   credits->setSource( "about.html");
   tabWidget->addTab(credits, 
-                    QIconSet( QPixmap(QString(IMAGE_PATH)+"tabIcons/credits.png") ), 
+                    QIcon( QPixmap(QString(IMAGE_PATH)+"tabIcons/credits.png") ), 
                     tr("Credits") );
    //--
   //create history tab
-  history = new QTextBrowser(this);
-  history->setFrameStyle( QFrame::Panel | QFrame::Sunken );
+  history = new Q3TextBrowser(this);
+  history->setFrameStyle( Q3Frame::Panel | Q3Frame::Sunken );
   history->mimeSourceFactory()->setFilePath( QStringList(TEXT_PATH) );
   history->setSource( "history.html");
   tabWidget->addTab(history, 
-                    QIconSet( QPixmap(QString(IMAGE_PATH)+"tabIcons/history.png") ), 
+                    QIcon( QPixmap(QString(IMAGE_PATH)+"tabIcons/history.png") ), 
                     tr("History") );
   //--
   //create close button
@@ -137,13 +141,13 @@
   progURL->setPaletteBackgroundColor( darkBlue );
   tabWidget->setPaletteForegroundColor( black );
   //--
-  QGridLayout* logoGrid = new QGridLayout( logoFrame, 4, 3, 0);
+  Q3GridLayout* logoGrid = new Q3GridLayout( logoFrame, 4, 3, 0);
   logoGrid->setSpacing(WIDGET_SPACING);
   logoGrid->addWidget( albumShaperLogo,  0, 1, Qt::AlignCenter );
   logoGrid->addWidget( progDesc,  2, 1, Qt::AlignCenter );
   logoGrid->addWidget( progURL,  3, 1, Qt::AlignCenter );
 
-  grid = new QGridLayout( this, 3, 1, 0);
+  grid = new Q3GridLayout( this, 3, 1, 0);
   grid->setSpacing(WIDGET_SPACING);
   grid->addWidget( logoFrame,  0, 0 );
   grid->addWidget( tabWidget, 1, 0 );
@@ -195,18 +199,18 @@
   {
     //write releases to temp file
     QFile fetchedDoc( TEMP_DIR + QString("/releases.xml") );
-    if(fetchedDoc.open(IO_WriteOnly))
+    if(fetchedDoc.open(QIODevice::WriteOnly))
     {
       //----------------------------
       //write to file
-      QTextStream stream( &fetchedDoc );
-      stream.setEncoding( QTextStream::UnicodeUTF8 );
+      Q3TextStream stream( &fetchedDoc );
+      stream.setEncoding( Q3TextStream::UnicodeUTF8 );
       stream << QString( http.readAll() );
       fetchedDoc.close();
       //----------------------------
       //parse xml file, construct string list of releases
       //open file, bail if unable to
-      if( !fetchedDoc.open( IO_ReadOnly ) )
+      if( !fetchedDoc.open( QIODevice::ReadOnly ) )
       {
         getMode = UNSET;
         return;
@@ -254,9 +258,9 @@
       {
         //create new improvements file with beginning html and body tags
         QFile fetchedDoc( TEMP_DIR  + QString("/newImprovements.html") );
-        if(fetchedDoc.open(IO_WriteOnly))
+        if(fetchedDoc.open(QIODevice::WriteOnly))
         {
-          QTextStream stream( &fetchedDoc );          stream.setEncoding( QTextStream::UnicodeUTF8 );
+          Q3TextStream stream( &fetchedDoc );          stream.setEncoding( Q3TextStream::UnicodeUTF8 );
           stream << "<html><body bgcolor=\"white\" text=\"black\">\n";
           stream << "<b><font size=\"+1\">" << tr("New improvements to Album Shaper are available in a new release!") << "<br><hr></font></b>";
           fetchedDoc.close();
@@ -268,8 +272,8 @@
       //else we're up to date! move on to checking for new features in cvs!
       else
       {
-        newImprovements = new QTextBrowser( this );
-        newImprovements->setFrameStyle( QFrame::Panel | QFrame::Sunken );
+        newImprovements = new Q3TextBrowser( this );
+        newImprovements->setFrameStyle( Q3Frame::Panel | Q3Frame::Sunken );
         newImprovements->mimeSourceFactory()->setFilePath( QStringList(TEXT_PATH) );
 
         //bleeding edge message
@@ -283,7 +287,7 @@
         }
 
         tabWidget->addTab(newImprovements, 
-                          QIconSet( QPixmap(QString(IMAGE_PATH)+"tabIcons/newImprovements.png") ),
+                          QIcon( QPixmap(QString(IMAGE_PATH)+"tabIcons/newImprovements.png") ),
                           tr("Software Updates") );
 
         if(displayMode == UPDATES)
@@ -308,11 +312,11 @@
   {
     //write additional changelog information to disk
     QFile fetchedDoc( TEMP_DIR + QString("/newImprovements.html") );
-    if(fetchedDoc.open(IO_WriteOnly | IO_Append))
+    if(fetchedDoc.open(QIODevice::WriteOnly | QIODevice::Append))
     {
       //write to file
-      QTextStream stream( &fetchedDoc );
-      stream.setEncoding( QTextStream::UnicodeUTF8 );
+      Q3TextStream stream( &fetchedDoc );
+      stream.setEncoding( Q3TextStream::UnicodeUTF8 );
       stream << QString( http.readAll() );
       fetchedDoc.close();
 
@@ -324,20 +328,20 @@
          releases->first().compare( QString(ALBUMSHAPER_VERSION) ) == 0 )
       {
         //tack on the end body and html tags
-        if(fetchedDoc.open(IO_WriteOnly | IO_Append))
+        if(fetchedDoc.open(QIODevice::WriteOnly | QIODevice::Append))
         {
           //write to file
-          QTextStream stream( &fetchedDoc );
-          stream.setEncoding( QTextStream::UnicodeUTF8 );
+          Q3TextStream stream( &fetchedDoc );
+          stream.setEncoding( Q3TextStream::UnicodeUTF8 );
           stream << "</body></html>";
           fetchedDoc.close();
         
-          newImprovements = new QTextBrowser(this);
-          newImprovements->setFrameStyle( QFrame::Panel | QFrame::Sunken );
+          newImprovements = new Q3TextBrowser(this);
+          newImprovements->setFrameStyle( Q3Frame::Panel | Q3Frame::Sunken );
           newImprovements->mimeSourceFactory()->setFilePath( TEMP_DIR );
           newImprovements->setSource( "newImprovements.html" );
           tabWidget->addTab(newImprovements, 
-                            QIconSet( QPixmap(QString(IMAGE_PATH)+"tabIcons/newImprovements.png") ),
+                            QIcon( QPixmap(QString(IMAGE_PATH)+"tabIcons/newImprovements.png") ),
                             tr("Software Updates") );
           tabWidget->setCurrentPage( tabWidget->indexOf( newImprovements ) );;
 
@@ -367,21 +371,21 @@
   {
     //write upcoming features to temp file
     QFile fetchedDoc( TEMP_DIR + QString("/upcomingFeatures.html") );
-    if(fetchedDoc.open(IO_WriteOnly))
+    if(fetchedDoc.open(QIODevice::WriteOnly))
     {
       //write to file
-      QTextStream stream( &fetchedDoc );
-      stream.setEncoding( QTextStream::UnicodeUTF8 );
+      Q3TextStream stream( &fetchedDoc );
+      stream.setEncoding( Q3TextStream::UnicodeUTF8 );
       stream << QString( http.readAll() );
       fetchedDoc.close();
 
       //add tab
-      upcomingFeatures = new QTextBrowser(this);
-      upcomingFeatures->setFrameStyle( QFrame::Panel | QFrame::Sunken );
+      upcomingFeatures = new Q3TextBrowser(this);
+      upcomingFeatures->setFrameStyle( Q3Frame::Panel | Q3Frame::Sunken );
       upcomingFeatures->mimeSourceFactory()->setFilePath( TEMP_DIR );
       upcomingFeatures->setSource( "upcomingFeatures.html" );
       tabWidget->addTab(upcomingFeatures, 
-                        QIconSet( QPixmap(QString(IMAGE_PATH)+"tabIcons/upcomingFeatures.png") ),
+                        QIcon( QPixmap(QString(IMAGE_PATH)+"tabIcons/upcomingFeatures.png") ),
                         tr("Upcoming Features") );
 
       if(displayMode == UPCOMING)
diff -urN albumshaper_2.1_src/src/gui/dialogs/about.h albumshaper_2.1_src-qt4/src/gui/dialogs/about.h
--- albumshaper_2.1_src/src/gui/dialogs/about.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/dialogs/about.h	2014-06-05 09:42:36.498564936 +0200
@@ -12,15 +12,20 @@
 #define GUI_DIALOGS_ABOUT_H
 
 #include <qdialog.h>
-#include <qhttp.h>
+#include <q3http.h>
+//Added by qt3to4:
+#include <Q3GridLayout>
+#include <QCloseEvent>
+#include <QPixmap>
+#include <QLabel>
 
 //forward declarations
-class QGridLayout;
+class Q3GridLayout;
 class QMovie;
 class QPixmap;
 class QLabel;
 class QTabWidget;
-class QTextBrowser;
+class Q3TextBrowser;
 class QPushButton;
 class QStringList;
 
@@ -48,7 +53,7 @@
 private:
   void closeEvent( QCloseEvent* e);
 
-  QGridLayout* grid;
+  Q3GridLayout* grid;
 
   QMovie* albumShaperAgingImage;
   QLabel* albumShaperLogo;
@@ -58,10 +63,10 @@
 
   QTabWidget* tabWidget;
 
-  QTextBrowser* credits;
-  QTextBrowser* history;
-  QTextBrowser* newImprovements;
-  QTextBrowser* upcomingFeatures;
+  Q3TextBrowser* credits;
+  Q3TextBrowser* history;
+  Q3TextBrowser* newImprovements;
+  Q3TextBrowser* upcomingFeatures;
 
   ///Close button
   QPushButton* closeButton;
@@ -69,7 +74,7 @@
   QStringList* releases;
 
   //http object for getting urls
-  QHttp http;
+  Q3Http http;
 
   //current get action mode
   int getMode;
diff -urN albumshaper_2.1_src/src/gui/dialogs/addPhotosDialog.cpp albumshaper_2.1_src-qt4/src/gui/dialogs/addPhotosDialog.cpp
--- albumshaper_2.1_src/src/gui/dialogs/addPhotosDialog.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/dialogs/addPhotosDialog.cpp	2014-06-05 09:42:36.382566387 +0200
@@ -10,7 +10,7 @@
 
 //Systemwide includes
 #include <qlabel.h>
-#include <qfiledialog.h>
+#include <q3filedialog.h>
 #include <qcheckbox.h>
 #include <qlayout.h>
 #include <qpixmap.h>
@@ -21,6 +21,9 @@
 #include <qthread.h>
 #include <qevent.h>
 #include <qapplication.h>
+//Added by qt3to4:
+#include <Q3GridLayout>
+#include <QCustomEvent>
 
 //Projectwide includes
 #include "addPhotosDialog.h"
@@ -176,7 +179,7 @@
   filePreview = new QLabel( this );  
   fileDetails = new QLabel( this );  
   
-  QGridLayout* grid = new QGridLayout( this, 4, 3 );
+  Q3GridLayout* grid = new Q3GridLayout( this, 4, 3 );
   grid->setRowStretch( 0, 1 );
   grid->addWidget( filePreview, 1, 1, Qt::AlignHCenter );
   grid->addWidget( fileDetails, 2, 1, Qt::AlignHCenter );
@@ -236,18 +239,18 @@
 }
 //==============================================
 AddPhotosDialog::AddPhotosDialog(QString path, QWidget *parent, const char* name ) :
-                                 QFileDialog(path,
+                                 Q3FileDialog(path,
                                  tr("Images") + " (*.gif *.jpg *.jpeg *.png *.xpm *.GIF *.JPG *.JPEG *.PNG *.XPM)",
                                  parent,name)
  {
    //setup filter filter and modes
-   setMode( QFileDialog::ExistingFiles );
-   setViewMode( QFileDialog::List );
+   setMode( Q3FileDialog::ExistingFiles );
+   setViewMode( Q3FileDialog::List );
  
    filePreview = new FilePreview();
    setContentsPreviewEnabled( true );
    setContentsPreview( filePreview, filePreview );
-   setPreviewMode( QFileDialog::Contents );
+   setPreviewMode( Q3FileDialog::Contents );
    
    //create label and checkbox asking user if they want to
    //set image descriptions from filenames
diff -urN albumshaper_2.1_src/src/gui/dialogs/addPhotosDialog.h albumshaper_2.1_src-qt4/src/gui/dialogs/addPhotosDialog.h
--- albumshaper_2.1_src/src/gui/dialogs/addPhotosDialog.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/dialogs/addPhotosDialog.h	2014-06-05 09:42:36.500564911 +0200
@@ -1,3 +1,7 @@
+//Added by qt3to4:
+#include <QCustomEvent>
+#include <Q3GridLayout>
+#include <QLabel>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
@@ -13,13 +17,13 @@
 
 //--------------------
 //forward declarations
-class QGridLayout;
-class QFileDialog;
+class Q3GridLayout;
+class Q3FileDialog;
 class QCheckBox;
 class QLabel;
 //--------------------
 
-#include <qfiledialog.h>
+#include <q3filedialog.h>
 #include <qmutex.h>
 #include <qthread.h>
 class FilePreview;
@@ -52,7 +56,7 @@
   QMutex lockingMutex;
 };
 //==============================================
-class FilePreview : public QWidget, public QFilePreview
+class FilePreview : public QWidget, public Q3FilePreview
 {
 public:
   FilePreview( QWidget* parent=0 );
@@ -60,7 +64,7 @@
   QSize minimumSizeHint () const;
 
   ///declared to make base class happy. we'll use an updatePreview function instead
-  void previewUrl( const QUrl& ) {}
+  void previewUrl( const Q3Url& ) {}
   
   ///call this function to update the file preview
   void updatePreview( const QString& path );
@@ -85,7 +89,7 @@
 /*! \brief Simple dialog for browsing and select photos to add to a subalbum.
  */
 //=====================================
-class AddPhotosDialog : public QFileDialog
+class AddPhotosDialog : public Q3FileDialog
 {
 Q_OBJECT
 
diff -urN albumshaper_2.1_src/src/gui/dialogs/albumStatistics.cpp albumshaper_2.1_src-qt4/src/gui/dialogs/albumStatistics.cpp
--- albumshaper_2.1_src/src/gui/dialogs/albumStatistics.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/dialogs/albumStatistics.cpp	2014-06-05 09:42:36.385566349 +0200
@@ -18,6 +18,10 @@
 #include <qfileinfo.h>
 
 #include <qtoolbutton.h>
+//Added by qt3to4:
+#include <QCloseEvent>
+#include <Q3GridLayout>
+#include <Q3Frame>
 
 //Projectwide includes
 #include "albumStatistics.h"
@@ -156,7 +160,7 @@
   modifiedVal->setFont( statsFont );
     //--
   //create album image and title labels
-  albumPreview = new QFrame( this );
+  albumPreview = new Q3Frame( this );
   albumIcon = new QLabel( albumPreview );
 
   //if no rep image use small version
@@ -216,7 +220,7 @@
   closeButton->setEraseColor(darkBlue);
   //--
   //place widgets in grid
-  grid = new QGridLayout( this, 10, 3, 0);
+  grid = new Q3GridLayout( this, 10, 3, 0);
   grid->setMargin(WIDGET_SPACING);
   grid->setSpacing(WIDGET_SPACING);
 
@@ -245,7 +249,7 @@
 
 
   //add album image and name
-  grid2 = new QGridLayout( albumPreview, 2, 1, 0 );
+  grid2 = new Q3GridLayout( albumPreview, 2, 1, 0 );
   grid2->setSpacing(WIDGET_SPACING);
 
   grid2->addWidget( albumIcon, 0, 0, Qt::AlignCenter );
diff -urN albumshaper_2.1_src/src/gui/dialogs/albumStatistics.h albumshaper_2.1_src-qt4/src/gui/dialogs/albumStatistics.h
--- albumshaper_2.1_src/src/gui/dialogs/albumStatistics.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/dialogs/albumStatistics.h	2014-06-05 09:42:36.501564899 +0200
@@ -12,10 +12,16 @@
 #define GUI_DIALOGS_ALBUMSTATISTICS_H
 
 #include <qdialog.h>
+//Added by qt3to4:
+#include <Q3Frame>
+#include <Q3GridLayout>
+#include <QCloseEvent>
+#include <QPixmap>
+#include <QLabel>
 
 //forward declarations
-class QGridLayout;
-class QFrame;
+class Q3GridLayout;
+class Q3Frame;
 class QLabel;
 class QPixmap;
 class QPushButton;
@@ -45,8 +51,8 @@
   void closeEvent( QCloseEvent* e);
 
   Album* album;
-  QGridLayout* grid;
-  QGridLayout* grid2;
+  Q3GridLayout* grid;
+  Q3GridLayout* grid2;
 
   QLabel* titleMessage;
 
@@ -66,7 +72,7 @@
   QLabel* modified;
   QLabel* modifiedVal;
 
-  QFrame* albumPreview;
+  Q3Frame* albumPreview;
   QPixmap* albumImage;
   QLabel* albumIcon;
 
diff -urN albumshaper_2.1_src/src/gui/dialogs/alertDialog.cpp albumshaper_2.1_src-qt4/src/gui/dialogs/alertDialog.cpp
--- albumshaper_2.1_src/src/gui/dialogs/alertDialog.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/dialogs/alertDialog.cpp	2014-06-05 09:42:36.388566312 +0200
@@ -12,10 +12,13 @@
 #include <qdialog.h>
 #include <qlayout.h>
 #include <qlabel.h>
-#include <qtextedit.h>
+#include <q3textedit.h>
 #include <qfont.h>
 #include <qpushbutton.h>
 #include <qpixmap.h>
+//Added by qt3to4:
+#include <Q3GridLayout>
+#include <Q3Frame>
 
 //Projectwide includes
 #include "alertDialog.h"
@@ -31,7 +34,7 @@
 {
   //-------------------------------
   //create widgets
-  topFrame = new QFrame( this );
+  topFrame = new Q3Frame( this );
 
   alertText = new QLabel( topFrame );
   alertText->setText( message );
@@ -44,11 +47,11 @@
   alertIconLabel = new QLabel( topFrame );
   alertIconLabel->setPixmap( *alertIcon );
 
-  descriptionText = new QTextEdit( this );
+  descriptionText = new Q3TextEdit( this );
   descriptionText->setReadOnly(true);
   descriptionText->setText( description );
 
-  bottomFrame = new QFrame( this );
+  bottomFrame = new Q3Frame( this );
   okButton = new QPushButton( tr("OK"), bottomFrame );
   okButton->setSizePolicy( QSizePolicy::Fixed, QSizePolicy::Fixed );
   okButton->setDefault(true);
@@ -57,20 +60,20 @@
   connect( okButton, SIGNAL(clicked()), SLOT(accept()) );
   //-------------------------------
   //create grid and place widgets
-  gridTop     = new QGridLayout( topFrame, 1, 2, 0);
+  gridTop     = new Q3GridLayout( topFrame, 1, 2, 0);
   gridTop->addWidget( alertText, 0, 0 );
   gridTop->addWidget( alertIconLabel, 0, 1, Qt::AlignRight );
 
-  gridBottom  = new QGridLayout( bottomFrame, 1, 1, 0);
+  gridBottom  = new Q3GridLayout( bottomFrame, 1, 1, 0);
   gridBottom->addWidget( okButton, 0, 0 );
 
-  gridFull    = new QGridLayout( this, 3, 1, 0);
+  gridFull    = new Q3GridLayout( this, 3, 1, 0);
   gridFull->addWidget( topFrame, 0, 0);
   gridFull->addWidget( descriptionText, 1, 0);
   gridFull->addWidget( bottomFrame, 2, 0);
 
   gridFull->setRowStretch( 1, 1 );
-  gridFull->setResizeMode( QLayout::FreeResize );
+  gridFull->setResizeMode( QLayout::SetNoConstraint );
   gridFull->setMargin(WIDGET_SPACING);
   gridFull->setSpacing(WIDGET_SPACING);
 
diff -urN albumshaper_2.1_src/src/gui/dialogs/alertDialog.h albumshaper_2.1_src-qt4/src/gui/dialogs/alertDialog.h
--- albumshaper_2.1_src/src/gui/dialogs/alertDialog.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/dialogs/alertDialog.h	2014-06-05 09:42:36.502564886 +0200
@@ -1,3 +1,8 @@
+//Added by qt3to4:
+#include <QPixmap>
+#include <Q3GridLayout>
+#include <Q3Frame>
+#include <QLabel>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
@@ -13,12 +18,12 @@
 
 //--------------------
 //forward delcarations
-class QGridLayout;
+class Q3GridLayout;
 class QLabel;
-class QTextEdit;
+class Q3TextEdit;
 class QPushButton;
 class QPixmap;
-class QFrame;
+class Q3Frame;
 //--------------------
 
 #include <qdialog.h>
@@ -45,13 +50,13 @@
 //----------------------
 private:
   ///Grids objects placed in
-  QGridLayout *gridTop, *gridBottom, *gridFull;
+  Q3GridLayout *gridTop, *gridBottom, *gridFull;
 
   ///Message displayed in window
   QLabel* alertText;
 
   ///Description displayed in window
-  QTextEdit* descriptionText;
+  Q3TextEdit* descriptionText;
 
   ///Ok button
   QPushButton* okButton;
@@ -63,7 +68,7 @@
   QLabel* alertIconLabel;
 
   ///Top and bottom frames
-  QFrame *topFrame, *bottomFrame;
+  Q3Frame *topFrame, *bottomFrame;
 //----------------------
 };
 //======================
diff -urN albumshaper_2.1_src/src/gui/dialogs/questionDialog.cpp albumshaper_2.1_src-qt4/src/gui/dialogs/questionDialog.cpp
--- albumshaper_2.1_src/src/gui/dialogs/questionDialog.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/dialogs/questionDialog.cpp	2014-06-05 09:42:36.391566274 +0200
@@ -12,13 +12,16 @@
 #include <qdialog.h>
 #include <qlayout.h>
 #include <qlabel.h>
-#include <qtextedit.h>
+#include <q3textedit.h>
 #include <qfont.h>
 #include <qpushbutton.h>
 #include <qpixmap.h>
 
 //Projectwide includes
 #include "questionDialog.h"
+//Added by qt3to4:
+#include <Q3GridLayout>
+#include <Q3Frame>
 #include "../../config.h"
 
 //==============================================
@@ -31,7 +34,7 @@
 {
   //-------------------------------
   //create widgets
-  topFrame = new QFrame( this );
+  topFrame = new Q3Frame( this );
 
   questionText = new QLabel( topFrame );
   questionText->setText( question );
@@ -44,12 +47,12 @@
   questionIconLabel = new QLabel( topFrame );
   questionIconLabel->setPixmap( *questionIcon );
 
-  messageText = new QTextEdit( this );
+  messageText = new Q3TextEdit( this );
   messageText->setReadOnly(true);
   messageText->setText( message );
   
   
-  bottomFrame = new QFrame( this );
+  bottomFrame = new Q3Frame( this );
 
   okButton = new QPushButton( tr("Yes"), bottomFrame );
   okButton->setSizePolicy( QSizePolicy::Fixed, QSizePolicy::Fixed );
@@ -63,21 +66,21 @@
   connect( cancelButton, SIGNAL(clicked()), SLOT(reject()) );
   //-------------------------------
   //create grid and place widgets
-  gridTop     = new QGridLayout( topFrame, 1, 2, 0);
+  gridTop     = new Q3GridLayout( topFrame, 1, 2, 0);
   gridTop->addWidget( questionText, 0, 0 );
   gridTop->addWidget( questionIconLabel, 0, 1, Qt::AlignRight );
 
-  gridBottom  = new QGridLayout( bottomFrame, 1, 2, 0);
+  gridBottom  = new Q3GridLayout( bottomFrame, 1, 2, 0);
   gridBottom->addWidget( okButton, 0, 0 );
   gridBottom->addWidget( cancelButton, 0, 1);
 
-  gridFull    = new QGridLayout( this, 3, 1, 0);
+  gridFull    = new Q3GridLayout( this, 3, 1, 0);
   gridFull->addWidget( topFrame, 0, 0);
   gridFull->addWidget( messageText, 1, 0);
   gridFull->addWidget( bottomFrame, 2, 0);
 
   gridFull->setRowStretch( 1, 1 );
-  gridFull->setResizeMode( QLayout::FreeResize );
+  gridFull->setResizeMode( QLayout::SetNoConstraint );
   gridFull->setMargin(WIDGET_SPACING);
   gridFull->setSpacing(WIDGET_SPACING);
 
diff -urN albumshaper_2.1_src/src/gui/dialogs/questionDialog.h albumshaper_2.1_src-qt4/src/gui/dialogs/questionDialog.h
--- albumshaper_2.1_src/src/gui/dialogs/questionDialog.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/dialogs/questionDialog.h	2014-06-05 09:42:36.503564874 +0200
@@ -1,3 +1,8 @@
+//Added by qt3to4:
+#include <QPixmap>
+#include <Q3GridLayout>
+#include <Q3Frame>
+#include <QLabel>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
@@ -13,12 +18,12 @@
 
 //--------------------
 //forward delcarations
-class QGridLayout;
+class Q3GridLayout;
 class QLabel;
-class QTextEdit;
+class Q3TextEdit;
 class QPushButton;
 class QPixmap;
-class QFrame;
+class Q3Frame;
 //--------------------
 
 #include <qdialog.h>
@@ -45,13 +50,13 @@
 //----------------------
 private:
   ///Grids objects placed in
-  QGridLayout *gridTop, *gridBottom, *gridFull;
+  Q3GridLayout *gridTop, *gridBottom, *gridFull;
 
   ///Question displayed in window
   QLabel* questionText;
 
   ///Message displayed in window
-  QTextEdit* messageText;
+  Q3TextEdit* messageText;
 
   ///Ok button
   QPushButton* okButton;
@@ -66,7 +71,7 @@
   QLabel* questionIconLabel;
 
   ///Top and bottom frames
-  QFrame *topFrame, *bottomFrame;
+  Q3Frame *topFrame, *bottomFrame;
 //----------------------
 };
 //======================
diff -urN albumshaper_2.1_src/src/gui/dialogs/saveDialog.cpp albumshaper_2.1_src-qt4/src/gui/dialogs/saveDialog.cpp
--- albumshaper_2.1_src/src/gui/dialogs/saveDialog.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/dialogs/saveDialog.cpp	2014-06-05 09:42:36.400566162 +0200
@@ -12,15 +12,18 @@
 #include <qlayout.h>
 #include <qlabel.h>
 #include <qfont.h>
-#include <qtextbrowser.h>
+#include <q3textbrowser.h>
 #include <qlineedit.h>
-#include <qlistbox.h>
-#include <qframe.h>
+#include <q3listbox.h>
+#include <q3frame.h>
 #include <qstringlist.h>
 #include <qdir.h>
 #include <qpushbutton.h>
-#include <qfiledialog.h>
+#include <q3filedialog.h>
 #include <qtooltip.h>
+//Added by qt3to4:
+#include <Q3GridLayout>
+#include <QPixmap>
 
 //Projectwide includes
 #include "saveDialog.h"
@@ -43,7 +46,7 @@
 
 
   //create location frame and widgets
-  locationFrame = new QFrame( this );
+  locationFrame = new Q3Frame( this );
   locationLabel = new QLabel( tr("Save to:"), locationFrame );
 
   QFont boldFont = locationLabel->font();
@@ -58,7 +61,7 @@
   browseButton->setPixmap( QPixmap(QString(IMAGE_PATH)+"buttonIcons/browse.png") );
   QToolTip::add( browseButton, tr("Browse to save destination") );
   connect( browseButton, SIGNAL(clicked()), SLOT(browse()) );
-  locationGrid = new QGridLayout( locationFrame, 1, 3, 0 );
+  locationGrid = new Q3GridLayout( locationFrame, 1, 3, 0 );
   locationGrid->addWidget( locationLabel, 0, 0 );
   locationGrid->addWidget( locationVal, 0, 1 );
   locationGrid->addWidget( browseButton, 0, 2);
@@ -66,10 +69,10 @@
   locationGrid->setSpacing(WIDGET_SPACING); 
   
   //create theme selection frame and widgets
-  themeSelectionFrame = new QFrame( this );
+  themeSelectionFrame = new Q3Frame( this );
   themesLabel = new QLabel( tr("Themes:"), themeSelectionFrame );
   themesLabel->setFont( boldFont );
-  themesList = new QListBox( themeSelectionFrame );
+  themesList = new Q3ListBox( themeSelectionFrame );
   QToolTip::add( themesList, tr("Select theme for saving album") );
   QDir localDir( THEMES_PATH );
   QStringList list = localDir.entryList( QDir::Dirs );
@@ -103,12 +106,12 @@
 
   connect( themesList, SIGNAL( highlighted(int) ), this, SLOT( updatePreview() ) );
 
-  themeSelectionGrid = new QGridLayout( themeSelectionFrame, 2, 1, 0 );
+  themeSelectionGrid = new Q3GridLayout( themeSelectionFrame, 2, 1, 0 );
   themeSelectionGrid->addWidget( themesLabel, 0, 0 );
   themeSelectionGrid->addWidget( themesList, 1, 0 );
 
   //create theme preview frame and widgets
-  themePreviewFrame = new QFrame( this );
+  themePreviewFrame = new Q3Frame( this );
   themePreviewLabel = new QLabel( tr("Theme Preview:"), themePreviewFrame );
   themePreviewLabel->setFont( boldFont );
   themeScreenShot = new QLabel( themePreviewFrame );
@@ -125,12 +128,12 @@
   QToolTip::add( themeScreenNext, tr("View next theme screenshot") );
   connect( themeScreenNext, SIGNAL(clicked()), SLOT(nextScreenShot()) );
 
-  themeFeatures = new QTextBrowser( themePreviewFrame );
-  themeFeatures->setFrameStyle( QFrame::Panel | QFrame::Sunken );
+  themeFeatures = new Q3TextBrowser( themePreviewFrame );
+  themeFeatures->setFrameStyle( Q3Frame::Panel | Q3Frame::Sunken );
   themeFeatures->mimeSourceFactory()->setFilePath( QStringList(THEMES_PATH) );
   updatePreview();
 
-  themePreviewGrid = new QGridLayout( themePreviewFrame, 5, 5, 0);
+  themePreviewGrid = new Q3GridLayout( themePreviewFrame, 5, 5, 0);
   themePreviewGrid->addMultiCellWidget( themePreviewLabel, 0,0, 0,4 );
 
   themePreviewGrid->addWidget( themeScreenPrev, 1, 0, Qt::AlignVCenter );
@@ -144,7 +147,7 @@
   themePreviewGrid->addMultiCellWidget( themeFeatures, 4, 4, 0, 4 );
 
   //create buttons frame and widgets
-  buttonsFrame = new QFrame( this );
+  buttonsFrame = new Q3Frame( this );
   saveButton = new QPushButton( 
   //PLATFORM_SPECIFIC_CODE
  #ifndef Q_OS_MACX  
@@ -163,7 +166,7 @@
 );
   cancelButton->setSizePolicy( QSizePolicy::Fixed, QSizePolicy::Fixed );
   connect( cancelButton, SIGNAL(clicked()), SLOT(cancel()) );
-  buttonsGrid = new QGridLayout( buttonsFrame, 1, 5, 0 );
+  buttonsGrid = new Q3GridLayout( buttonsFrame, 1, 5, 0 );
   buttonsGrid->setColStretch( 0, 1 );
   buttonsGrid->addWidget( saveButton, 0, 1 );
   buttonsGrid->addColSpacing( 2, 10 );
@@ -171,7 +174,7 @@
   buttonsGrid->setColStretch( 4, 1 );
 
   //place top level frames in grid
-  mainGrid = new QGridLayout( this, 3, 2, 0);
+  mainGrid = new Q3GridLayout( this, 3, 2, 0);
   mainGrid->addWidget( themeSelectionFrame, 0, 0 );
   mainGrid->addWidget( themePreviewFrame, 0, 1 );
   mainGrid->addMultiCellWidget( locationFrame, 1, 1, 0, 1 );
@@ -253,7 +256,7 @@
 void SaveDialog::browse()
 {
   //get directory from user
-  QString dirName = QFileDialog::getSaveFileName( locationVal->text(),
+  QString dirName = Q3FileDialog::getSaveFileName( locationVal->text(),
                                                   NULL, this, NULL, QString(tr("Save as")) );
 
   if(!dirName.isNull())
diff -urN albumshaper_2.1_src/src/gui/dialogs/saveDialog.h albumshaper_2.1_src-qt4/src/gui/dialogs/saveDialog.h
--- albumshaper_2.1_src/src/gui/dialogs/saveDialog.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/dialogs/saveDialog.h	2014-06-05 09:42:36.504564861 +0200
@@ -12,14 +12,18 @@
 #define GUI_DIALOGS_SAVEDIALOG_H
 
 #include <qdialog.h>
+//Added by qt3to4:
+#include <Q3Frame>
+#include <Q3GridLayout>
+#include <QLabel>
 
 //forward declarations
-class QGridLayout;
+class Q3GridLayout;
 class QLabel;
-class QFrame;
-class QListBox;
+class Q3Frame;
+class Q3ListBox;
 class QLineEdit;
-class QTextBrowser;
+class Q3TextBrowser;
 class QPushButton;
 class ClickableLabel;
 
@@ -58,12 +62,12 @@
   void browse();
 //----------------------
 private:
-  QFrame *locationFrame, *themeSelectionFrame, *themePreviewFrame, *buttonsFrame;
-  QGridLayout *locationGrid, *themeSelectionGrid, *themePreviewGrid, *mainGrid, *buttonsGrid;
+  Q3Frame *locationFrame, *themeSelectionFrame, *themePreviewFrame, *buttonsFrame;
+  Q3GridLayout *locationGrid, *themeSelectionGrid, *themePreviewGrid, *mainGrid, *buttonsGrid;
   QLabel *locationLabel, *themeScreenShot, *themePreviewLabel, *themesLabel, *screenShotLabel;
   QLineEdit *locationVal;
-  QListBox* themesList;
-  QTextBrowser *themeFeatures;
+  Q3ListBox* themesList;
+  Q3TextBrowser *themeFeatures;
   QPushButton *saveButton, *cancelButton;
   
   ClickableLabel *browseButton, *themeScreenPrev, *themeScreenNext;
diff -urN albumshaper_2.1_src/src/gui/dynamicSlider.cpp albumshaper_2.1_src-qt4/src/gui/dynamicSlider.cpp
--- albumshaper_2.1_src/src/gui/dynamicSlider.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/dynamicSlider.cpp	2014-06-05 11:49:05.000695605 +0200
@@ -8,13 +8,19 @@
 //  (at your option) any later version.
 //==============================================
 
+#include <qstyleoption.h>
 #include <qapplication.h>
 #include <qtooltip.h>
+//Added by qt3to4:
+#include <QMouseEvent>
+#include <QLabel>
+#include <Q3Frame>
+#include <QDesktopWidget>
 
 #include "dynamicSlider.h"
 
 //==========================================
-DynamicSlider::DynamicSlider( Orientation orientation, QWidget* parent,
+DynamicSlider::DynamicSlider( Qt::Orientation orientation, QWidget* parent,
                               const char* name) : QSlider(orientation, parent, name)
 {
   //determine the parent screen the tooltip will be displayed in and create tooltip
@@ -42,7 +48,7 @@
 void DynamicSlider::setPrefix( QString val )
 {
   prefix1 = val;
-  prefix2 = QString( NULL );
+  prefix2 = QString::null;
   updateTooltipLabel();
 }
 //==========================================
@@ -56,7 +62,7 @@
 void DynamicSlider::setSuffix( QString val )
 {
   suffix1 = val;
-  suffix2 = QString( NULL );
+  suffix2 = QString::null;
   updateTooltipLabel();
 }
 //==========================================
@@ -120,8 +126,8 @@
 //==========================================
 SliderToolTip::SliderToolTip( QWidget* parent, DynamicSlider* slider) 
 : QLabel( parent, "toolTipTip",
-          WStyle_StaysOnTop | WStyle_Customize | 
-          WStyle_NoBorder | WStyle_Tool | WX11BypassWM )
+          Qt::WStyle_StaysOnTop | Qt::WStyle_Customize | 
+          Qt::WStyle_NoBorder | Qt::WStyle_Tool | Qt::WX11BypassWM )
 {
   //store slider handle                             
   this->slider = slider;
@@ -136,10 +142,10 @@
   
   //setup the otherparmslike a frame etc so it looks like a normal tooltip
   setMargin(1);
-  setAutoMask( FALSE );
-  setFrameStyle( QFrame::Plain | QFrame::Box );
+  //setAutoMask( FALSE ); FIXME probably needs to be replaced
+  setFrameStyle( Q3Frame::Plain | Q3Frame::Box );
   setLineWidth( 1 );
-  setAlignment( AlignAuto | AlignTop );
+  setAlignment( Qt::AlignLeft | Qt::AlignTop );
   setIndent(0);
   polish();
   adjustSize();
@@ -170,7 +176,9 @@
   const int TOOLTIP_MARGIN = 4;
   
   //fetch slider handle rect
-  QRect sliderRect = slider->sliderRect();
+  QStyleOption o;
+  o.initFrom(slider);
+  QRect sliderRect = style()->subControlRect(QStyle::CC_Slider, qstyleoption_cast<QStyleOptionSlider*>(&o), QStyle::SC_SliderHandle, this);
   
   //determine location tooltip will be shown
   QPoint tooltipTopLeft;
diff -urN albumshaper_2.1_src/src/gui/dynamicSlider.h albumshaper_2.1_src-qt4/src/gui/dynamicSlider.h
--- albumshaper_2.1_src/src/gui/dynamicSlider.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/dynamicSlider.h	2014-06-05 09:42:36.468565312 +0200
@@ -14,6 +14,8 @@
 #include <qslider.h>
 #include <qlabel.h>
 #include <qpoint.h>
+//Added by qt3to4:
+#include <QMouseEvent>
 
 class SliderToolTip;
 //==========================================
@@ -22,7 +24,7 @@
 {
 Q_OBJECT
 public:
-  DynamicSlider( Orientation orientation, QWidget* parent, const char* name=0 );
+  DynamicSlider( Qt::Orientation orientation, QWidget* parent, const char* name=0 );
   ~DynamicSlider();
 
   ///when set, a zero string is shown instead of the current value/prefix/suffix when the slider value is 0
diff -urN albumshaper_2.1_src/src/gui/editing/editingInterface.cpp albumshaper_2.1_src-qt4/src/gui/editing/editingInterface.cpp
--- albumshaper_2.1_src/src/gui/editing/editingInterface.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/editing/editingInterface.cpp	2014-06-05 11:59:31.200867025 +0200
@@ -12,18 +12,23 @@
 #include <qlayout.h>
 #include <qlabel.h>
 #include <qfont.h>
-#include <qframe.h>
+#include <q3frame.h>
 #include <qsize.h>
 #include <qtoolbutton.h>
 #include <qimage.h>
 #include <qcursor.h>
 #include <qapplication.h>
+//Added by qt3to4:
+#include <QKeyEvent>
+#include <Q3GridLayout>
+#include <QPixmap>
 #include <math.h>
 #include <qtooltip.h>
-#include <qhgroupbox.h>
+#include <q3hgroupbox.h>
 #include <qpushbutton.h>
 #include <qcombobox.h>
 #include <math.h>
+#include <QDesktopWidget>
 
 //Projectwide includes
 #include "../clickableLabel.h"
@@ -75,7 +80,7 @@
   QFont smallerFont = font();
   smallerFont.setPointSize( smallerFont.pointSize() - 1 );  
 
-  setFocusPolicy(QWidget::StrongFocus);
+  setFocusPolicy(Qt::StrongFocus);
 
   //set photo pointer to null by default
   photo = NULL;
@@ -85,13 +90,13 @@
 
   //----------  
   //Construct photo frame that houses photo being edited and prev and next buttons
-  QFrame* photoFrame = new QFrame(this, "photoFrame" );
+  Q3Frame* photoFrame = new Q3Frame(this, "photoFrame" );
   
   //Construct the frame that houses all the controls
-  QFrame* controlsFrame = new QFrame(this, "controlsFrame");
+  Q3Frame* controlsFrame = new Q3Frame(this, "controlsFrame");
 
   //Place photo fram and control widgets in a top level grid
-  QGridLayout* mainGrid = new QGridLayout( this, 3, 3, 0 );
+  Q3GridLayout* mainGrid = new Q3GridLayout( this, 3, 3, 0 );
   mainGrid->addWidget( photoFrame, 0, 1 );
   mainGrid->setRowStretch(0, 1);
   mainGrid->addMultiCellWidget( controlsFrame, 1,1, 0,2 );
@@ -114,7 +119,7 @@
   connect( nextButton, SIGNAL(clicked()), SLOT(showNextPhoto()) );    
 
   //Place above widgets in grid, allow seletion interface to take up extra room
-  QGridLayout* selectionGrid = new QGridLayout( photoFrame, 1, 5, 0 );
+  Q3GridLayout* selectionGrid = new Q3GridLayout( photoFrame, 1, 5, 0 );
   selectionGrid->setColSpacing( 0, WIDGET_SPACING );
   selectionGrid->addWidget( previousButton,     0, 1, Qt::AlignCenter );
   selectionGrid->addWidget( selectionInterface, 0, 2 );
@@ -124,20 +129,20 @@
   selectionGrid->setSpacing( WIDGET_SPACING );
   //-----------
   //construct the frames each set of controls is placed in
-  QHGroupBox* frameControls   = new QHGroupBox( tr("Frame"),   controlsFrame, "frameControls"   );
+  Q3HGroupBox* frameControls   = new Q3HGroupBox( tr("Frame"),   controlsFrame, "frameControls"   );
   frameControls->setAlignment( Qt::AlignHCenter );
   frameControls->setInsideMargin( WIDGET_SPACING );
 
-  QHGroupBox* enhanceControls = new QHGroupBox( tr("Enhance"), controlsFrame, "enhanceControls" );
+  Q3HGroupBox* enhanceControls = new Q3HGroupBox( tr("Enhance"), controlsFrame, "enhanceControls" );
   enhanceControls->setAlignment( Qt::AlignHCenter ); 
   enhanceControls->setInsideMargin( WIDGET_SPACING );
   
-  QHGroupBox* manipulateControls = new QHGroupBox( tr("Manipulate"), controlsFrame, "applyEffect" );
+  Q3HGroupBox* manipulateControls = new Q3HGroupBox( tr("Manipulate"), controlsFrame, "applyEffect" );
   manipulateControls->setAlignment( Qt::AlignHCenter );
   manipulateControls->setInsideMargin( WIDGET_SPACING );
       
   //layout groups of controls
-  QGridLayout* controlsGrid = new QGridLayout( controlsFrame, 1, 5, 0 );
+  Q3GridLayout* controlsGrid = new Q3GridLayout( controlsFrame, 1, 5, 0 );
   controlsGrid->addWidget( frameControls,      0, 1 );  
   controlsGrid->addWidget( enhanceControls,    0, 2 );  
   controlsGrid->addWidget( manipulateControls, 0, 3 );  
@@ -151,11 +156,11 @@
   //----------   
   //Frame Controls
   //----------    
-  QFrame* frameControlsFrame = new QFrame( frameControls );
+  Q3Frame* frameControlsFrame = new Q3Frame( frameControls );
  
   //-----
   //rotate and flip buttons
-  QFrame* rotateFlipFrame = new QFrame( frameControlsFrame );
+  Q3Frame* rotateFlipFrame = new Q3Frame( frameControlsFrame );
   
   QToolButton* rotateRightButton = new QToolButton( rotateFlipFrame, "rotateRight" );
   rotateRightButton->setIconSet( QPixmap(QString(IMAGE_PATH)+"buttonIcons/rotate90.png") );
@@ -193,7 +198,7 @@
   QToolTip::add( correctTiltButton, tr("Correct tilt") );  
 
   //Place buttons in grid
-  QGridLayout* rotateFlipGrid = new QGridLayout( rotateFlipFrame, 1, 5, 0 );
+  Q3GridLayout* rotateFlipGrid = new Q3GridLayout( rotateFlipFrame, 1, 5, 0 );
   rotateFlipGrid->setSpacing(TIGHT_WIDGET_SPACING);  
   rotateFlipGrid->addWidget( rotateRightButton,    0, 0 );
   rotateFlipGrid->addWidget( rotateLeftButton,     0, 1 );
@@ -254,14 +259,14 @@
 
   //Crop button
   cropButton = new QToolButton( frameControlsFrame );
-  QIconSet cropIcon;
+  QIcon cropIcon;
   cropIcon.setPixmap( QString(IMAGE_PATH)+"buttonIcons/crop.png",
-                      QIconSet::Automatic,
-                      QIconSet::Normal );
+                      QIcon::Automatic,
+                      QIcon::Normal );
                        
   cropIcon.setPixmap( QString(IMAGE_PATH)+"buttonIcons/crop_disabled.png",
-                      QIconSet::Automatic,
-                      QIconSet::Disabled );
+                      QIcon::Automatic,
+                      QIcon::Disabled );
   cropButton->setIconSet( cropIcon );
   connect( cropButton, SIGNAL(clicked()), SLOT(crop()) );
   QToolTip::add( cropButton, tr("Crop photo to selected region") );  
@@ -272,7 +277,7 @@
   //--  
 
   //Place frame controls in a grid
-  QGridLayout* frameControlsGrid = new QGridLayout( frameControlsFrame, 3, 2, 0 );
+  Q3GridLayout* frameControlsGrid = new Q3GridLayout( frameControlsFrame, 3, 2, 0 );
   frameControlsGrid->setSpacing(TIGHT_WIDGET_SPACING);  
   frameControlsGrid->addMultiCellWidget( rotateFlipFrame, 0,0,  0,1 );
   frameControlsGrid->addWidget( aspectRatios,     1, 0, Qt::AlignHCenter );  
@@ -283,7 +288,7 @@
   //----------  
   //Enhance Controls
   //----------    
-  QFrame* enhanceControlsFrame = new QFrame( enhanceControls );  
+  Q3Frame* enhanceControlsFrame = new Q3Frame( enhanceControls );  
   
   //setup params for large buttons  
   int numLargeButtons = 3;
@@ -293,7 +298,7 @@
 
   //--------------------
   //Frame for semi-automatic enhance controls
-  QFrame* autoEnhanceControlsFrame = new QFrame( enhanceControlsFrame );  
+  Q3Frame* autoEnhanceControlsFrame = new Q3Frame( enhanceControlsFrame );  
 
   //Enhance Color
   ClickableLabel* enhanceColorButton = largeButtons[curButtonIndex] = 
@@ -330,7 +335,7 @@
   removeRedyEyeLabel->setFont( smallerFont );  
 
   //Place semi-automatic enhance controls in grid
-  QGridLayout* autoEnhanceControlsGrid = new QGridLayout( autoEnhanceControlsFrame, 2, 3, 0 );
+  Q3GridLayout* autoEnhanceControlsGrid = new Q3GridLayout( autoEnhanceControlsFrame, 2, 3, 0 );
   autoEnhanceControlsGrid->setSpacing(TIGHT_WIDGET_SPACING);  
   autoEnhanceControlsGrid->addWidget( enhanceColorButton,    0, 0, Qt::AlignHCenter );
   autoEnhanceControlsGrid->addWidget( enhanceColorLabel,     1, 0, Qt::AlignHCenter );  
@@ -342,7 +347,7 @@
   autoEnhanceControlsGrid->addWidget( removeRedyEyeLabel,    1, 2, Qt::AlignHCenter );  
   //--------------------
   //Frame for more labor intensive enhance controls
-  QFrame* manualEnhanceControlsFrame = new QFrame( enhanceControlsFrame );  
+  Q3Frame* manualEnhanceControlsFrame = new Q3Frame( enhanceControlsFrame );  
   
   //Tune Levels Button
   ClickableLabel* tuneLevelsButton = new ClickableLabel( manualEnhanceControlsFrame );
@@ -363,7 +368,7 @@
   adjustGrainLabel->setFont( smallerFont );  
 
   //Place manual enhance controls in grid
-  QGridLayout* manualEnhanceControlsGrid = new QGridLayout( manualEnhanceControlsFrame, 2, 3, 0 );
+  Q3GridLayout* manualEnhanceControlsGrid = new Q3GridLayout( manualEnhanceControlsFrame, 2, 3, 0 );
   manualEnhanceControlsGrid->setSpacing(TIGHT_WIDGET_SPACING);  
   manualEnhanceControlsGrid->addWidget( tuneLevelsButton,    0, 0, Qt::AlignHCenter );
   manualEnhanceControlsGrid->addWidget( tuneLevelsLabel,     1, 0, Qt::AlignHCenter );
@@ -373,7 +378,7 @@
   //--------------------
 
   //Place enhance controls in a grid
-  QGridLayout* enhanceControlsGrid = new QGridLayout( enhanceControlsFrame, 4, 2, 0 );
+  Q3GridLayout* enhanceControlsGrid = new Q3GridLayout( enhanceControlsFrame, 4, 2, 0 );
   enhanceControlsGrid->setSpacing(WIDGET_SPACING);  
   enhanceControlsGrid->addWidget( autoEnhanceControlsFrame,   0, 0, Qt::AlignHCenter );
   enhanceControlsGrid->addWidget( manualEnhanceControlsFrame, 1, 0, Qt::AlignHCenter );
@@ -383,7 +388,7 @@
   //----------  
   //Effects Controls
   //----------  
-  QFrame* manipulateControlsFrame = new QFrame( manipulateControls, "manipulateControlsFrame" );
+  Q3Frame* manipulateControlsFrame = new Q3Frame( manipulateControls, "manipulateControlsFrame" );
   //--  
   //Effects
   effectsList = new QComboBox( manipulateControlsFrame );
@@ -414,7 +419,7 @@
   effectPreview = new QLabel( manipulateControlsFrame );
  
   //Place effects controls in a grid
-  QGridLayout* manipulateControlsGrid = new QGridLayout( manipulateControlsFrame, 2, 2, 0 );
+  Q3GridLayout* manipulateControlsGrid = new Q3GridLayout( manipulateControlsFrame, 2, 2, 0 );
   manipulateControlsGrid->setSpacing(TIGHT_WIDGET_SPACING);  
   manipulateControlsGrid->addWidget( effectsList, 0, 0 );
   manipulateControlsGrid->addWidget( applyEffectButton, 1, 0, Qt::AlignHCenter );  
@@ -958,10 +963,10 @@
     case Qt::Key_Escape:
       returnAction();
       break;
-    case Qt::Key_Prior:
+    case Qt::Key_PageUp:
       showPrevPhoto();
       break;
-    case Qt::Key_Next:
+    case Qt::Key_PageDown:
       showNextPhoto();
       break;
     case Qt::Key_Home:
@@ -971,17 +976,17 @@
       showLastPhoto();
       break;
     case Qt::Key_R:
-      if(e->state() & Qt::ControlButton)
+      if(e->state() & Qt::ControlModifier)
         rotateRight();
       break;
     case Qt::Key_L:
-      if(e->state() & Qt::ControlButton)
+      if(e->state() & Qt::ControlModifier)
         rotateLeft();
       break;
     case Qt::Key_F:
-      if(e->state() & Qt::ControlButton)
+      if(e->state() & Qt::ControlModifier)
       {
-        if( e->state() & Qt::AltButton )
+        if( e->state() & Qt::AltModifier )
           flipVertical();
         else
           flipHorizontal();
diff -urN albumshaper_2.1_src/src/gui/editing/editingInterface.h albumshaper_2.1_src-qt4/src/gui/editing/editingInterface.h
--- albumshaper_2.1_src/src/gui/editing/editingInterface.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/editing/editingInterface.h	2014-06-05 09:42:36.486565086 +0200
@@ -1,3 +1,6 @@
+//Added by qt3to4:
+#include <QLabel>
+#include <QKeyEvent>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
diff -urN albumshaper_2.1_src/src/gui/editing/grainEditor.cpp albumshaper_2.1_src-qt4/src/gui/editing/grainEditor.cpp
--- albumshaper_2.1_src/src/gui/editing/grainEditor.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/editing/grainEditor.cpp	2014-06-05 09:42:36.344566862 +0200
@@ -13,10 +13,14 @@
 #include <qlabel.h>
 #include <qcombobox.h>
 #include <qpushbutton.h>
-#include <qframe.h>
+#include <q3frame.h>
 #include <qslider.h>
 #include <qtooltip.h>
 #include <qsizegrip.h>
+//Added by qt3to4:
+#include <Q3GridLayout>
+#include <QPixmap>
+#include <QKeyEvent>
 
 //Projectwide includes
 #include "grainEditor.h"
@@ -48,7 +52,7 @@
   clusterMap = detector.getClusterMap();
   numRegions = detector.getNumClusters();
   
-  QFrame* visibleFrame = new QFrame( this, "visible widgets" );
+  Q3Frame* visibleFrame = new Q3Frame( this, "visible widgets" );
   //--------------
   //Preview frame
   previewInterface = new PanningPreviewInterface( fileName, 
@@ -60,7 +64,7 @@
   connect( previewSelection, SIGNAL(activated(int)), this, SLOT(selectPreviewImageType(int)) );  
    //--------------  
   //Controls frame 
-  QFrame* controlsFrame = new QFrame( visibleFrame, "controlsFrame" );
+  Q3Frame* controlsFrame = new Q3Frame( visibleFrame, "controlsFrame" );
 
   QLabel* selectionLabel = new QLabel( tr("Region Shown in Detail:"), 
                                        controlsFrame, "selectionLabel" );
@@ -104,7 +108,7 @@
   QToolTip::add( regionsIcon, tr("Reset regions") );
  */
   //--
-  QGridLayout* controlsGrid = new QGridLayout( controlsFrame, 6, 4, 0 );
+  Q3GridLayout* controlsGrid = new Q3GridLayout( controlsFrame, 6, 4, 0 );
   controlsGrid->setRowStretch( 0, 1 );  
 
   controlsGrid->addMultiCellWidget( selectionLabel,              1,1, 0,3 );
@@ -126,7 +130,7 @@
   controlsGrid->setColStretch( 3, 1 );
   //--------------
   //Dialog buttons:  
-  buttonsFrame =   new QFrame( visibleFrame, "dialogButtons" );
+  buttonsFrame =   new Q3Frame( visibleFrame, "dialogButtons" );
 
   QPushButton* applyButton = new QPushButton( tr("Apply"), buttonsFrame );
   applyButton->setDefault(true);
@@ -139,7 +143,7 @@
   QPushButton* resetButton = new QPushButton( tr("Reset"), buttonsFrame );
   connect( resetButton, SIGNAL(clicked()), SLOT(resetAction()) );
 
-  QGridLayout* buttonsGrid = new QGridLayout( buttonsFrame, 1, 5, 0 );
+  Q3GridLayout* buttonsGrid = new Q3GridLayout( buttonsFrame, 1, 5, 0 );
   buttonsGrid->setColStretch( 0, 1 );
   buttonsGrid->addWidget( applyButton,  0, 1 );
   buttonsGrid->addWidget( cancelButton, 0, 2 );
@@ -148,7 +152,7 @@
   buttonsGrid->setSpacing( WIDGET_SPACING );
   //--------------
   //Top level grid  
-  QGridLayout* mainGrid = new QGridLayout( visibleFrame, 3, 2, 0 );
+  Q3GridLayout* mainGrid = new Q3GridLayout( visibleFrame, 3, 2, 0 );
   
   mainGrid->addWidget( previewInterface, 0,0 );
   mainGrid->addWidget( previewSelection, 1,0, Qt::AlignHCenter );  
@@ -164,7 +168,7 @@
   mainGrid->setMargin( WIDGET_SPACING );  
 
 
-  QGridLayout* invisibleGrid = new QGridLayout( this, 2, 1, 0 );
+  Q3GridLayout* invisibleGrid = new Q3GridLayout( this, 2, 1, 0 );
   invisibleGrid->addWidget( visibleFrame, 0, 0 );
   invisibleGrid->setRowStretch( 0, 1 );
 
diff -urN albumshaper_2.1_src/src/gui/editing/grainEditor.h albumshaper_2.1_src-qt4/src/gui/editing/grainEditor.h
--- albumshaper_2.1_src/src/gui/editing/grainEditor.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/editing/grainEditor.h	2014-06-05 09:42:36.490565036 +0200
@@ -1,3 +1,6 @@
+//Added by qt3to4:
+#include <Q3Frame>
+#include <QKeyEvent>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
@@ -18,7 +21,7 @@
 class SelectionPlacementInterface;
 //--------------------
 class QComboBox;
-class QFrame;
+class Q3Frame;
 class ClickableLabel;
 
 #include <qdialog.h>
@@ -94,7 +97,7 @@
   SelectionPlacementInterface* selectionPlacementInterface;
   
   QComboBox* previewSelection;
-  QFrame* buttonsFrame;  
+  Q3Frame* buttonsFrame;  
   
   ///Grain slider
   BlurSharpenSlider* boundariesSlider;
diff -urN albumshaper_2.1_src/src/gui/editing/histogramEditor.cpp albumshaper_2.1_src-qt4/src/gui/editing/histogramEditor.cpp
--- albumshaper_2.1_src/src/gui/editing/histogramEditor.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/editing/histogramEditor.cpp	2014-06-05 12:07:29.272890303 +0200
@@ -13,10 +13,17 @@
 #include <qlabel.h>
 #include <qcombobox.h>
 #include <qpushbutton.h>
-#include <qframe.h>
+#include <q3frame.h>
 #include <qslider.h>
 #include <qtooltip.h>
 #include <qsizegrip.h>
+//Added by qt3to4:
+#include <Q3GridLayout>
+#include <QPixmap>
+#include <QKeyEvent>
+
+#define MIN(x,y) ((x) < (y) ? (x) : (y))
+#define MAX(x,y) ((x) > (y) ? (x) : (y))
 
 //Projectwide includes
 #include "histogramEditor.h"
@@ -67,7 +74,7 @@
   meanG = meanG / ( image.width() * image.height() );
   meanB = meanB / ( image.width() * image.height() );
   
-  QFrame* visibleFrame = new QFrame( this, "visible widgets" );
+  Q3Frame* visibleFrame = new Q3Frame( this, "visible widgets" );
   //--------------  
   //Preview frame: 
   previewInterface = new ScaledPreviewInterface( fileName, visibleFrame, 
@@ -131,7 +138,7 @@
   QToolTip::add( contrastIcon, tr("Reset contrast") );
   //--------------
   //Dialog buttons:  
-  buttonsFrame =   new QFrame( visibleFrame, "dialogButtons" );
+  buttonsFrame =   new Q3Frame( visibleFrame, "dialogButtons" );
 
   QPushButton* applyButton = new QPushButton( tr("Apply"), buttonsFrame );
   applyButton->setDefault(true);
@@ -144,7 +151,7 @@
   QPushButton* resetButton = new QPushButton( tr("Reset"), buttonsFrame );
   connect( resetButton, SIGNAL(clicked()), SLOT(resetAction()) );
 
-  QGridLayout* buttonsGrid = new QGridLayout( buttonsFrame, 1, 5, 0 );
+  Q3GridLayout* buttonsGrid = new Q3GridLayout( buttonsFrame, 1, 5, 0 );
   buttonsGrid->setColStretch( 0, 1 );
   buttonsGrid->addWidget( applyButton,  0, 1 );
   buttonsGrid->addWidget( cancelButton, 0, 2 );
@@ -152,7 +159,7 @@
   buttonsGrid->setColStretch( 4, 1 );  
   buttonsGrid->setSpacing( WIDGET_SPACING );
   //--------------
-  QGridLayout* mainGrid = new QGridLayout( visibleFrame, 5, 3, 0 );
+  Q3GridLayout* mainGrid = new Q3GridLayout( visibleFrame, 5, 3, 0 );
   
   mainGrid->addMultiCellWidget( previewInterface,     0,0, 0,2 );
   mainGrid->addMultiCellWidget( previewSelection, 1,1, 0,2, Qt::AlignHCenter );  
@@ -176,7 +183,7 @@
   mainGrid->setSpacing( WIDGET_SPACING );
   mainGrid->setMargin( WIDGET_SPACING );
   
-  QGridLayout* invisibleGrid = new QGridLayout( this, 2, 1, 0 );
+  Q3GridLayout* invisibleGrid = new Q3GridLayout( this, 2, 1, 0 );
   invisibleGrid->addWidget( visibleFrame, 0, 0 );
   invisibleGrid->setRowStretch( 0, 1 );
   
@@ -374,9 +381,9 @@
       b = brightnessScalar*b + addedBrightnessColor;
       
       //scale and clamp to 0-255 range
-      rPrime = (int) QMIN( QMAX((r*255), 0), 255 );
-      gPrime = (int) QMIN( QMAX((g*255), 0), 255 );
-      bPrime = (int) QMIN( QMAX((b*255), 0), 255 );
+      rPrime = (int) MIN( MAX((r*255), 0), 255 );
+      gPrime = (int) MIN( MAX((g*255), 0), 255 );
+      bPrime = (int) MIN( MAX((b*255), 0), 255 );
       
       //set adjusted color value
       *rgb = qRgb(rPrime, gPrime, bPrime);          
@@ -386,7 +393,7 @@
 //==============================================
 double HistogramEditor::scaleColor( double color, int left, int right )
 {
-  return QMAX( QMIN( (255.0*(color-left)) / (right-left), 255), 0 );  
+  return MAX( MIN( (255.0*(color-left)) / (right-left), 255), 0 );  
 }
 //==============================================
 void HistogramEditor::keyPressEvent(QKeyEvent *e)
diff -urN albumshaper_2.1_src/src/gui/editing/histogramEditor.h albumshaper_2.1_src-qt4/src/gui/editing/histogramEditor.h
--- albumshaper_2.1_src/src/gui/editing/histogramEditor.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/editing/histogramEditor.h	2014-06-05 09:42:36.489565049 +0200
@@ -1,3 +1,6 @@
+//Added by qt3to4:
+#include <Q3Frame>
+#include <QKeyEvent>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
@@ -13,7 +16,7 @@
 
 //--------------------
 //forward declarations
-class QFrame;
+class Q3Frame;
 class QComboBox;
 class ClickableLabel;
 class DynamicSlider;
@@ -98,7 +101,7 @@
   QComboBox* histogramType;
   ClickableLabel* brightnessIcon;
   ClickableLabel* contrastIcon;
-  QFrame* buttonsFrame;  
+  Q3Frame* buttonsFrame;  
   
   
   ///Brightness slider
diff -urN albumshaper_2.1_src/src/gui/editing/histogramInterface.cpp albumshaper_2.1_src-qt4/src/gui/editing/histogramInterface.cpp
--- albumshaper_2.1_src/src/gui/editing/histogramInterface.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/editing/histogramInterface.cpp	2014-06-05 12:09:03.152716643 +0200
@@ -13,8 +13,13 @@
 #include <qpainter.h>
 #include <qpixmap.h>
 #include <qimage.h>
-#include <qaccel.h>
+#include <q3accel.h>
 #include <qcursor.h>
+//Added by qt3to4:
+#include <QPaintEvent>
+#include <QResizeEvent>
+#include <QMouseEvent>
+#include <QDesktopWidget>
 
 //Projectwide includes
 #include "histogramInterface.h"
@@ -35,7 +40,7 @@
 //==============================================
 HistogramInterface::HistogramInterface( QString imageFilename, 
                                         QWidget *parent, const char* name ) : 
-                                        QWidget (parent, name, WNoAutoErase)
+                                        QWidget (parent, name, Qt::WNoAutoErase)
 {                     
   //set default mode to adjusted image
   displayedChannel = LUMINOSITY;
@@ -95,11 +100,11 @@
   setMouseTracking(true);
   
   //accept focus when clicked on
-  setFocusPolicy( QWidget::ClickFocus );  
+  setFocusPolicy( Qt::ClickFocus );  
 
   ///add keybinding for selecting entire range
-  QAccel *keyAccel = new QAccel( this );
-  keyAccel->connectItem( keyAccel->insertItem( CTRL + Key_A),
+  Q3Accel *keyAccel = new Q3Accel( this );
+  keyAccel->connectItem( keyAccel->insertItem( Qt::CTRL + Qt::Key_A),
                          this, SLOT(selectAll()) );  
   
   //default cursor is cross hair indication regions can be selected
@@ -156,7 +161,7 @@
 { 
   //create buffer to draw in
   QPixmap buffer( size() );
-  buffer.fill( white );
+  buffer.fill( Qt::white );
   
   //create a painter pointing to the buffer
   QPainter bufferPainter( &buffer );
@@ -169,13 +174,13 @@
 
   //get handle on histogram data, get max count, set default draw color, and find
   //left and right boundaries of current selection  
-  QColor color = black;
+  QColor color = Qt::black;
   int* data = grayVals;
   int maxCount = maxGRAYcount;
 
-  if(displayedChannel == RED)        { data = redVals;   color = red;   maxCount = maxRcount; }
-  else if(displayedChannel == GREEN) { data = greenVals; color = green; maxCount = maxGcount; }
-  else if(displayedChannel == BLUE)  { data = blueVals;  color = blue;  maxCount = maxBcount; }
+  if(displayedChannel == RED)        { data = redVals;   color = Qt::red;   maxCount = maxRcount; }
+  else if(displayedChannel == GREEN) { data = greenVals; color = Qt::green; maxCount = maxGcount; }
+  else if(displayedChannel == BLUE)  { data = blueVals;  color = Qt::blue;  maxCount = maxBcount; }
   
   int indexLeft, indexRight;
   getSelectedRange(indexLeft,indexRight);
@@ -212,7 +217,7 @@
     {
       //use a gray color outside selected range
       QColor usedColor = color;
-      if(x < displayLeft || x > displayRight) { usedColor = gray; }
+      if(x < displayLeft || x > displayRight) { usedColor = Qt::gray; }
         
       bufferPainter.fillRect( QRect(x, histogramHeight - h, 
                                     1, h),
@@ -233,7 +238,7 @@
   //first a black border
   bufferPainter.fillRect( QRect(0, histogramHeight + COLOR_BAR_MARGIN, 
                                 width(), COLOR_BAR_HEIGHT+2*COLOR_BAR_BORDER),
-                          QBrush(black) );    
+                          QBrush(Qt::black) );    
 
   //next the color gradient
   QColor scaledColor;
@@ -256,7 +261,7 @@
     if( b != 0) b = index;
     
     //black color was used when adjusting luminance, scale to white instead (since black is 0)
-    if( color == black )
+    if( color == Qt::black )
     { r = g = b = index; }
 
     scaledColor.setRgb( r,g,b );
diff -urN albumshaper_2.1_src/src/gui/editing/histogramInterface.h albumshaper_2.1_src-qt4/src/gui/editing/histogramInterface.h
--- albumshaper_2.1_src/src/gui/editing/histogramInterface.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/editing/histogramInterface.h	2014-06-05 09:42:36.496564961 +0200
@@ -16,6 +16,10 @@
 //--------------------
 
 #include <qwidget.h>
+//Added by qt3to4:
+#include <QResizeEvent>
+#include <QMouseEvent>
+#include <QPaintEvent>
 
 ///chanel histogram displays
 typedef enum
diff -urN albumshaper_2.1_src/src/gui/editing/manipulations/mosaicOptionsDialog.cpp albumshaper_2.1_src-qt4/src/gui/editing/manipulations/mosaicOptionsDialog.cpp
--- albumshaper_2.1_src/src/gui/editing/manipulations/mosaicOptionsDialog.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/editing/manipulations/mosaicOptionsDialog.cpp	2014-06-05 09:42:36.371566524 +0200
@@ -9,19 +9,22 @@
 //==============================================
 
 //Systemwide includes
-#include <qframe.h>
+#include <q3frame.h>
 #include <qlabel.h>
 #include <qradiobutton.h>
 #include <qlineedit.h>
 #include <qapplication.h>
 #include <qdir.h>
-#include <qbuttongroup.h>
+#include <q3buttongroup.h>
 #include <qcombobox.h>
 #include <qpushbutton.h>
 #include <qlayout.h>
 #include <qlineedit.h>
 #include <qspinbox.h>
-#include <qfiledialog.h>
+#include <q3filedialog.h>
+//Added by qt3to4:
+#include <Q3GridLayout>
+#include <QPixmap>
 
 //Projectwide includes
 #include "mosaicOptionsDialog.h"
@@ -46,7 +49,7 @@
 {
   //--------------
   //Tile size options:
-  QFrame* tileSizeOptions = new QFrame(this);
+  Q3Frame* tileSizeOptions = new Q3Frame(this);
   
   QLabel* tileSizeLabel = new QLabel( tr("Tile size:"), this );
   tileSizes = new QComboBox( tileSizeOptions );
@@ -73,7 +76,7 @@
   //update custom controls when selection changes in the future
   connect( tileSizes, SIGNAL(activated(int)), this, SLOT(updateTileSizePreview()) );  
   
-  QGridLayout* tileSizeGrid = new QGridLayout( tileSizeOptions, 1, 6, 0 );
+  Q3GridLayout* tileSizeGrid = new Q3GridLayout( tileSizeOptions, 1, 6, 0 );
   tileSizeGrid->addWidget( tileSizes,  1, 0 );
   tileSizeGrid->addWidget( tileSizePreview,  1, 1 );
   tileSizeGrid->addWidget( tileWidth,        1, 2 );
@@ -83,7 +86,7 @@
   tileSizeGrid->setSpacing( WIDGET_SPACING );
   //--------------
   //Tile type options:
-  QFrame* tileTypeOptions = new QFrame(this);
+  Q3Frame* tileTypeOptions = new Q3Frame(this);
   
   QLabel* tileTypeLabel = new QLabel( tr("Base tiles on:"), this );
   //------------------------------
@@ -118,13 +121,13 @@
   updateImagesFromOptions();
   //------------------------------    
   
-  QButtonGroup* typeGroup = new QButtonGroup( tileTypeOptions );
+  Q3ButtonGroup* typeGroup = new Q3ButtonGroup( tileTypeOptions );
   typeGroup->hide();
   typeGroup->insert( tileType_albumPhotos );
   typeGroup->insert( tileType_solidColors );
   typeGroup->insert( tileType_imagesFrom );
  
-  QGridLayout* tileTypeGrid = new QGridLayout( tileTypeOptions, 3, 3, 0 );
+  Q3GridLayout* tileTypeGrid = new Q3GridLayout( tileTypeOptions, 3, 3, 0 );
   tileTypeGrid->addMultiCellWidget( tileType_albumPhotos,   0,0, 0,2 );
   tileTypeGrid->addMultiCellWidget( tileType_solidColors,   1,1, 0,2 );
   tileTypeGrid->addWidget(          tileType_imagesFrom,   2,0 );
@@ -136,7 +139,7 @@
   tileTypeGrid->setSpacing( WIDGET_SPACING );
   //--------------
   //Dialog buttons:  
-  QFrame* buttonsFrame =   new QFrame( this, "dialogButtons" );
+  Q3Frame* buttonsFrame =   new Q3Frame( this, "dialogButtons" );
                                 
   QPushButton* applyButton = new QPushButton( tr("Apply"), buttonsFrame );
   applyButton->setDefault(true);
@@ -146,13 +149,13 @@
   QPushButton* cancelButton = new QPushButton( tr("Cancel"), buttonsFrame );
   connect( cancelButton, SIGNAL(clicked()), SLOT(reject()) );
    
-  QGridLayout* buttonsGrid = new QGridLayout( buttonsFrame, 1, 2, 0 );
+  Q3GridLayout* buttonsGrid = new Q3GridLayout( buttonsFrame, 1, 2, 0 );
   buttonsGrid->addWidget( applyButton,  0, 0 );
   buttonsGrid->addWidget( cancelButton, 0, 1 );
   buttonsGrid->setSpacing( WIDGET_SPACING );
   //--------------
   //Top level grid  
-  QGridLayout* mainGrid = new QGridLayout( this, 5, 2, 0 );
+  Q3GridLayout* mainGrid = new Q3GridLayout( this, 5, 2, 0 );
 
   mainGrid->setRowStretch( 0, 1 );
   mainGrid->addWidget( tileSizeLabel,            1,0, Qt::AlignRight | Qt::AlignVCenter );
@@ -289,7 +292,7 @@
 void MosaicOptionsDialog::browse()
 {
   //get directory from user
-  QString dirName = QFileDialog::getExistingDirectory( locationVal->text(), this, NULL, tr("Images directory") );
+  QString dirName = Q3FileDialog::getExistingDirectory( locationVal->text(), this, NULL, tr("Images directory") );
   
   if(!dirName.isNull())
     locationVal->setText( dirName );
diff -urN albumshaper_2.1_src/src/gui/editing/manipulations/mosaicOptionsDialog.h albumshaper_2.1_src-qt4/src/gui/editing/manipulations/mosaicOptionsDialog.h
--- albumshaper_2.1_src/src/gui/editing/manipulations/mosaicOptionsDialog.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/editing/manipulations/mosaicOptionsDialog.h	2014-06-05 09:42:36.497564949 +0200
@@ -1,3 +1,5 @@
+//Added by qt3to4:
+#include <QLabel>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
diff -urN albumshaper_2.1_src/src/gui/editing/panningPreviewInterface.cpp albumshaper_2.1_src-qt4/src/gui/editing/panningPreviewInterface.cpp
--- albumshaper_2.1_src/src/gui/editing/panningPreviewInterface.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/editing/panningPreviewInterface.cpp	2014-06-05 09:42:36.351566774 +0200
@@ -10,6 +10,8 @@
 
 //Projectwide includes
 #include "panningPreviewInterface.h"
+//Added by qt3to4:
+#include <QResizeEvent>
 
 //==============================================
 PanningPreviewInterface::PanningPreviewInterface( QString imageFilename, 
diff -urN albumshaper_2.1_src/src/gui/editing/panningPreviewInterface.h albumshaper_2.1_src-qt4/src/gui/editing/panningPreviewInterface.h
--- albumshaper_2.1_src/src/gui/editing/panningPreviewInterface.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/editing/panningPreviewInterface.h	2014-06-05 09:42:36.493564999 +0200
@@ -12,6 +12,8 @@
 #define GUI_EDITING_PANNINGPREVIEWINTERFACE_H
 
 #include <qrect.h>
+//Added by qt3to4:
+#include <QResizeEvent>
 
 #include "splitViewInterface.h"
 
diff -urN albumshaper_2.1_src/src/gui/editing/scaledPreviewInterface.cpp albumshaper_2.1_src-qt4/src/gui/editing/scaledPreviewInterface.cpp
--- albumshaper_2.1_src/src/gui/editing/scaledPreviewInterface.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/editing/scaledPreviewInterface.cpp	2014-06-05 12:07:57.168541559 +0200
@@ -10,6 +10,9 @@
 
 //Systemwide includes
 #include <qapplication.h>
+//Added by qt3to4:
+#include <QResizeEvent>
+#include <QDesktopWidget>
 
 //Projectwide includes
 #include "scaledPreviewInterface.h"
@@ -37,7 +40,7 @@
 
   //generate orig image
   //set adjusted image to null so repain won't occur until it is reset
-  setImages( fullScreenImage.scale( width(), height(), QImage::ScaleMin ),
+  setImages( fullScreenImage.scaled( width(), height(), Qt::KeepAspectRatio ),
              QImage() );
   
   //emit resized signal
diff -urN albumshaper_2.1_src/src/gui/editing/scaledPreviewInterface.h albumshaper_2.1_src-qt4/src/gui/editing/scaledPreviewInterface.h
--- albumshaper_2.1_src/src/gui/editing/scaledPreviewInterface.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/editing/scaledPreviewInterface.h	2014-06-05 09:42:36.492565011 +0200
@@ -12,6 +12,8 @@
 #define GUI_EDITING_SCALEDPREVIEWINTERFACE_H
 
 #include "splitViewInterface.h"
+//Added by qt3to4:
+#include <QResizeEvent>
 
 //=====================================
 /*! \brief */
diff -urN albumshaper_2.1_src/src/gui/editing/selectionInterface.cpp albumshaper_2.1_src-qt4/src/gui/editing/selectionInterface.cpp
--- albumshaper_2.1_src/src/gui/editing/selectionInterface.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/editing/selectionInterface.cpp	2014-06-05 12:07:02.025230945 +0200
@@ -14,8 +14,15 @@
 #include <qpainter.h>
 #include <qevent.h>
 #include <qpoint.h>
-#include <qaccel.h>
+#include <q3accel.h>
 #include <qcursor.h>
+//Added by qt3to4:
+#include <QPaintEvent>
+#include <QResizeEvent>
+#include <QPixmap>
+#include <QMouseEvent>
+#include <QKeyEvent>
+#include <QDesktopWidget>
 
 //Projectwide includes
 #include "selectionInterface.h"
@@ -25,6 +32,9 @@
 #include "../window.h"
 #include "../../configuration/configuration.h"
 
+#define MIN(x,y) ((x) < (y) ? (x) : (y))
+#define MAX(x,y) ((x) > (y) ? (x) : (y))
+
 //a mouse press within DRAG_THRESHOLD will move corners or sides
 //if mouse press is not within DRAG_THRESHOLD of any corner or side of
 //current selection a new selection will be started and both press and drag points will be reset
@@ -41,7 +51,7 @@
 SelectionInterface::SelectionInterface(QWidget *parent, const char* name ) : QWidget(parent,name)
 { 
   //avoid flicker when repainting
-  setWFlags(WRepaintNoErase);
+  setWindowFlags(Qt::WNoAutoErase);
 
   //set default selection off screen
   mousePressPoint = QPoint(-1,-1);
@@ -51,17 +61,17 @@
   currentDragMode = NO_EFFECT;
   currentMouseShape = NO_EFFECT;
     
-  QAccel *keyAccel = new QAccel( this );
-  keyAccel->connectItem( keyAccel->insertItem( CTRL + Key_A),
+  Q3Accel *keyAccel = new Q3Accel( this );
+  keyAccel->connectItem( keyAccel->insertItem( Qt::CTRL + Qt::Key_A),
                          this, SLOT(selectAll()) );
-  keyAccel->connectItem( keyAccel->insertItem( CTRL + SHIFT + Key_A ),
+  keyAccel->connectItem( keyAccel->insertItem( Qt::CTRL + Qt::SHIFT + Qt::Key_A ),
                          this, SLOT(selectNone()) );
   
   //watch mouse movements in order to change mouse cursor
   setMouseTracking(true);
 
   //accept focus when clicked on
-  setFocusPolicy( QWidget::ClickFocus );
+  setFocusPolicy( Qt::ClickFocus );
   
   //initialize cached mouse position to be offscreen by default
   cachedMousePosition = QPoint(-1,-1);  
@@ -117,7 +127,7 @@
 void SelectionInterface::constructDisplayImages()
 {  
   //rescale image to fit on screen
-  scaledImage = fullScreenImage.scale( width(), height(), QImage::ScaleMin );     
+  scaledImage = fullScreenImage.scaled( width(), height(), Qt::KeepAspectRatio );     
   
   //construct an unselected scaled image
   unselectedScaledImage = scaledImage.copy();  
@@ -146,9 +156,9 @@
       
       //convert adjusted color back to rgb colorspace and clamp
       HSVtoRGB( &r,&g,&b, h,s,v);         
-      int rp = (int) QMIN( QMAX((r*255), 0), 255 );
-      int gp = (int) QMIN( QMAX((g*255), 0), 255 );
-      int bp = (int) QMIN( QMAX((b*255), 0), 255 );
+      int rp = (int) MIN( MAX((r*255), 0), 255 );
+      int gp = (int) MIN( MAX((g*255), 0), 255 );
+      int bp = (int) MIN( MAX((b*255), 0), 255 );
       
       //set adjusted color value
       *rgb = qRgb(rp,gp,bp);          
@@ -202,7 +212,7 @@
       pen.setStyle( Qt::SolidLine );
       pen.setCapStyle( Qt::RoundCap );
       pen.setWidth( 2 );
-      pen.setColor( green );
+      pen.setColor( Qt::green );
       bufferPainter.setPen( pen);
       
       //draw line
@@ -232,10 +242,10 @@
       bufferPainter.drawImage( QPoint(xOffset, yOffset), unselectedScaledImage );
       
       //construct topLeft and bottomRight points to make logic easier
-      QPoint topLeft( QMIN(mousePressPoint.x(), mouseDragPoint.x()),
-                      QMIN(mousePressPoint.y(), mouseDragPoint.y()) );
-      QPoint bottomRight( QMAX(mousePressPoint.x(), mouseDragPoint.x()),
-                          QMAX(mousePressPoint.y(), mouseDragPoint.y()) );  
+      QPoint topLeft( MIN(mousePressPoint.x(), mouseDragPoint.x()),
+                      MIN(mousePressPoint.y(), mouseDragPoint.y()) );
+      QPoint bottomRight( MAX(mousePressPoint.x(), mouseDragPoint.x()),
+                          MAX(mousePressPoint.y(), mouseDragPoint.y()) );  
       
       //convert coordinates from original image space to display space
       topLeft = ConvertImageToDisplayCoordinate( topLeft );
@@ -255,8 +265,8 @@
       //resolution is great enough, otherwise use red to indicate that cropping to
       //the specified size will result in pixelation during printing
       QPen pen;
-      QColor selectionColor = gray;
-      QColor textColor = white;
+      QColor selectionColor = Qt::gray;
+      QColor textColor = Qt::white;
       int selectedWidth = QABS( mouseDragPoint.x() - mousePressPoint.x() ) + 1;
       int selectedHeight = QABS( mouseDragPoint.y() - mousePressPoint.y() ) + 1;
       if(selectedWidth == 1) selectedWidth = 0;
@@ -298,23 +308,23 @@
       const int TEXT_MARGIN = 4;
       if( mouseDragPoint.x() > mousePressPoint.x() )
       { 
-        textX = QMIN( xOffset + unselectedScaledImage.width() - TEXT_MARGIN - stringWidth,
+        textX = MIN( xOffset + unselectedScaledImage.width() - TEXT_MARGIN - stringWidth,
                       bottomRight.x() + TEXT_MARGIN ); 
       }
       else
       { 
-        textX = QMAX( xOffset + TEXT_MARGIN, 
+        textX = MAX( xOffset + TEXT_MARGIN, 
                       topLeft.x() - TEXT_MARGIN - stringWidth ); 
       }
       
       if( mouseDragPoint.y() > mousePressPoint.y() )
       { 
-        textY = QMIN( yOffset + unselectedScaledImage.height() - TEXT_MARGIN,
+        textY = MIN( yOffset + unselectedScaledImage.height() - TEXT_MARGIN,
                       bottomRight.y() + TEXT_MARGIN + stringHeight); 
       }
       else
       { 
-        textY = QMAX( yOffset + TEXT_MARGIN + stringHeight, 
+        textY = MAX( yOffset + TEXT_MARGIN + stringHeight, 
                       topLeft.y() - TEXT_MARGIN ); 
       }
       
@@ -354,10 +364,10 @@
   if(SHIFT_Pressed) { return SCALE_SELECTION; }
   
   //construct topLeft and bottomRight points to make logic easier
-  QPoint topLeft( QMIN(mousePressPoint.x(), mouseDragPoint.x()),
-                  QMIN(mousePressPoint.y(), mouseDragPoint.y()) );
-  QPoint bottomRight( QMAX(mousePressPoint.x(), mouseDragPoint.x()),
-                      QMAX(mousePressPoint.y(), mouseDragPoint.y()) );  
+  QPoint topLeft( MIN(mousePressPoint.x(), mouseDragPoint.x()),
+                  MIN(mousePressPoint.y(), mouseDragPoint.y()) );
+  QPoint bottomRight( MAX(mousePressPoint.x(), mouseDragPoint.x()),
+                      MAX(mousePressPoint.y(), mouseDragPoint.y()) );  
    
   //convert selelection bounary to display space since thresholds are all in display space
   topLeft = ConvertImageToDisplayCoordinate( topLeft );
@@ -384,10 +394,10 @@
   //move entire selection
   //mouse is within MOVE_THRESH of center and outside
   //DRAG_THRESH of any side
-  else if( p.x() >= QMAX( center.x() - MOVE_THRESHOLD, topLeft.x() ) &&
-           p.x() <= QMIN( center.x() + MOVE_THRESHOLD, bottomRight.x() ) &&
-           p.y() >= QMAX( center.y() - MOVE_THRESHOLD, topLeft.y() ) &&
-           p.y() <= QMIN( center.y() + MOVE_THRESHOLD, bottomRight.y() ) &&
+  else if( p.x() >= MAX( center.x() - MOVE_THRESHOLD, topLeft.x() ) &&
+           p.x() <= MIN( center.x() + MOVE_THRESHOLD, bottomRight.x() ) &&
+           p.y() >= MAX( center.y() - MOVE_THRESHOLD, topLeft.y() ) &&
+           p.y() <= MIN( center.y() + MOVE_THRESHOLD, bottomRight.y() ) &&
            p.x() > topLeft.x() + DRAG_THRESHOLD &&
            p.x() < bottomRight.x() - DRAG_THRESHOLD &&
            p.y() > topLeft.y() + DRAG_THRESHOLD &&
@@ -451,10 +461,10 @@
   { return; }
   
   //construct topLeft and bottomRight points to make logic easier
-  QPoint topLeft( QMIN(mousePressPoint.x(), mouseDragPoint.x()),
-                  QMIN(mousePressPoint.y(), mouseDragPoint.y()) );
-  QPoint bottomRight( QMAX(mousePressPoint.x(), mouseDragPoint.x()),
-                      QMAX(mousePressPoint.y(), mouseDragPoint.y()) );  
+  QPoint topLeft( MIN(mousePressPoint.x(), mouseDragPoint.x()),
+                  MIN(mousePressPoint.y(), mouseDragPoint.y()) );
+  QPoint bottomRight( MAX(mousePressPoint.x(), mouseDragPoint.x()),
+                      MAX(mousePressPoint.y(), mouseDragPoint.y()) );  
 
   //determine action mouse click will cause
   currentDragMode = mouseActionByPosition(e->pos());
@@ -565,10 +575,10 @@
 bool SelectionInterface::scaleSelection( int delta )
 {
   //construct topLeft and bottomRight points to make logic easier
-  QPoint topLeft( QMIN(mousePressPoint.x(), mouseDragPoint.x()),
-                  QMIN(mousePressPoint.y(), mouseDragPoint.y()) );
-  QPoint bottomRight( QMAX(mousePressPoint.x(), mouseDragPoint.x()),
-                      QMAX(mousePressPoint.y(), mouseDragPoint.y()) );     
+  QPoint topLeft( MIN(mousePressPoint.x(), mouseDragPoint.x()),
+                  MIN(mousePressPoint.y(), mouseDragPoint.y()) );
+  QPoint bottomRight( MAX(mousePressPoint.x(), mouseDragPoint.x()),
+                      MAX(mousePressPoint.y(), mouseDragPoint.y()) );     
 
   //compute new selection dimension
   int curSelectionWidth = bottomRight.x() - topLeft.x() + 1;
@@ -579,12 +589,12 @@
   //adjust in dimension of greater resolution
   if( curSelectionWidth > curSelectionHeight )
   {
-    newSelectionWidth = QMIN( curSelectionWidth + delta, origImageSize.width() );
+    newSelectionWidth = MIN( curSelectionWidth + delta, origImageSize.width() );
     newSelectionHeight = (newSelectionWidth * cachedSelectionSize.height()) / cachedSelectionSize.width();
   }
   else
   {
-    newSelectionHeight = QMIN( curSelectionHeight + delta, origImageSize.height() );
+    newSelectionHeight = MIN( curSelectionHeight + delta, origImageSize.height() );
     newSelectionWidth = (newSelectionHeight * cachedSelectionSize.width()) / cachedSelectionSize.height();    
   }
   
@@ -652,7 +662,7 @@
 {
   //if the SHIFT_Pressed state variable is true but SHIFT is now not pressed
   //reset bool and mouse cursor!
-  if( SHIFT_Pressed && !(e->state() & Qt::ShiftButton) )
+  if( SHIFT_Pressed && !(e->state() & Qt::ShiftModifier) )
   {
     SHIFT_Pressed = false;
     updateCursorShape( ConvertImageToDisplayCoordinate( e->pos() ) );   
@@ -660,7 +670,7 @@
       
   //if the CTRL_Pressed state variable is true but CTRL is now not pressed
   //reset bool and mouse cursor!
-  if( CTRL_Pressed && !(e->state() & Qt::ControlButton) )
+  if( CTRL_Pressed && !(e->state() & Qt::ControlModifier) )
   {
     CTRL_Pressed = false;
     updateCursorShape( ConvertImageToDisplayCoordinate( e->pos() ) );   
@@ -696,10 +706,10 @@
     QPoint p = ConvertDisplayToImageCoordinate( cropSelectedPoint(e->pos()) );
 
     //construct topLeft and bottomRight points to make logic easier
-    QPoint topLeft( QMIN(mousePressPoint.x(), mouseDragPoint.x()),
-                    QMIN(mousePressPoint.y(), mouseDragPoint.y()) );
-    QPoint bottomRight( QMAX(mousePressPoint.x(), mouseDragPoint.x()),
-                        QMAX(mousePressPoint.y(), mouseDragPoint.y()) );     
+    QPoint topLeft( MIN(mousePressPoint.x(), mouseDragPoint.x()),
+                    MIN(mousePressPoint.y(), mouseDragPoint.y()) );
+    QPoint bottomRight( MAX(mousePressPoint.x(), mouseDragPoint.x()),
+                        MAX(mousePressPoint.y(), mouseDragPoint.y()) );     
     
     //if SHIFT pressed and both selction dimensions non-empty then scale selection
     if(SHIFT_Pressed && 
@@ -724,10 +734,10 @@
                      p.y() - cachedMousePosition.y() );
       
       //construct topLeft and bottomRight points to make logic easier
-      QPoint topLeft( QMIN(mousePressPoint.x(), mouseDragPoint.x()),
-                      QMIN(mousePressPoint.y(), mouseDragPoint.y()) );
-      QPoint bottomRight( QMAX(mousePressPoint.x(), mouseDragPoint.x()),
-                          QMAX(mousePressPoint.y(), mouseDragPoint.y()) );  
+      QPoint topLeft( MIN(mousePressPoint.x(), mouseDragPoint.x()),
+                      MIN(mousePressPoint.y(), mouseDragPoint.y()) );
+      QPoint bottomRight( MAX(mousePressPoint.x(), mouseDragPoint.x()),
+                          MAX(mousePressPoint.y(), mouseDragPoint.y()) );  
       
       //clip offset so selected area is always within image boundaries
       
@@ -857,10 +867,10 @@
   currentDragMode = NO_EFFECT;
   
   //construct topLeft and bottomRight points to make logic easier
-  QPoint topLeft( QMIN(mousePressPoint.x(), mouseDragPoint.x()),
-                  QMIN(mousePressPoint.y(), mouseDragPoint.y()) );
-  QPoint bottomRight( QMAX(mousePressPoint.x(), mouseDragPoint.x()),
-                      QMAX(mousePressPoint.y(), mouseDragPoint.y()) );  
+  QPoint topLeft( MIN(mousePressPoint.x(), mouseDragPoint.x()),
+                  MIN(mousePressPoint.y(), mouseDragPoint.y()) );
+  QPoint bottomRight( MAX(mousePressPoint.x(), mouseDragPoint.x()),
+                      MAX(mousePressPoint.y(), mouseDragPoint.y()) );  
 
   //convert selection region to display space to check for tiny selections to ignore
   topLeft = ConvertImageToDisplayCoordinate( topLeft );
@@ -929,8 +939,8 @@
   int yOffset = (height() - scaledImage.height() ) / 2;
 
   QPoint croppedPoint;
-  croppedPoint.setX( QMIN( QMAX(xOffset, p.x()), xOffset + scaledImage.width() - 1 ) );
-  croppedPoint.setY( QMIN( QMAX(yOffset, p.y()), yOffset + scaledImage.height() - 1 ) );
+  croppedPoint.setX( MIN( MAX(xOffset, p.x()), xOffset + scaledImage.width() - 1 ) );
+  croppedPoint.setY( MIN( MAX(yOffset, p.y()), yOffset + scaledImage.height() - 1 ) );
   return croppedPoint;
 }
 //==============================================
@@ -1001,10 +1011,10 @@
   }
 
   //set coordinates based on raw selection  
-  topLeft.setX( QMIN(mousePressPoint.x(), mouseDragPoint.x()) );
-  topLeft.setY( QMIN(mousePressPoint.y(), mouseDragPoint.y()) );
-  bottomRight.setX( QMAX( mousePressPoint.x(), mouseDragPoint.x()) );                
-  bottomRight.setY( QMAX( mousePressPoint.y(), mouseDragPoint.y()) );                  
+  topLeft.setX( MIN(mousePressPoint.x(), mouseDragPoint.x()) );
+  topLeft.setY( MIN(mousePressPoint.y(), mouseDragPoint.y()) );
+  bottomRight.setX( MAX( mousePressPoint.x(), mouseDragPoint.x()) );                
+  bottomRight.setY( MAX( mousePressPoint.y(), mouseDragPoint.y()) );                  
 }
 //==============================================
 void SelectionInterface::getDisplaySize(int &width, int &height)
@@ -1099,10 +1109,10 @@
   
   //find topleft and bottom right of current selection
   QPoint topLeft, bottomRight;
-  topLeft.setX( QMIN(mousePressPoint.x(), mouseDragPoint.x()) );
-  topLeft.setY( QMIN(mousePressPoint.y(), mouseDragPoint.y()) );
-  bottomRight.setX( QMAX( mousePressPoint.x(), mouseDragPoint.x()) );                
-  bottomRight.setY( QMAX( mousePressPoint.y(), mouseDragPoint.y()) );                  
+  topLeft.setX( MIN(mousePressPoint.x(), mouseDragPoint.x()) );
+  topLeft.setY( MIN(mousePressPoint.y(), mouseDragPoint.y()) );
+  bottomRight.setX( MAX( mousePressPoint.x(), mouseDragPoint.x()) );                
+  bottomRight.setY( MAX( mousePressPoint.y(), mouseDragPoint.y()) );                  
   
   //compute the number of pixels in the image correspond to one display pixel
   //this is the unit by which the selection will be moved
@@ -1126,13 +1136,13 @@
       dx = QMAX( topLeft.x() - moveBy, 0) - topLeft.x();
       break;
     case Qt::Key_Right:
-      dx = QMIN( bottomRight.x() + moveBy, origImageSize.width() - 1) - bottomRight.x();
+      dx = MIN( bottomRight.x() + moveBy, origImageSize.width() - 1) - bottomRight.x();
       break;
     case Qt::Key_Up:
-      dy = QMAX( topLeft.y() - moveBy, 0) - topLeft.y();
+      dy = MAX( topLeft.y() - moveBy, 0) - topLeft.y();
       break;
     case Qt::Key_Down:
-      dy = QMIN( bottomRight.y() + moveBy, origImageSize.height() - 1) - bottomRight.y();
+      dy = MIN( bottomRight.y() + moveBy, origImageSize.height() - 1) - bottomRight.y();
       break;
     default:
       e->ignore();
diff -urN albumshaper_2.1_src/src/gui/editing/selectionInterface.h albumshaper_2.1_src-qt4/src/gui/editing/selectionInterface.h
--- albumshaper_2.1_src/src/gui/editing/selectionInterface.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/editing/selectionInterface.h	2014-06-05 09:42:36.488565061 +0200
@@ -1,3 +1,8 @@
+//Added by qt3to4:
+#include <QResizeEvent>
+#include <QMouseEvent>
+#include <QKeyEvent>
+#include <QPaintEvent>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
diff -urN albumshaper_2.1_src/src/gui/editing/selectionPlacementInterface.cpp albumshaper_2.1_src-qt4/src/gui/editing/selectionPlacementInterface.cpp
--- albumshaper_2.1_src/src/gui/editing/selectionPlacementInterface.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/editing/selectionPlacementInterface.cpp	2014-06-05 12:08:21.280240121 +0200
@@ -12,6 +12,13 @@
 #include <qapplication.h>
 #include <qpainter.h>
 #include <qcursor.h>
+//Added by qt3to4:
+#include <QPixmap>
+#include <QMouseEvent>
+#include <QPaintEvent>
+
+#define MIN(x,y) ((x) < (y) ? (x) : (y))
+#define MAX(x,y) ((x) > (y) ? (x) : (y))
 
 //Projectwide includes
 #include "selectionPlacementInterface.h"
@@ -56,9 +63,9 @@
       
       //convert adjusted color back to rgb colorspace and clamp
       HSVtoRGB( &r,&g,&b, h,s,v);         
-      int rp = (int) QMIN( QMAX((r*255), 0), 255 );
-      int gp = (int) QMIN( QMAX((g*255), 0), 255 );
-      int bp = (int) QMIN( QMAX((b*255), 0), 255 );
+      int rp = (int) MIN( MAX((r*255), 0), 255 );
+      int gp = (int) MIN( MAX((g*255), 0), 255 );
+      int bp = (int) MIN( MAX((b*255), 0), 255 );
       
       //set adjusted color value
       *rgb = qRgb(rp,gp,bp);          
@@ -74,7 +81,7 @@
   currentMouseShapeIsDrag = false;
   
   //accept focus when clicked on
-  setFocusPolicy( QWidget::ClickFocus );
+  setFocusPolicy( Qt::ClickFocus );
 
   //init selection area
   selection.setTopLeft( QPoint( -1, -1 ) );
@@ -131,7 +138,7 @@
         selection.height() < origImageSize.height() )
     {
       QPen pen;
-      pen.setColor( gray );
+      pen.setColor( Qt::gray );
       pen.setStyle( Qt::SolidLine );
       pen.setWidth( 2 );
       bufferPainter.setPen( pen);
@@ -288,4 +295,4 @@
   this->selection = selection;
   repaint(false); 
 }
-//==============================================
\ No newline at end of file
+//==============================================
diff -urN albumshaper_2.1_src/src/gui/editing/selectionPlacementInterface.h albumshaper_2.1_src-qt4/src/gui/editing/selectionPlacementInterface.h
--- albumshaper_2.1_src/src/gui/editing/selectionPlacementInterface.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/editing/selectionPlacementInterface.h	2014-06-05 09:42:36.495564974 +0200
@@ -19,6 +19,9 @@
 #include <qimage.h>
 #include <qpoint.h>
 #include <qsize.h>
+//Added by qt3to4:
+#include <QPaintEvent>
+#include <QMouseEvent>
 
 //=====================================
 /*! \brief A selection region placement interface. */
diff -urN albumshaper_2.1_src/src/gui/editing/splitViewInterface.cpp albumshaper_2.1_src-qt4/src/gui/editing/splitViewInterface.cpp
--- albumshaper_2.1_src/src/gui/editing/splitViewInterface.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/editing/splitViewInterface.cpp	2014-06-05 09:42:36.349566799 +0200
@@ -11,6 +11,10 @@
 //Systemwide includes
 #include <qpainter.h>
 #include <qcursor.h>
+//Added by qt3to4:
+#include <QPixmap>
+#include <QMouseEvent>
+#include <QPaintEvent>
 
 //Projectwide includes
 #include "splitViewInterface.h"
@@ -52,7 +56,7 @@
   setMouseTracking(true);
   
   //accept focus when clicked on
-  setFocusPolicy( QWidget::ClickFocus );
+  setFocusPolicy( Qt::ClickFocus );
 }
 //==============================================
 void SplitViewInterface::paintEvent(QPaintEvent *e)
@@ -82,7 +86,7 @@
   //setup pen color
   QPen pen;
   pen.setStyle( Qt::SolidLine );
-  pen.setColor( white );
+  pen.setColor( Qt::white );
   pen.setWidth( 2 );
   bufferPainter.setPen( pen);  
 
@@ -108,7 +112,7 @@
                                     y - TEXT_BACKGROUND_MARGIN - fm.ascent(), 
                                     fm.width(adjustedString) + 2*TEXT_BACKGROUND_MARGIN, 
                                     fm.height() + 2*TEXT_BACKGROUND_MARGIN),
-                              QBrush(darkGray) );    
+                              QBrush(Qt::darkGray) );    
       bufferPainter.drawText( x, y,
                               adjustedString );    
     }
@@ -128,7 +132,7 @@
                                     y - TEXT_BACKGROUND_MARGIN - fm.ascent(), 
                                     fm.width(originalString) + 2*TEXT_BACKGROUND_MARGIN, 
                                     fm.height() + 2*TEXT_BACKGROUND_MARGIN),
-                              QBrush(darkGray) );    
+                              QBrush(Qt::darkGray) );    
       bufferPainter.drawText( x, y,
                               originalString );    
     }
@@ -194,7 +198,7 @@
                                     y - TEXT_BACKGROUND_MARGIN - fm.ascent(), 
                                     fm.width(label1) + 2*TEXT_BACKGROUND_MARGIN, 
                                     fm.height() + 2*TEXT_BACKGROUND_MARGIN),
-                              QBrush(darkGray) );    
+                              QBrush(Qt::darkGray) );    
       bufferPainter.drawText( x, y,
                               label1 );    
 
@@ -205,7 +209,7 @@
                                     y - TEXT_BACKGROUND_MARGIN - fm.ascent(), 
                                     fm.width(label2) + 2*TEXT_BACKGROUND_MARGIN, 
                                     fm.height() + 2*TEXT_BACKGROUND_MARGIN),
-                              QBrush(darkGray) );    
+                              QBrush(Qt::darkGray) );    
       bufferPainter.drawText( x, y,
                               label2 );
     }
@@ -246,7 +250,7 @@
                                     y - TEXT_BACKGROUND_MARGIN - fm.ascent(), 
                                     fm.width(label1) + 2*TEXT_BACKGROUND_MARGIN, 
                                     fm.height() + 2*TEXT_BACKGROUND_MARGIN),
-                              QBrush(darkGray) );    
+                              QBrush(Qt::darkGray) );    
       bufferPainter.drawText( x, y,
                               label1 );    
       
@@ -258,7 +262,7 @@
                                     y - TEXT_BACKGROUND_MARGIN - fm.ascent(), 
                                     fm.width(label2) + 2*TEXT_BACKGROUND_MARGIN, 
                                     fm.height() + 2*TEXT_BACKGROUND_MARGIN),
-                              QBrush(darkGray) );    
+                              QBrush(Qt::darkGray) );    
       bufferPainter.drawText( x, y,
                               label2 );
     }
diff -urN albumshaper_2.1_src/src/gui/editing/splitViewInterface.h albumshaper_2.1_src-qt4/src/gui/editing/splitViewInterface.h
--- albumshaper_2.1_src/src/gui/editing/splitViewInterface.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/editing/splitViewInterface.h	2014-06-05 09:42:36.492565011 +0200
@@ -17,6 +17,10 @@
 
 #include <qwidget.h>
 #include <qimage.h>
+//Added by qt3to4:
+#include <QPaintEvent>
+#include <QResizeEvent>
+#include <QMouseEvent>
 
 ///current preview mode
 typedef enum
diff -urN albumshaper_2.1_src/src/gui/help/annotating.cpp albumshaper_2.1_src-qt4/src/gui/help/annotating.cpp
--- albumshaper_2.1_src/src/gui/help/annotating.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/help/annotating.cpp	2014-06-05 09:42:36.416565962 +0200
@@ -10,7 +10,7 @@
 
 //Systemwide includes
 #include <qfile.h>
-#include <qtextstream.h>
+#include <q3textstream.h>
 #include <qstringlist.h>
 #include <qnamespace.h>
 #include <qkeysequence.h>
@@ -26,14 +26,14 @@
   return QString("%1/annotating.html").arg(TEMP_DIR);
 }
 //==============================================
-void Annotating::generateHTML(QTextStream::Encoding type, QString charSet)
+void Annotating::generateHTML(Q3TextStream::Encoding type, QString charSet)
 {
   //create/open html file
   QFile file( filename() );
-  if(file.open(IO_WriteOnly))
+  if(file.open(QIODevice::WriteOnly))
   {
     //-----
-    QTextStream stream;
+    Q3TextStream stream;
     stream.setEncoding( type );
     stream.setDevice( &file );
     //-----
diff -urN albumshaper_2.1_src/src/gui/help/annotating.h albumshaper_2.1_src-qt4/src/gui/help/annotating.h
--- albumshaper_2.1_src/src/gui/help/annotating.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/help/annotating.h	2014-06-05 09:42:36.509564799 +0200
@@ -11,7 +11,7 @@
 #ifndef GUI_HELP_ANNOTATING_H
 #define GUI_HELP_ANNOTATING_H
 
-#include <qtextstream.h>
+#include <q3textstream.h>
 
 class Annotating
 {
@@ -20,7 +20,7 @@
   static QString filename();
   
   ///generates the html file
-  static void generateHTML(QTextStream::Encoding type, QString charSet);
+  static void generateHTML(Q3TextStream::Encoding type, QString charSet);
 };
 
 
diff -urN albumshaper_2.1_src/src/gui/help/contents.cpp albumshaper_2.1_src-qt4/src/gui/help/contents.cpp
--- albumshaper_2.1_src/src/gui/help/contents.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/help/contents.cpp	2014-06-05 09:42:36.410566037 +0200
@@ -11,6 +11,9 @@
 //Systemwide includes
 #include <qfile.h>
 #include <qstringlist.h>
+//Added by qt3to4:
+#include <Q3TextStream>
+#include <Q3Frame>
 
 //Projectwide includes
 #include "contents.h"
@@ -20,9 +23,9 @@
 #define CURR_COLOR "#0e3980"
 
 //==============================================
-Contents::Contents( QTextStream::Encoding type, 
-                    QString saveCharSet, QMimeSourceFactory* loadingMimeSource,
-                    QWidget* parent, const char* name ) : QTextBrowser(parent,name)
+Contents::Contents( Q3TextStream::Encoding type, 
+                    QString saveCharSet, Q3MimeSourceFactory* loadingMimeSource,
+                    QWidget* parent, const char* name ) : Q3TextBrowser(parent,name)
 {
   this->type = type;
   this->saveCharSet = saveCharSet;
@@ -33,9 +36,9 @@
   generateHTML(type, saveCharSet);
   //--
   //set browser and load contents
-  setHScrollBarMode( QScrollView::AlwaysOff );
-  setVScrollBarMode( QScrollView::AlwaysOff );
-  setFrameStyle( QFrame::NoFrame );
+  setHScrollBarMode( Q3ScrollView::AlwaysOff );
+  setVScrollBarMode( Q3ScrollView::AlwaysOff );
+  setFrameStyle( Q3Frame::NoFrame );
   setSource( filename() );
   
   //------
@@ -99,14 +102,14 @@
   return QString("%1/helpContents.html").arg(TEMP_DIR);
 }
 //==============================================                              
-void Contents::generateHTML(QTextStream::Encoding type, QString charSet)
+void Contents::generateHTML(Q3TextStream::Encoding type, QString charSet)
 {
   //create/open html file
   QFile file( filename() );
-  if(file.open(IO_WriteOnly))
+  if(file.open(QIODevice::WriteOnly))
   {
     //-----
-    QTextStream stream;
+    Q3TextStream stream;
     stream.setEncoding( type );
     stream.setDevice( &file );
     //-----
@@ -165,7 +168,7 @@
   }
 }
 //==============================================
-void Contents::printLink( QTextStream& stream, QString text, HELP_PAGE anchor, QString anchorString )
+void Contents::printLink( Q3TextStream& stream, QString text, HELP_PAGE anchor, QString anchorString )
 {
   if( currentPage != anchor ) 
   {
diff -urN albumshaper_2.1_src/src/gui/help/contents.h albumshaper_2.1_src-qt4/src/gui/help/contents.h
--- albumshaper_2.1_src/src/gui/help/contents.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/help/contents.h	2014-06-05 09:42:36.507564824 +0200
@@ -11,9 +11,9 @@
 #ifndef GUI_HELP_CONTENTS_H
 #define GUI_HELP_CONTENTS_H
 
-#include <qtextbrowser.h>
+#include <q3textbrowser.h>
 #include <qsize.h>
-#include <qtextstream.h>
+#include <q3textstream.h>
 
 //=====================================
 /*! \brief Contents window widget
@@ -37,13 +37,13 @@
 } HELP_PAGE;
 
 //======================
-class Contents : public QTextBrowser
+class Contents : public Q3TextBrowser
 {
 Q_OBJECT
   //----------------------
 public:
-  Contents( QTextStream::Encoding type, 
-            QString saveCharSet, QMimeSourceFactory* loadingMimeSource,
+  Contents( Q3TextStream::Encoding type, 
+            QString saveCharSet, Q3MimeSourceFactory* loadingMimeSource,
             QWidget *parent=0, const char* name=0);
   
   QSize minimumSizeHint() const;
@@ -51,11 +51,11 @@
 private:
   QSize optimalSize;
   QString filename();
-  void generateHTML(QTextStream::Encoding type, QString charSet);
-  void printLink( QTextStream& stream, QString text, HELP_PAGE anchor, QString anchorString );
+  void generateHTML(Q3TextStream::Encoding type, QString charSet);
+  void printLink( Q3TextStream& stream, QString text, HELP_PAGE anchor, QString anchorString );
   HELP_PAGE currentPage;
   
-  QTextStream::Encoding type;
+  Q3TextStream::Encoding type;
   QString saveCharSet;
   //----------------------
 signals:
diff -urN albumshaper_2.1_src/src/gui/help/enhancing.cpp albumshaper_2.1_src-qt4/src/gui/help/enhancing.cpp
--- albumshaper_2.1_src/src/gui/help/enhancing.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/help/enhancing.cpp	2014-06-05 09:42:36.419565924 +0200
@@ -10,7 +10,7 @@
 
 //Systemwide includes
 #include <qfile.h>
-#include <qtextstream.h>
+#include <q3textstream.h>
 #include <qstringlist.h>
 #include <qnamespace.h>
 #include <qkeysequence.h>
@@ -26,14 +26,14 @@
   return QString("%1/enhancing.html").arg(TEMP_DIR);
 }
 //==============================================
-void Enhancing::generateHTML(QTextStream::Encoding type, QString charSet)
+void Enhancing::generateHTML(Q3TextStream::Encoding type, QString charSet)
 {
   //create/open html file
   QFile file( filename() );
-  if(file.open(IO_WriteOnly))
+  if(file.open(QIODevice::WriteOnly))
   {
     //-----
-    QTextStream stream;
+    Q3TextStream stream;
     stream.setEncoding( type );
     stream.setDevice( &file );
     //-----
diff -urN albumshaper_2.1_src/src/gui/help/enhancing.h albumshaper_2.1_src-qt4/src/gui/help/enhancing.h
--- albumshaper_2.1_src/src/gui/help/enhancing.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/help/enhancing.h	2014-06-05 09:42:36.510564786 +0200
@@ -11,7 +11,7 @@
 #ifndef GUI_HELP_ENHANCING_H
 #define GUI_HELP_ENHANCING_H
 
-#include <qtextstream.h>
+#include <q3textstream.h>
 
 class Enhancing
 {
@@ -20,7 +20,7 @@
   static QString filename();
   
   ///generates the html file
-  static void generateHTML(QTextStream::Encoding type, QString charSet);
+  static void generateHTML(Q3TextStream::Encoding type, QString charSet);
 };
 
 
diff -urN albumshaper_2.1_src/src/gui/help/framing.cpp albumshaper_2.1_src-qt4/src/gui/help/framing.cpp
--- albumshaper_2.1_src/src/gui/help/framing.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/help/framing.cpp	2014-06-05 09:42:36.418565937 +0200
@@ -10,7 +10,7 @@
 
 //Systemwide includes
 #include <qfile.h>
-#include <qtextstream.h>
+#include <q3textstream.h>
 #include <qstringlist.h>
 #include <qnamespace.h>
 #include <qkeysequence.h>
@@ -26,7 +26,7 @@
   return QString("%1/framing.html").arg(TEMP_DIR);
 }
 //==============================================
-void Framing::generateHTML(QTextStream::Encoding type, QString charSet)
+void Framing::generateHTML(Q3TextStream::Encoding type, QString charSet)
 {
   QString ctrlKey;
 #if defined(Q_OS_MACX)
@@ -37,10 +37,10 @@
   
   //create/open html file
   QFile file( filename() );
-  if(file.open(IO_WriteOnly))
+  if(file.open(QIODevice::WriteOnly))
   {
     //-----
-    QTextStream stream;
+    Q3TextStream stream;
     stream.setEncoding( type );
     stream.setDevice( &file );
     //-----
diff -urN albumshaper_2.1_src/src/gui/help/framing.h albumshaper_2.1_src-qt4/src/gui/help/framing.h
--- albumshaper_2.1_src/src/gui/help/framing.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/help/framing.h	2014-06-05 09:42:36.509564799 +0200
@@ -11,7 +11,7 @@
 #ifndef GUI_HELP_FRAMING_H
 #define GUI_HELP_FRAMING_H
 
-#include <qtextstream.h>
+#include <q3textstream.h>
 
 class Framing
 {
@@ -20,7 +20,7 @@
   static QString filename();
   
   ///generates the html file
-  static void generateHTML(QTextStream::Encoding type, QString charSet);
+  static void generateHTML(Q3TextStream::Encoding type, QString charSet);
 };
 
 
diff -urN albumshaper_2.1_src/src/gui/help/helpWindow.cpp albumshaper_2.1_src-qt4/src/gui/help/helpWindow.cpp
--- albumshaper_2.1_src/src/gui/help/helpWindow.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/help/helpWindow.cpp	2014-06-05 09:42:36.407566074 +0200
@@ -10,7 +10,7 @@
 
 //Systemwide includes
 #include <qfile.h>
-#include <qtextstream.h>
+#include <q3textstream.h>
 #include <qstringlist.h>
 
 #include <qlabel.h>
@@ -18,6 +18,11 @@
 #include <qlayout.h>
 #include <qsizegrip.h>
 #include <qkeysequence.h>
+//Added by qt3to4:
+#include <QPixmap>
+#include <Q3GridLayout>
+#include <Q3Frame>
+#include <QCloseEvent>
 
 //Projectwide includes
 #include "helpWindow.h"
@@ -39,25 +44,25 @@
 HelpWindow::HelpWindow( QWidget* parent, const char* name ) : QDialog(parent,name)
 {
   //determine necessary encoding for reading and writing to html files
-  QTextStream::Encoding fileEncoding;
+  Q3TextStream::Encoding fileEncoding;
   QString savingCharSet;
   QString loadingCharSet;
 
   //Mac OSX -> Use UTF16
   #if defined(Q_OS_MACX)
-  fileEncoding = QTextStream::Unicode;
+  fileEncoding = Q3TextStream::Unicode;
   savingCharSet = "utf16";
   loadingCharSet = "UTF-16";
   
   //Other UNIX or Windows with Unicode support -> Use UTF8
   #elif !defined(Q_WS_WIN) || (defined(Q_WS_WIN) && defined(UNICODE))
-  fileEncoding = QTextStream::UnicodeUTF8;
+  fileEncoding = Q3TextStream::UnicodeUTF8;
   savingCharSet = "utf8";
   loadingCharSet = "UTF-8";
 
   //Windows without Unicode support (Win95/98/ME) -> Use Latin-1
   #else
-  fileEncoding = QTextStream::Latin1;
+  fileEncoding = Q3TextStream::Latin1;
   savingCharSet = "latin-1";
   loadingCharSet = "latin-1";
   #endif
@@ -88,7 +93,7 @@
            this, SLOT(showFirstSelection()) );
 
   //construct special mime source factory for loading html files for the contents and content frames
-  loadingMimeSource = new QMimeSourceFactory();
+  loadingMimeSource = new Q3MimeSourceFactory();
   loadingMimeSource->setExtensionType("html",QString("text/html;charset=%1").arg(loadingCharSet) );
 
   //create contents widget
@@ -97,10 +102,10 @@
            this, SLOT(setPage(HELP_PAGE)) );
 
   //create widget for holding content
-  content = new QTextBrowser( this );
-  content->setHScrollBarMode( QScrollView::Auto );
-  content->setVScrollBarMode( QScrollView::Auto );
-  content->setFrameStyle( QFrame::NoFrame );
+  content = new Q3TextBrowser( this );
+  content->setHScrollBarMode( Q3ScrollView::Auto );
+  content->setVScrollBarMode( Q3ScrollView::Auto );
+  content->setFrameStyle( Q3Frame::NoFrame );
   content->setMimeSourceFactory( loadingMimeSource );
   
   //PLATFORM_SPECIFIC_CODE
@@ -115,7 +120,7 @@
   content->hide();
   //--
   //place items in grid layout
-  QGridLayout* grid = new QGridLayout( this, 4, 3, 0);
+  Q3GridLayout* grid = new Q3GridLayout( this, 4, 3, 0);
   grid->addMultiCellWidget( billboard, 0,2, 0,0, Qt::AlignHCenter | Qt::AlignTop );
   grid->addWidget( contents, 1,1 );
   grid->addMultiCellWidget( content, 0,2, 2,2 );
diff -urN albumshaper_2.1_src/src/gui/help/helpWindow.h albumshaper_2.1_src-qt4/src/gui/help/helpWindow.h
--- albumshaper_2.1_src/src/gui/help/helpWindow.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/help/helpWindow.h	2014-06-05 09:42:36.505564849 +0200
@@ -12,10 +12,12 @@
 #define GUI_HELP_HELPWINDOW_H
 
 #include <qdialog.h>
+//Added by qt3to4:
+#include <QCloseEvent>
 #include "contents.h"
 
 class ALabel;
-class QTextBrowser;
+class Q3TextBrowser;
 
 //=====================================
 /*! \brief Help window widget
@@ -44,11 +46,11 @@
   void closeEvent( QCloseEvent* e);
 
   ALabel* billboard;
-  QTextBrowser* content;
+  Q3TextBrowser* content;
   
   HELP_PAGE currentPage;  
   
-  QMimeSourceFactory* loadingMimeSource;
+  Q3MimeSourceFactory* loadingMimeSource;
 //----------------------
 };
 //======================
diff -urN albumshaper_2.1_src/src/gui/help/importing.cpp albumshaper_2.1_src-qt4/src/gui/help/importing.cpp
--- albumshaper_2.1_src/src/gui/help/importing.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/help/importing.cpp	2014-06-05 09:42:36.415565974 +0200
@@ -10,7 +10,7 @@
 
 //Systemwide includes
 #include <qfile.h>
-#include <qtextstream.h>
+#include <q3textstream.h>
 #include <qstringlist.h>
 #include <qnamespace.h>
 #include <qkeysequence.h>
@@ -26,7 +26,7 @@
   return QString("%1/importing.html").arg(TEMP_DIR);
 }
 //==============================================
-void Importing::generateHTML(QTextStream::Encoding type, QString charSet)
+void Importing::generateHTML(Q3TextStream::Encoding type, QString charSet)
 {
   QString finder  = HelpWindow::tr("the desktop or the Finder");
   QString exporer = HelpWindow::tr("the desktop or Windows Explorer");
@@ -47,10 +47,10 @@
   
   //create/open html file
   QFile file( filename() );
-  if(file.open(IO_WriteOnly))
+  if(file.open(QIODevice::WriteOnly))
   {
     //-----
-    QTextStream stream;
+    Q3TextStream stream;
     stream.setEncoding( type );
     stream.setDevice( &file );
     //-----
diff -urN albumshaper_2.1_src/src/gui/help/importing.h albumshaper_2.1_src-qt4/src/gui/help/importing.h
--- albumshaper_2.1_src/src/gui/help/importing.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/help/importing.h	2014-06-05 09:42:36.508564811 +0200
@@ -11,7 +11,7 @@
 #ifndef GUI_HELP_IMPORTING_H
 #define GUI_HELP_IMPORTING_H
 
-#include <qtextstream.h>
+#include <q3textstream.h>
 
 class Importing
 {
@@ -20,7 +20,7 @@
   static QString filename();
   
   ///generates the html file
-  static void generateHTML(QTextStream::Encoding type, QString charSet);
+  static void generateHTML(Q3TextStream::Encoding type, QString charSet);
 };
 
 
diff -urN albumshaper_2.1_src/src/gui/help/loadSave.cpp albumshaper_2.1_src-qt4/src/gui/help/loadSave.cpp
--- albumshaper_2.1_src/src/gui/help/loadSave.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/help/loadSave.cpp	2014-06-05 09:42:36.424565862 +0200
@@ -10,7 +10,7 @@
 
 //Systemwide includes
 #include <qfile.h>
-#include <qtextstream.h>
+#include <q3textstream.h>
 #include <qstringlist.h>
 #include <qnamespace.h>
 #include <qkeysequence.h>
@@ -26,14 +26,14 @@
   return QString("%1/saveLoad.html").arg(TEMP_DIR);
 }
 //==============================================
-void LoadSave::generateHTML(QTextStream::Encoding type, QString charSet)
+void LoadSave::generateHTML(Q3TextStream::Encoding type, QString charSet)
 {
   //create/open html file
   QFile file( filename() );
-  if(file.open(IO_WriteOnly))
+  if(file.open(QIODevice::WriteOnly))
   {
     //-----
-    QTextStream stream;
+    Q3TextStream stream;
     stream.setEncoding( type );
     stream.setDevice( &file );
     //-----
diff -urN albumshaper_2.1_src/src/gui/help/loadSave.h albumshaper_2.1_src-qt4/src/gui/help/loadSave.h
--- albumshaper_2.1_src/src/gui/help/loadSave.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/help/loadSave.h	2014-06-05 09:42:36.512564761 +0200
@@ -11,7 +11,7 @@
 #ifndef GUI_HELP_LOADSAVE_H
 #define GUI_HELP_LOADSAVE_H
 
-#include <qtextstream.h>
+#include <q3textstream.h>
 
 class LoadSave
 {
@@ -20,7 +20,7 @@
   static QString filename();
   
   ///generates the html file
-  static void generateHTML(QTextStream::Encoding type, QString charSet);
+  static void generateHTML(Q3TextStream::Encoding type, QString charSet);
 };
 
 
diff -urN albumshaper_2.1_src/src/gui/help/manipulating.cpp albumshaper_2.1_src-qt4/src/gui/help/manipulating.cpp
--- albumshaper_2.1_src/src/gui/help/manipulating.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/help/manipulating.cpp	2014-06-05 09:42:36.423565874 +0200
@@ -10,7 +10,7 @@
 
 //Systemwide includes
 #include <qfile.h>
-#include <qtextstream.h>
+#include <q3textstream.h>
 #include <qstringlist.h>
 #include <qnamespace.h>
 #include <qkeysequence.h>
@@ -26,14 +26,14 @@
   return QString("%1/manipulating.html").arg(TEMP_DIR);
 }
 //==============================================
-void Manipulating::generateHTML(QTextStream::Encoding type, QString charSet)
+void Manipulating::generateHTML(Q3TextStream::Encoding type, QString charSet)
 {
   //create/open html file
   QFile file( filename() );
-  if(file.open(IO_WriteOnly))
+  if(file.open(QIODevice::WriteOnly))
   {
     //-----
-    QTextStream stream;
+    Q3TextStream stream;
     stream.setEncoding( type );
     stream.setDevice( &file );
     //-----
diff -urN albumshaper_2.1_src/src/gui/help/manipulating.h albumshaper_2.1_src-qt4/src/gui/help/manipulating.h
--- albumshaper_2.1_src/src/gui/help/manipulating.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/help/manipulating.h	2014-06-05 09:42:36.511564774 +0200
@@ -11,7 +11,7 @@
 #ifndef GUI_HELP_MANIPULATING_H
 #define GUI_HELP_MANIPULATING_H
 
-#include <qtextstream.h>
+#include <q3textstream.h>
 
 class Manipulating
 {
@@ -20,7 +20,7 @@
   static QString filename();
   
   ///generates the html file
-  static void generateHTML(QTextStream::Encoding type, QString charSet);
+  static void generateHTML(Q3TextStream::Encoding type, QString charSet);
 };
 
 
diff -urN albumshaper_2.1_src/src/gui/help/proTools.cpp albumshaper_2.1_src-qt4/src/gui/help/proTools.cpp
--- albumshaper_2.1_src/src/gui/help/proTools.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/help/proTools.cpp	2014-06-05 09:42:36.421565899 +0200
@@ -10,7 +10,7 @@
 
 //Systemwide includes
 #include <qfile.h>
-#include <qtextstream.h>
+#include <q3textstream.h>
 #include <qstringlist.h>
 #include <qnamespace.h>
 #include <qkeysequence.h>
@@ -26,7 +26,7 @@
   return QString("%1/proTools.html").arg(TEMP_DIR);
 }
 //==============================================
-void ProTools::generateHTML(QTextStream::Encoding type, QString charSet)
+void ProTools::generateHTML(Q3TextStream::Encoding type, QString charSet)
 {
   QString ctrlKey;
 #if defined(Q_OS_MACX)
@@ -37,10 +37,10 @@
 
   //create/open html file
   QFile file( filename() );
-  if(file.open(IO_WriteOnly))
+  if(file.open(QIODevice::WriteOnly))
   {
     //-----
-    QTextStream stream;
+    Q3TextStream stream;
     stream.setEncoding( type );
     stream.setDevice( &file );
     //-----
diff -urN albumshaper_2.1_src/src/gui/help/proTools.h albumshaper_2.1_src-qt4/src/gui/help/proTools.h
--- albumshaper_2.1_src/src/gui/help/proTools.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/help/proTools.h	2014-06-05 09:42:36.511564774 +0200
@@ -11,7 +11,7 @@
 #ifndef GUI_HELP_PROTOOLS_H
 #define GUI_HELP_PROTOOLS_H
 
-#include <qtextstream.h>
+#include <q3textstream.h>
 
 class ProTools
 {
@@ -20,7 +20,7 @@
   static QString filename();
   
   ///generates the html file
-  static void generateHTML(QTextStream::Encoding type, QString charSet);
+  static void generateHTML(Q3TextStream::Encoding type, QString charSet);
 };
 
 
diff -urN albumshaper_2.1_src/src/gui/help/shortcuts.cpp albumshaper_2.1_src-qt4/src/gui/help/shortcuts.cpp
--- albumshaper_2.1_src/src/gui/help/shortcuts.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/help/shortcuts.cpp	2014-06-05 09:42:36.427565824 +0200
@@ -10,7 +10,7 @@
 
 //Systemwide includes
 #include <qfile.h>
-#include <qtextstream.h>
+#include <q3textstream.h>
 #include <qstringlist.h>
 #include <qnamespace.h>
 #include <qkeysequence.h>
@@ -26,7 +26,7 @@
   return QString("%1/shortcuts.html").arg(TEMP_DIR);
 }
 //==============================================
-void Shortcuts::generateHTML(QTextStream::Encoding type, QString charSet)
+void Shortcuts::generateHTML(Q3TextStream::Encoding type, QString charSet)
 {
   QString Control = "Ctrl";
   QString ControlPlus = "Ctrl+";
@@ -37,10 +37,10 @@
 
   //create/open html file
   QFile file( filename() );
-  if(file.open(IO_WriteOnly))
+  if(file.open(QIODevice::WriteOnly))
   {
     //-----
-    QTextStream stream;
+    Q3TextStream stream;
     stream.setEncoding( type );
     stream.setDevice( &file );
     //-----
diff -urN albumshaper_2.1_src/src/gui/help/shortcuts.h albumshaper_2.1_src-qt4/src/gui/help/shortcuts.h
--- albumshaper_2.1_src/src/gui/help/shortcuts.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/help/shortcuts.h	2014-06-05 09:42:36.513564749 +0200
@@ -11,7 +11,7 @@
 #ifndef GUI_HELP_SHORTCUTS_H
 #define GUI_HELP_SHORTCUTS_H
 
-#include <qtextstream.h>
+#include <q3textstream.h>
 
 class Shortcuts
 {
@@ -20,7 +20,7 @@
   static QString filename();
   
   ///generates the shortcuts html file
-  static void generateHTML(QTextStream::Encoding type, QString charSet);
+  static void generateHTML(Q3TextStream::Encoding type, QString charSet);
 };
 
 
diff -urN albumshaper_2.1_src/src/gui/help/whatsNew.cpp albumshaper_2.1_src-qt4/src/gui/help/whatsNew.cpp
--- albumshaper_2.1_src/src/gui/help/whatsNew.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/help/whatsNew.cpp	2014-06-05 09:42:36.413565999 +0200
@@ -10,7 +10,7 @@
 
 //Systemwide includes
 #include <qfile.h>
-#include <qtextstream.h>
+#include <q3textstream.h>
 #include <qstringlist.h>
 #include <qnamespace.h>
 #include <qkeysequence.h>
@@ -26,17 +26,17 @@
   return QString("%1/whatsNew.html").arg(TEMP_DIR);
 }
 //==============================================
-void WhatsNew::generateHTML(QTextStream::Encoding type, QString charSet)
+void WhatsNew::generateHTML(Q3TextStream::Encoding type, QString charSet)
 {
 
   QString whatsNew = HelpWindow::tr("What's New in Album Shaper %1");
   
   //create/open html file
   QFile file( filename() );
-  if(file.open(IO_WriteOnly))
+  if(file.open(QIODevice::WriteOnly))
   {
     //-----
-    QTextStream stream;
+    Q3TextStream stream;
     stream.setEncoding( type );
     stream.setDevice( &file );
     //-----
@@ -205,7 +205,7 @@
   }
 }
 //==============================================
-void WhatsNew::item( QTextStream& stream, QString item )
+void WhatsNew::item( Q3TextStream& stream, QString item )
 {
   stream << "<li>" << item << "\n";
 }
diff -urN albumshaper_2.1_src/src/gui/help/whatsNew.h albumshaper_2.1_src-qt4/src/gui/help/whatsNew.h
--- albumshaper_2.1_src/src/gui/help/whatsNew.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/help/whatsNew.h	2014-06-05 09:42:36.507564824 +0200
@@ -11,7 +11,7 @@
 #ifndef GUI_HELP_WHATSNEW_H
 #define GUI_HELP_WHATSNEW_H
 
-#include <qtextstream.h>
+#include <q3textstream.h>
 
 class WhatsNew
 {
@@ -20,10 +20,10 @@
   static QString filename();
   
   ///generates the html file
-  static void generateHTML(QTextStream::Encoding type, QString charSet);
+  static void generateHTML(Q3TextStream::Encoding type, QString charSet);
   //---------------------------
 private:
-  static void item( QTextStream&, QString item );
+  static void item( Q3TextStream&, QString item );
 };
 
 
diff -urN albumshaper_2.1_src/src/gui/layoutWidget.cpp albumshaper_2.1_src-qt4/src/gui/layoutWidget.cpp
--- albumshaper_2.1_src/src/gui/layoutWidget.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/layoutWidget.cpp	2014-06-05 09:42:36.226568337 +0200
@@ -12,8 +12,11 @@
 #include <qwidget.h>
 #include <qlayout.h>
 #include <qlabel.h>
-#include <qiconview.h>
+#include <q3iconview.h>
 #include <qtabwidget.h>
+//Added by qt3to4:
+#include <QPixmap>
+#include <Q3GridLayout>
 
 //Projectwide includes
 #include "layoutWidget.h"
@@ -60,7 +63,7 @@
            this, SLOT( photoStateChangedEvent() ) );
     
   //place the subalbums list and tabbed area in grid
-  grid = new QGridLayout( this, 1, 2, 0 );
+  grid = new Q3GridLayout( this, 1, 2, 0 );
   
   grid->addWidget( subalbums, 0, 0 );
   grid->setColSpacing( 0, subalbums->sizeHint().width() );
diff -urN albumshaper_2.1_src/src/gui/layoutWidget.h albumshaper_2.1_src-qt4/src/gui/layoutWidget.h
--- albumshaper_2.1_src/src/gui/layoutWidget.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/layoutWidget.h	2014-06-05 09:42:36.469565299 +0200
@@ -12,11 +12,15 @@
 #define GUI_LAYOUTWIDGET_H
 
 #include <qwidget.h>
+//Added by qt3to4:
+#include <Q3GridLayout>
+#include <QPixmap>
+#include <QLabel>
 
 //--------------------
 //forward declarations
 class QLabel;
-class QGridLayout;
+class Q3GridLayout;
 class QTabWidget;
 class SubalbumsWidget;
 class SubalbumWidget;
@@ -61,7 +65,7 @@
     Window* window;
   
   ///Grid items placed in
-  QGridLayout* grid;
+  Q3GridLayout* grid;
   
   ///List of subalbums
   SubalbumsWidget* subalbums;
diff -urN albumshaper_2.1_src/src/gui/photoDescEdit.cpp albumshaper_2.1_src-qt4/src/gui/photoDescEdit.cpp
--- albumshaper_2.1_src/src/gui/photoDescEdit.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/photoDescEdit.cpp	2014-06-05 11:47:16.129056688 +0200
@@ -16,8 +16,15 @@
 #include <qtimer.h>
 #include <qapplication.h>
 #include <qpainter.h>
-#include <qtextedit.h>
+#include <q3textedit.h>
 #include <qcursor.h>
+//Added by qt3to4:
+#include <Q3GridLayout>
+#include <QFocusEvent>
+#include <Q3Frame>
+#include <Q3PopupMenu>
+#include <QKeyEvent>
+#include <QDesktopWidget>
 
 //Projectwide includes
 #include "photoDescEdit.h"
@@ -70,7 +77,7 @@
   this->ppw = ppw;
   //-----------------------------------------------
   //don't erase before painting, avoids flicker
-  setWFlags(WNoAutoErase);
+  setWindowFlags(Qt::WNoAutoErase);
   //-----------------------------------------------
   //determine small image size
   getImageSize( ppw->getPhoto()->getThumbnailFilename(), smallWidth, smallHeight );
@@ -159,7 +166,7 @@
   if(!getImageSize( ppw->getPhoto()->getImageFilename(), fullWidth, fullHeight ) )
   {
     imageLarge = new QImage( QImage( ppw->getPhoto()->getThumbnailFilename()).
-                             scale(finalWidth,finalHeight, QImage::ScaleFree ));
+                             scaled(finalWidth,finalHeight, Qt::IgnoreAspectRatio ));
   }
   //else find cropped region of slideshow image using these dimensions
   else
@@ -183,11 +190,11 @@
     {
       for(y=0; y<actualHeight; y++)
       {
-        SSImage.setPixel( x, y, red.rgb() );
+        SSImage.setPixel( x, y, QColor(Qt::red).rgb() );
         SSImage.setPixel( x, y, paddedSSImage.pixel(x+leftOffset, y+topOffset) );
       }
     }
-    imageLarge = new QImage(SSImage.smoothScale(finalWidth,finalHeight, QImage::ScaleFree ));
+    imageLarge = new QImage(SSImage.smoothScale(finalWidth,finalHeight, Qt::IgnoreAspectRatio ));
   }
   //-----------------------------------------------
   //construct final text area pixmap used for morphing text region
@@ -202,13 +209,13 @@
   tmpTextEdit.setLineWidth( 0 );
   tmpTextEdit.setMargin( 0 );
   tmpTextEdit.setMidLineWidth( 0 );
-  tmpTextEdit.setFrameStyle( QFrame::NoFrame | QFrame::Plain );
+  tmpTextEdit.setFrameStyle( Q3Frame::NoFrame | Q3Frame::Plain );
   
-  tmpTextEdit.setWrapPolicy( QTextEdit::AtWordOrDocumentBoundary );
+  tmpTextEdit.setWrapPolicy( Q3TextEdit::AtWordOrDocumentBoundary );
   tmpTextEdit.constPolish();
   tmpTextEdit.polish();
 
-  tmpTextEdit.setWordWrap( QTextEdit::FixedPixelWidth );
+  tmpTextEdit.setWordWrap( Q3TextEdit::FixedPixelWidth );
   if(smallWidth > smallHeight )
     tmpTextEdit.setWrapColumnOrWidth( finalWidth );
   else
@@ -276,12 +283,12 @@
   setBackgroundMode( Qt::NoBackground );
   //-----------------------------------------------
   //Setup animation widgets and place in main grid
-  animationLabel = new QLabel(this, "animationLabel", WNoAutoErase);
+  animationLabel = new QLabel(this, "animationLabel", Qt::WNoAutoErase);
   animationLabel->setPixmap( *backgroundImage );
   animationLabel->setBackgroundMode( Qt::NoBackground );
   buffer = new QPixmap(  backgroundImage->width(), backgroundImage->height() );
 
-  mainGrid = new QGridLayout( this, 1, 2, 0 );
+  mainGrid = new Q3GridLayout( this, 1, 2, 0 );
   mainGrid->addWidget(animationLabel, 0, 0 );
   //-----------------------------------------------
   //Setup static widgets
@@ -290,19 +297,19 @@
   staticFrame->setBackgroundMode( Qt::NoBackground );
   mainGrid->addWidget(staticFrame, 0, 1 );
 
-  staticPhoto = new QLabel( staticFrame, "staticPhoto", WNoAutoErase);
+  staticPhoto = new QLabel( staticFrame, "staticPhoto", Qt::WNoAutoErase);
   staticPhoto->setPixmap( QPixmap( *imageLarge) );
   staticPhoto->setBackgroundMode( Qt::NoBackground );
 
   photoDesc = new TextEdit( staticFrame );
   photoDesc->setText( ppw->getPhoto()->getDescription() );
 
-  photoDesc->setWrapPolicy( QTextEdit::AtWordOrDocumentBoundary );
-  photoDesc->setFrameStyle( QFrame::NoFrame );
+  photoDesc->setWrapPolicy( Q3TextEdit::AtWordOrDocumentBoundary );
+  photoDesc->setFrameStyle( Q3Frame::NoFrame );
   photoDesc->setLineWidth( 0 );
   photoDesc->setMargin( 0 );
   photoDesc->setMidLineWidth( 0 );
-  photoDesc->setFrameStyle( QFrame::MenuBarPanel | QFrame::Plain );
+  photoDesc->setFrameStyle( QFrame::StyledPanel | Q3Frame::Plain );
 
   //start disappearing once the text edit reports the user is finished
   connect( photoDesc, SIGNAL( finished() ),
@@ -321,7 +328,7 @@
   //image is wider than tall, place text and buttons below image
   if(smallWidth > smallHeight )
   {
-    staticGrid = new QGridLayout( staticFrame, 4, 3);
+    staticGrid = new Q3GridLayout( staticFrame, 4, 3);
 
     staticGrid->addWidget( staticPhoto, 1, 1 );
     staticGrid->addWidget( photoDesc, 2, 1 );
@@ -340,7 +347,7 @@
   }
   else
   {
-    staticGrid = new QGridLayout( staticFrame, 3, 4);
+    staticGrid = new Q3GridLayout( staticFrame, 3, 4);
 
     staticGrid->addWidget( staticPhoto, 1, 1 );
     staticGrid->addWidget( photoDesc, 1, 2 );
@@ -453,7 +460,7 @@
 
       bufferPainter.drawPixmap( newX - left + EDIT_MARGIN,
                                 newY - top + EDIT_MARGIN + imageH,
-                                QPixmap( textRectangle->scale( imageW, textDim ) ) );
+                                QPixmap( textRectangle->scaled( imageW, textDim ) ) );
     }
     else
     {
@@ -464,13 +471,13 @@
 
       bufferPainter.drawPixmap( newX - left + EDIT_MARGIN + imageW,
                                 newY - top + EDIT_MARGIN,
-                                QPixmap( textRectangle->scale( textDim, imageH ) ) );
+                                QPixmap( textRectangle->scaled( textDim, imageH ) ) );
     }
 
     //draw scaled moved image to buffer
     bufferPainter.drawPixmap( newX - left + EDIT_MARGIN,
                               newY - top + EDIT_MARGIN,
-                              QPixmap( imageLarge->scale( imageW, imageH ) ) );
+                              QPixmap( imageLarge->scaled( imageW, imageH ) ) );
 
     //set label to use buffer pixmap
     animationLabel->setPixmap( *buffer );
@@ -549,8 +556,8 @@
 
     //check to see if mouse is over a new item, 
     //if so immediately set it as being moused over
-    QIconView* iconView = ppw->iconView();
-    QIconViewItem* item = iconView->findItem( iconView->viewport()->mapFromGlobal( QCursor::pos() )+=QPoint( iconView->contentsX(), iconView->contentsY() )  );
+    Q3IconView* iconView = ppw->iconView();
+    Q3IconViewItem* item = iconView->findItem( iconView->viewport()->mapFromGlobal( QCursor::pos() )+=QPoint( iconView->contentsX(), iconView->contentsY() )  );
     if(item != NULL && item != ppw )
     {
       ((PhotosIconView*)item->iconView())->repaintGroup( item );
@@ -562,9 +569,9 @@
   }
 }
 //==============================================
-TextEdit::TextEdit( QWidget* parent, const char* name ) : QTextEdit(parent,name) 
+TextEdit::TextEdit( QWidget* parent, const char* name ) : Q3TextEdit(parent,name) 
 { 
-  setHScrollBarMode( QScrollView::AlwaysOff );
+  setHScrollBarMode( Q3ScrollView::AlwaysOff );
   setTextFormat( Qt::PlainText );
   contextMenu = NULL;
 }
@@ -583,13 +590,13 @@
     emit finished();
   }
   //if Ctrl+A then select all text, otherwise, apply base class key press rules
-  else if( (e->state() & Qt::ControlButton) && e->key() == Qt::Key_A )
+  else if( (e->state() & Qt::ControlModifier) && e->key() == Qt::Key_A )
   {
     selectAll();
   }
   else
   {
-    QTextEdit::keyPressEvent( e );
+    Q3TextEdit::keyPressEvent( e );
   }
 }
 //==============================================
@@ -600,10 +607,10 @@
   if( contextMenu == NULL ) emit finished();
 }
 //==============================================
-QPopupMenu* TextEdit::createPopupMenu ( const QPoint& pos )
+Q3PopupMenu* TextEdit::createPopupMenu ( const QPoint& pos )
 {
   //when context menu's are created store their handle
-  contextMenu = QTextEdit::createPopupMenu( pos );
+  contextMenu = Q3TextEdit::createPopupMenu( pos );
   connect( ((QObject*)contextMenu), SIGNAL(aboutToHide()),
            this, SLOT(contextMenuHiding()) );
   return contextMenu;
diff -urN albumshaper_2.1_src/src/gui/photoDescEdit.h albumshaper_2.1_src-qt4/src/gui/photoDescEdit.h
--- albumshaper_2.1_src/src/gui/photoDescEdit.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/photoDescEdit.h	2014-06-05 09:42:36.470565287 +0200
@@ -1,3 +1,10 @@
+//Added by qt3to4:
+#include <QPixmap>
+#include <Q3GridLayout>
+#include <QLabel>
+#include <QKeyEvent>
+#include <Q3PopupMenu>
+#include <QFocusEvent>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
@@ -13,12 +20,12 @@
 
 //--------------------
 //forward declarations
-class QGridLayout;
+class Q3GridLayout;
 class QLabel;
 class QTimer;
 class QImage;
 class QPixmap;
-class QTextEdit;
+class Q3TextEdit;
 class PhotoPreviewWidget;
 class TextEdit;
 //--------------------
@@ -30,7 +37,7 @@
 
 #include <qwidget.h>
 #include <qdatetime.h>
-#include <qtextedit.h>
+#include <q3textedit.h>
 //=====================================
 class PhotoDescEdit : public QWidget
 {
@@ -81,7 +88,7 @@
   int smallWidth, smallHeight;
   ///-------------------------------------
   //Main grid
-   QGridLayout* mainGrid;
+   Q3GridLayout* mainGrid;
   ///-------------------------------------
   ///Animating Widgets
 
@@ -94,7 +101,7 @@
   ///Static Widgets
 
   ///grid static widgets placed in
-  QGridLayout* staticGrid;
+  Q3GridLayout* staticGrid;
 
   ///frame which contains static widget
   QWidget* staticFrame;
@@ -123,7 +130,7 @@
 };
 
 //======================
-class TextEdit : public QTextEdit
+class TextEdit : public Q3TextEdit
 {
 Q_OBJECT
 //----------------------
@@ -132,12 +139,12 @@
   void paintNow();
 //----------------------
 private:
-    QPopupMenu* contextMenu;
+    Q3PopupMenu* contextMenu;
 //----------------------
 protected:
   void keyPressEvent ( QKeyEvent* e );
   void focusOutEvent ( QFocusEvent* );
-  QPopupMenu* createPopupMenu ( const QPoint& pos );
+  Q3PopupMenu* createPopupMenu ( const QPoint& pos );
 //----------------------
 signals:
   void finished();
diff -urN albumshaper_2.1_src/src/gui/photoPreviewWidget.cpp albumshaper_2.1_src-qt4/src/gui/photoPreviewWidget.cpp
--- albumshaper_2.1_src/src/gui/photoPreviewWidget.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/photoPreviewWidget.cpp	2014-06-05 11:50:00.601000505 +0200
@@ -26,8 +26,8 @@
 #include "../backend/tools/guiTools.h"
 
 //==============================================
-PhotoPreviewWidget::PhotoPreviewWidget( QIconView *parent, Photo* phto ) :
-                                   QIconViewItem( parent, QString(""), QPixmap(phto->getThumbnailFilename()) )
+PhotoPreviewWidget::PhotoPreviewWidget( Q3IconView *parent, Photo* phto ) :
+                                   Q3IconViewItem( parent, QString(""), QPixmap(phto->getThumbnailFilename()) )
 {
   //initially item not moused over, set photo pointer
   mousedOver = false;
@@ -60,7 +60,7 @@
 {
   pixmapXOffset = (THUMBNAIL_WIDTH - p.width() ) / 2;  
   pixmapYOffset = (THUMBNAIL_HEIGHT - p.height() ) / 2;  
-  QIconViewItem::setPixmap( p, redraw );
+  Q3IconViewItem::setPixmap( p, redraw );
 }
 //==============================================
 void PhotoPreviewWidget::updateDescription()
@@ -70,7 +70,7 @@
 //==============================================
 void PhotoPreviewWidget::setText ( const QString & text )
 {
-  QIconViewItem::setText( clipText(text, 1, calibratedWidth), false );
+  Q3IconViewItem::setText( clipText(text, 1, calibratedWidth), false );
 }
 //==============================================
 void PhotoPreviewWidget::paint( QPainter *p )
@@ -96,11 +96,11 @@
                                  *pixmap());
   
   //paint text
-  int align = AlignLeft | AlignTop | BreakAnywhere;
+  int align = Qt::AlignLeft | Qt::AlignTop | Qt::TextWrapAnywhere;
   if(isSelected())
-    p->setPen( white );
+    p->setPen( Qt::white );
   else
-    p->setPen( black );
+    p->setPen( Qt::black );
   p->drawText( x() + textRect().x() + 1, y() + textRect().y() + 1, 
                            textRect().width(), textRect().height(),
                            align, text() );
@@ -113,10 +113,10 @@
   QRect r = rect();
   QSize newSize = r.size().expandedTo(buffer.size() );
   buffer.resize(newSize);
-  buffer.fill( white );
+  buffer.fill( Qt::white );
 
   //construct painter for buffer
-  QPainter bufferPainter(&buffer, this);
+  QPainter bufferPainter(&buffer);
   bufferPainter.translate( -r.x(), -r.y() );
  
    //paint item
@@ -172,7 +172,7 @@
   return true;
 }
 //==============================================
-int PhotoPreviewWidget::compare ( QIconViewItem * i ) const
+int PhotoPreviewWidget::compare ( Q3IconViewItem * i ) const
 {
   if( pos().y() > (i->pos().y() + height()) ||
       (
diff -urN albumshaper_2.1_src/src/gui/photoPreviewWidget.h albumshaper_2.1_src-qt4/src/gui/photoPreviewWidget.h
--- albumshaper_2.1_src/src/gui/photoPreviewWidget.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/photoPreviewWidget.h	2014-06-05 09:42:36.472565262 +0200
@@ -1,3 +1,5 @@
+//Added by qt3to4:
+#include <QPixmap>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
@@ -23,17 +25,17 @@
 #define PHOTO_SHADOW_END_OFFSET 2
 #define PHOTO_TEXT_MARGIN 1
 
-#include <qiconview.h>
+#include <q3iconview.h>
 
 //=====================================
 /*! \brief Displays photo thumbnail and description.
  */
 //=====================================
-class PhotoPreviewWidget : public QIconViewItem
+class PhotoPreviewWidget : public Q3IconViewItem
 {
 public:
   ///Sets subalbum pointer
-  PhotoPreviewWidget( QIconView *parent, Photo* phto );
+  PhotoPreviewWidget( Q3IconView *parent, Photo* phto );
 
   ///Returns photo pointer
   Photo* getPhoto();
@@ -58,7 +60,7 @@
   
   bool acceptDrop( const QMimeSource *e) const;
 
-  int compare ( QIconViewItem * i ) const;
+  int compare ( Q3IconViewItem * i ) const;
 
   void setMousedOver(bool val);
 
diff -urN albumshaper_2.1_src/src/gui/photosIconView.cpp albumshaper_2.1_src-qt4/src/gui/photosIconView.cpp
--- albumshaper_2.1_src/src/gui/photosIconView.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/photosIconView.cpp	2014-06-05 11:50:20.000757975 +0200
@@ -11,13 +11,18 @@
 //Systemwide includes
 #include <qpixmap.h>
 #include <qpainter.h>
-#include <qpopupmenu.h>
-#include <qiconset.h>
+#include <q3popupmenu.h>
+#include <qicon.h>
 #include <qapplication.h>
 #include <qstringlist.h>
 #include <qcursor.h>
-#include <qdragobject.h>
+#include <q3dragobject.h>
 #include <qstringlist.h>
+//Added by qt3to4:
+#include <QContextMenuEvent>
+#include <QDropEvent>
+#include <QMouseEvent>
+#include <QKeyEvent>
 
 //Projectwide includes
 #include "photosIconView.h"
@@ -32,18 +37,18 @@
 #include "../configuration/configuration.h"
 
 //==============================================
-class PhotoDrag : public QUriDrag 
+class PhotoDrag : public Q3UriDrag 
 {
 public:
   PhotoDrag( QWidget* dragSource=0, const char* name=0)
-  { QUriDrag(dragSource, name); }
+  { Q3UriDrag(dragSource, name); }
   
   ///force all drags to COPY (not move/delete) original files!!!
   virtual bool drag(DragMode mode)  
-  { return QDragObject::drag( QDragObject::DragCopy ); }
+  { return Q3DragObject::drag( Q3DragObject::DragCopy ); }
 };
 //==============================================
-PhotosIconView::PhotosIconView( QWidget *parent ) : QIconView( parent, "iconView", WNoAutoErase )
+PhotosIconView::PhotosIconView( QWidget *parent ) : Q3IconView( parent, "iconView", Qt::WNoAutoErase )
 {
   viewport()->setBackgroundMode( Qt::NoBackground );
 
@@ -62,18 +67,18 @@
   dragIcon = new QPixmap( QString(IMAGE_PATH)+"miscImages/moveImage.png" );
 
   //connect mouse over events to paint pseudo selection in ligher blue
-  connect( this, SIGNAL(onItem(QIconViewItem*)),
-                this, SLOT(repaintGroup(QIconViewItem*)) );
+  connect( this, SIGNAL(onItem(Q3IconViewItem*)),
+                this, SLOT(repaintGroup(Q3IconViewItem*)) );
 
   //clear any pseudo selection when mouse moves off icons
   connect( this, SIGNAL(onViewport()),
                 this, SLOT(clearPseudoSelection()) );
 
-  connect( this, SIGNAL(pressed( QIconViewItem*, const QPoint& )),
-                 this, SLOT(captureClick(QIconViewItem*, const QPoint&)) );
+  connect( this, SIGNAL(pressed( Q3IconViewItem*, const QPoint& )),
+                 this, SLOT(captureClick(Q3IconViewItem*, const QPoint&)) );
 }
 //==============================================
-QDragObject* PhotosIconView::dragObject()
+Q3DragObject* PhotosIconView::dragObject()
 {
   //no item selected?
   if( !currentItem() )
@@ -81,7 +86,7 @@
   
   //create drag object
 //  PhotoDrag *drag = new PhotoDrag( viewport() );
-  QIconDrag *drag = new QIconDrag( viewport() );
+  Q3IconDrag *drag = new Q3IconDrag( viewport() );
   
   //use small icon to represent drag, does not cover up too much of the screen
   drag->setPixmap( *dragIcon );
@@ -108,7 +113,7 @@
 }
 //==============================================
 bool PhotosIconView::findNearestUnselectedPhoto( const QPoint &pos,
-                                                 QIconViewItem** nearestItem,
+                                                 Q3IconViewItem** nearestItem,
                                                  bool &posIsleftOfItem )
 {
   //if there are no items we can't find one now can we?
@@ -117,7 +122,7 @@
   
   //------------------------------------------------
   //first see if there is an unselected photo here
-  QIconViewItem* item = firstItem();
+  Q3IconViewItem* item = firstItem();
   while(item != NULL)
   {
     if( !item->isSelected() && item->contains(pos) )
@@ -222,13 +227,13 @@
 //==============================================
 void PhotosIconView::contentsDropEvent( QDropEvent *e )
 {
-  QIconView::contentsDropEvent( e );
+  Q3IconView::contentsDropEvent( e );
   
   //if item is from the viewport emit item moved signal
   if(e->source() == viewport() )
   { 
     //find nearest unselected item
-    QIconViewItem* item; bool leftOf;
+    Q3IconViewItem* item; bool leftOf;
     if( !findNearestUnselectedPhoto( e->pos(), &item, leftOf ) )
     {
       //unable to find nearest item. this should be impossible
@@ -241,7 +246,7 @@
     {
       //count number of items being moved
       int num=0;
-      QIconViewItem* current = firstItem();
+      Q3IconViewItem* current = firstItem();
       while(current != NULL)
       {
         if(current->isSelected()) { num++; }
@@ -266,7 +271,7 @@
     {
       //move items to their new locations
       int xpos = item->x() + (item->width()/2) + 1;
-      QIconViewItem* current = firstItem();
+      Q3IconViewItem* current = firstItem();
       while(current != NULL)
       {
         if(current->isSelected())
@@ -285,7 +290,7 @@
   else
   {
     QStringList fileNames;
-    if( QUriDrag::decodeLocalFiles( e, fileNames ) )
+    if( Q3UriDrag::decodeLocalFiles( e, fileNames ) )
     {
       //for some reason the order in which we receive file names is entire illogical.
       //it does not appear to be based on filename, data, modified data, size, anything!
@@ -300,7 +305,7 @@
 int PhotosIconView::numSelected()
 {
   int num = 0;
-  QIconViewItem* current = firstItem();
+  Q3IconViewItem* current = firstItem();
   while(current != NULL)
   {
     if(current->isSelected())
@@ -316,12 +321,12 @@
   if(rightClickedPhoto == NULL)
     return;
 
-  QPopupMenu contextMenu( this );
+  Q3PopupMenu contextMenu( this );
 
-  contextMenu.insertItem( QIconSet( QPixmap(QString(IMAGE_PATH)+"menuIcons/setAlbumImage.png") ),
+  contextMenu.insertItem( QIcon( QPixmap(QString(IMAGE_PATH)+"menuIcons/setAlbumImage.png") ),
                           tr("Set album image"), this, SLOT(setAlbumImage()) );
 
-  contextMenu.insertItem( QIconSet( QPixmap(QString(IMAGE_PATH)+"menuIcons/setSubalbumImage.png") ),
+  contextMenu.insertItem( QIcon( QPixmap(QString(IMAGE_PATH)+"menuIcons/setSubalbumImage.png") ),
                           tr("Set collection image"), this, SLOT(setSubalbumImage()) );
 
   contextMenu.exec( QPoint(e->globalX(), e->globalY()) );
@@ -350,16 +355,16 @@
 {
     if( bufferPixmap.size() != size())
     {  bufferPixmap.resize( size() ); }
-    QPainter bufferPainter( &bufferPixmap, viewport() );
+    QPainter bufferPainter( &bufferPixmap );
     int xOffset = clipx - contentsX();
     int yOffset = clipy - contentsY();
 
     bufferPainter.translate( -contentsX(), -contentsY() );
-    QIconView::drawContents( &bufferPainter, clipx, clipy, clipw, cliph );
+    Q3IconView::drawContents( &bufferPainter, clipx, clipy, clipw, cliph );
     bitBlt(p->device(), xOffset, yOffset, &bufferPixmap, xOffset, yOffset, clipw, cliph );
 }
 //==============================================
-void PhotosIconView::repaintGroup( QIconViewItem* pseudoSelection)
+void PhotosIconView::repaintGroup( Q3IconViewItem* pseudoSelection)
 {
   //if old pseudo selection unselect it
   clearPseudoSelection();
@@ -391,7 +396,7 @@
   }
 }
 //==============================================
-void PhotosIconView::captureClick(QIconViewItem *item, const QPoint& point)
+void PhotosIconView::captureClick(Q3IconViewItem *item, const QPoint& point)
 {
   //if no item has been clicked then ignore
   if(item == NULL)
@@ -426,12 +431,12 @@
 void PhotosIconView::contentsMousePressEvent ( QMouseEvent * e )
 {
   dragStartPos = e->pos();
-  QIconView::contentsMousePressEvent( e );
+  Q3IconView::contentsMousePressEvent( e );
 }
 //==============================================
 void PhotosIconView::contentsMouseMoveEvent( QMouseEvent *e)
 {
-  QIconView::contentsMouseMoveEvent( e );
+  Q3IconView::contentsMouseMoveEvent( e );
 
   //if no item is under mouse then return
   if(currentPseudoSelection == NULL)
@@ -487,21 +492,21 @@
       break;
     //ctrl + r - rotate photo right
     case Qt::Key_R:
-      if( e->state() & Qt::ControlButton && numSelected() > 0)
+      if( e->state() & Qt::ControlModifier && numSelected() > 0)
         emit rotate90SelectedPhotos();
       break;
     //ctrl + l - rotate photo left
     case Qt::Key_L:
-      if(e->state() & Qt::ControlButton && numSelected() > 0) 
+      if(e->state() & Qt::ControlModifier && numSelected() > 0) 
         emit rotate270SelectedPhotos();
       break;
     //e - edit photo using editing interface
     case Qt::Key_E:
-      if(e->state() & Qt::ControlButton && numSelected() >= 1) emit editSelectedPhoto();
+      if(e->state() & Qt::ControlModifier && numSelected() >= 1) emit editSelectedPhoto();
       break;
     //allow base class to handle key event
     default:
-      QIconView::keyPressEvent(e);
+      Q3IconView::keyPressEvent(e);
       break;
   }
 }
diff -urN albumshaper_2.1_src/src/gui/photosIconView.h albumshaper_2.1_src-qt4/src/gui/photosIconView.h
--- albumshaper_2.1_src/src/gui/photosIconView.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/photosIconView.h	2014-06-05 09:42:36.473565249 +0200
@@ -1,3 +1,10 @@
+//Added by qt3to4:
+#include <QPixmap>
+#include <QDropEvent>
+#include <QMouseEvent>
+#include <QContextMenuEvent>
+#include <QKeyEvent>
+#include <QPaintEvent>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
@@ -20,13 +27,13 @@
 class PhotoDescEdit;
 //--------------------
 
-#include <qiconview.h>
+#include <q3iconview.h>
 
 //=====================================
 /*! \brief Extension of iconview, used to list all photos in a subalbum. supports drag-n-drop within iconview.
  */
 //=====================================
-class PhotosIconView : public QIconView
+class PhotosIconView : public Q3IconView
 {
 Q_OBJECT
 
@@ -37,7 +44,7 @@
   int numSelected();
 public slots:
   void clearPseudoSelection();
-  void repaintGroup( QIconViewItem* pseudoSelection);
+  void repaintGroup( Q3IconViewItem* pseudoSelection);
   //----------------------
 signals:
   void itemHasMoved();
@@ -50,7 +57,7 @@
   void editSelectedPhoto();
 //----------------------
 protected:
-  QDragObject *dragObject();
+  Q3DragObject *dragObject();
   void drawContents ( QPainter * p, int clipx, int clipy, int clipw, int cliph );
   void drawBackground( QPainter* p, const QRect& r);
   void contextMenuEvent ( QContextMenuEvent* e );
@@ -61,12 +68,12 @@
 private slots:
   void setAlbumImage( );
   void setSubalbumImage( );
-  void captureClick(QIconViewItem*, const QPoint&);
+  void captureClick(Q3IconViewItem*, const QPoint&);
 //--
 private:
   void contentsDropEvent( QDropEvent *e );
   
-  bool findNearestUnselectedPhoto( const QPoint &pos, QIconViewItem** nearestItem, bool &posIsleftOfItem );
+  bool findNearestUnselectedPhoto( const QPoint &pos, Q3IconViewItem** nearestItem, bool &posIsleftOfItem );
   
   PhotoPreviewWidget* rightClickedPhoto;
   QPixmap* backgroundImage;
diff -urN albumshaper_2.1_src/src/gui/recentAlbumMenuItem.cpp albumshaper_2.1_src-qt4/src/gui/recentAlbumMenuItem.cpp
--- albumshaper_2.1_src/src/gui/recentAlbumMenuItem.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/recentAlbumMenuItem.cpp	2014-06-05 11:52:11.551363400 +0200
@@ -19,7 +19,7 @@
 #include "../backend/tools/imageTools.h"
 
 //==============================================
-RecentAlbumMenuItem::RecentAlbumMenuItem( Key acceleratorKey ) : QCustomMenuItem()
+RecentAlbumMenuItem::RecentAlbumMenuItem( Qt::Key acceleratorKey ) : QMenuItem()
 {
   this->acceleratorKey = acceleratorKey;
   changeItem( "unitialized", "unitialized", "unitialized" );
@@ -91,11 +91,11 @@
   }
 
   //paint accelerator key
-  if( acceleratorKey != Key_unknown )
+  if( acceleratorKey != Qt::Key_unknown )
   {
     xOffset = maxWidth + 24;
     yOffset = fm.ascent() + fm.height()/2;
-    QKeySequence seq( CTRL+acceleratorKey );
+    QKeySequence seq( Qt::CTRL+acceleratorKey );
     QString str = (QString)seq;
     p->drawText( x+xOffset, y+yOffset,
                  str);
@@ -110,4 +110,4 @@
 //==============================================
 void RecentAlbumMenuItem::setMaxWidth( int val )
 { maxWidth = val; }
-//==============================================
\ No newline at end of file
+//==============================================
diff -urN albumshaper_2.1_src/src/gui/recentAlbumMenuItem.h albumshaper_2.1_src-qt4/src/gui/recentAlbumMenuItem.h
--- albumshaper_2.1_src/src/gui/recentAlbumMenuItem.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/recentAlbumMenuItem.h	2014-06-05 11:51:57.648537210 +0200
@@ -20,11 +20,11 @@
 /*! \brief A custom menu entry, displays album image, name, and number of photos
  */
 //=====================================
-class RecentAlbumMenuItem : public QCustomMenuItem
+class RecentAlbumMenuItem : public QMenuItem
 {
 //----------------------
 public:
-  RecentAlbumMenuItem( Key acceleratorKey );
+  RecentAlbumMenuItem( Qt::Key acceleratorKey );
 
   ///updates entry as per arguments passed (used by constructor during intiailization as well)
   void changeItem( QString albumName, QString albumLocation, QString numPhotos );
@@ -45,7 +45,7 @@
   bool fullSpan() const;
   //----------------------
 private:
-  Key acceleratorKey;
+  Qt::Key acceleratorKey;
 
   ///album image
   QImage albumImage;
diff -urN albumshaper_2.1_src/src/gui/statusWidget.cpp albumshaper_2.1_src-qt4/src/gui/statusWidget.cpp
--- albumshaper_2.1_src/src/gui/statusWidget.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/statusWidget.cpp	2014-06-05 11:53:02.207730109 +0200
@@ -12,8 +12,8 @@
 #include <qlayout.h>
 #include <qlabel.h>
 #include <qfont.h>
-#include <qframe.h>
-#include <qprogressbar.h>
+#include <q3frame.h>
+#include <q3progressbar.h>
 #include <qfile.h>
 #include <qdom.h>
 #include <qstringlist.h>
@@ -23,6 +23,9 @@
 #include <qmovie.h>
 #include <qtimer.h>
 #include <qsizegrip.h>
+//Added by qt3to4:
+#include <Q3GridLayout>
+#include <Q3TextStream>
 
 //Projectwide includes
 #include "clickableLabel.h"
@@ -45,7 +48,7 @@
   connect(timer, SIGNAL(timeout()), this, SLOT(removeStatus()) );
 
   //create progress message and bar
-  progressBar = new QProgressBar( this );
+  progressBar = new Q3ProgressBar( this );
   progressBar->setCenterIndicator(true);
   progressBar->hide();
   curStep = 0;
@@ -61,7 +64,7 @@
   }
   //-----------------------------------------------------------------
   //place progress frame and status message in main grid
-  grid = new QGridLayout( this, 1, 6, 0 );
+  grid = new Q3GridLayout( this, 1, 6, 0 );
   grid->setSpacing(WIDGET_SPACING);
   grid->setColSpacing( 0, WIDGET_SPACING );
   grid->addWidget( message, 0, 1, Qt::AlignVCenter );
@@ -152,18 +155,18 @@
   //------------------------------------------------------------
   //write releases to temp file
   QFile fetchedDoc( TEMP_DIR + QString("/releases.xml") );
-  if(fetchedDoc.open(IO_WriteOnly))
+  if(fetchedDoc.open(QIODevice::WriteOnly))
   {
     //----------------------------
     //write to file
-    QTextStream stream( &fetchedDoc );
-    stream.setEncoding( QTextStream::UnicodeUTF8 );
+    Q3TextStream stream( &fetchedDoc );
+    stream.setEncoding( Q3TextStream::UnicodeUTF8 );
     stream << QString( http.readAll() );
     fetchedDoc.close();
     //----------------------------
     //parse xml file, construct string list of releases
     //open file, bail if unable to
-    if( !fetchedDoc.open( IO_ReadOnly ) )
+    if( !fetchedDoc.open( QIODevice::ReadOnly ) )
     {
       return;
     }
@@ -211,7 +214,8 @@
     if(thisVersionFound && releases.first().compare( QString(ALBUMSHAPER_VERSION) ) != 0)
     {
       ClickableLabel* uA = new ClickableLabel( this );
-      uA->setMovie( QMovie( QString(IMAGE_PATH)+"miscImages/updateAvailable.mng") );
+      QMovie *m = new QMovie( QString(IMAGE_PATH)+"miscImages/updateAvailable.mng");
+      uA->setMovie(m);
       QToolTip::add( uA, tr("Your copy of Album Shaper is not up to date! Click here for details") );
       grid->addWidget( uA, 0, 4, Qt::AlignVCenter );
       connect( uA, SIGNAL(clicked()),
diff -urN albumshaper_2.1_src/src/gui/statusWidget.h albumshaper_2.1_src-qt4/src/gui/statusWidget.h
--- albumshaper_2.1_src/src/gui/statusWidget.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/statusWidget.h	2014-06-05 09:42:36.475565224 +0200
@@ -1,3 +1,7 @@
+//Added by qt3to4:
+#include <Q3Frame>
+#include <Q3GridLayout>
+#include <QLabel>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
@@ -13,16 +17,16 @@
 
 //--------------------
 //forward declarations
-class QGridLayout;
+class Q3GridLayout;
 class QLabel;
-class QFrame;
-class QProgressBar;
+class Q3Frame;
+class Q3ProgressBar;
 class QTimer;
 class ClickableLabel;
 //--------------------
 
 #include <qwidget.h>
-#include <qhttp.h>
+#include <q3http.h>
 
 //=====================================
 class StatusWidget : public QWidget
@@ -73,16 +77,16 @@
 //----------------------
 private:
   ///Layout widgets placed in
-  QGridLayout* grid;
+  Q3GridLayout* grid;
 
   QLabel* message;
-  QProgressBar* progressBar;
+  Q3ProgressBar* progressBar;
   int curStep;
 
   QTimer* timer;
 //----------------------
 ///http object for fetching releases file, used to check to see if installed copy is up to date
-QHttp http;
+Q3Http http;
 
 ///Update available label
 ClickableLabel* updateAvailable;
diff -urN albumshaper_2.1_src/src/gui/subalbumPreviewWidget.cpp albumshaper_2.1_src-qt4/src/gui/subalbumPreviewWidget.cpp
--- albumshaper_2.1_src/src/gui/subalbumPreviewWidget.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/subalbumPreviewWidget.cpp	2014-06-05 11:53:28.296403955 +0200
@@ -12,9 +12,12 @@
 #include <qpixmap.h>
 #include <qstring.h>
 #include <qpainter.h>
-#include <qiconview.h>
+#include <q3iconview.h>
 #include <qfontmetrics.h>
 #include <qapplication.h>
+//Added by qt3to4:
+#include <QDropEvent>
+#include <Q3ValueList>
 
 //Projectwide includes
 #include "subalbumPreviewWidget.h"
@@ -32,7 +35,7 @@
 
 //==============================================
 SubalbumPreviewWidget::SubalbumPreviewWidget( SubalbumsIconView* parent, Subalbum* salbum )
-          : QIconViewItem(parent, 
+          : Q3IconViewItem(parent, 
                           clipText( salbum->getName(), 2, parent->getTextWidth()),
                           *salbum->getRepresentativeImage(MEDIUM) )
 {         
@@ -71,7 +74,7 @@
   buffer.fill( background );
 
   //construct painter for buffer
-  QPainter bufferPainter(&buffer, this);
+  QPainter bufferPainter(&buffer);
   bufferPainter.translate( -r.x(), -r.y() );
 
   //turn off clipping to make painting operations faster
@@ -158,11 +161,11 @@
   bufferPainter.drawPixmap( x()+4 , y() + 4, *pixmap());
 
   //paint text
-  int align = AlignLeft | AlignTop | BreakAnywhere;
+  int align = Qt::AlignLeft | Qt::AlignTop | Qt::TextWrapAnywhere;
   if(isSelected())
-    bufferPainter.setPen( white );
+    bufferPainter.setPen( Qt::white );
   else
-    bufferPainter.setPen( black );
+    bufferPainter.setPen( Qt::black );
   bufferPainter.drawText( x() + 4 + pixmapRect().width(),
                                         y() + 4,
                                         textRect().width(), textRect().height(),
@@ -172,7 +175,7 @@
   p->drawPixmap( x(), y(), buffer );
 }
 //==============================================
-void SubalbumPreviewWidget::dropped( QDropEvent *e, const QValueList<QIconDragItem> & )
+void SubalbumPreviewWidget::dropped( QDropEvent *e, const Q3ValueList<Q3IconDragItem> & )
 {
   //if source is not from the application then ignore
   if(e->source() == NULL)
@@ -211,7 +214,7 @@
       //and deleting old photo widgets
       SubalbumWidget* oldSubalbumWidget = ((LayoutWidget*)(parent->parentWidget()->parentWidget()))->getSubalbum();
       Subalbum* oldSubalbum = oldSubalbumWidget->getSubalbum();
-      QIconViewItem* current = oldSubalbumWidget->getPhotos()->firstItem();
+      Q3IconViewItem* current = oldSubalbumWidget->getPhotos()->firstItem();
       while(current != NULL)
       {
        //found a selected photo
@@ -227,7 +230,7 @@
           subalbum->addPhoto(photo);
 
           //delete photo widget and rearrange photos
-          QIconViewItem* temp = current;
+          Q3IconViewItem* temp = current;
           current = current->nextItem();
           delete temp;
         }
@@ -248,7 +251,7 @@
   return true;
 }
 //==============================================
-int SubalbumPreviewWidget::compare ( QIconViewItem * i ) const
+int SubalbumPreviewWidget::compare ( Q3IconViewItem * i ) const
 {
   if(pos().y() >= i->pos().y())
   {  return 1; }
@@ -336,7 +339,7 @@
 void SubalbumPreviewWidget::calcRect( const QString & text_ )
 {  
   //setup default dimensions
-  QIconViewItem::calcRect( text_ );  
+  Q3IconViewItem::calcRect( text_ );  
 
   //update using init method
   initializeItemRect();
@@ -369,7 +372,7 @@
 //==============================================
 void SubalbumPreviewWidget::setText ( const QString & text )
 {
-  QIconViewItem::setText( clipText(text, 2, parent->getTextWidth()), false );
+  Q3IconViewItem::setText( clipText(text, 2, parent->getTextWidth()), false );
 }
 //==============================================
 void SubalbumPreviewWidget::setMousedOver(bool val)
diff -urN albumshaper_2.1_src/src/gui/subalbumPreviewWidget.h albumshaper_2.1_src-qt4/src/gui/subalbumPreviewWidget.h
--- albumshaper_2.1_src/src/gui/subalbumPreviewWidget.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/subalbumPreviewWidget.h	2014-06-05 09:42:36.476565212 +0200
@@ -1,3 +1,7 @@
+//Added by qt3to4:
+#include <Q3ValueList>
+#include <QDropEvent>
+#include <QPixmap>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
@@ -19,14 +23,14 @@
 class SubalbumsIconView;
 //--------------------
 
-#include <qiconview.h>
+#include <q3iconview.h>
 #include <qobject.h>
 
 //=====================================
 /*! \brief Displays subalbum icon and name.
  */
 //=====================================
-class SubalbumPreviewWidget : public QIconViewItem
+class SubalbumPreviewWidget : public Q3IconViewItem
 {
 public:
   ///Sets subalbum pointer
@@ -40,7 +44,7 @@
 
   bool acceptDrop( const QMimeSource *e) const;
 
-  int compare ( QIconViewItem * i ) const;
+  int compare ( Q3IconViewItem * i ) const;
 
   static QPixmap* createSubalbumPixmap( QString imageName );
 
@@ -54,7 +58,7 @@
                   const QColorGroup& cg);
 //----------------------
 private:
-  void dropped( QDropEvent *e, const QValueList<QIconDragItem> &lst );
+  void dropped( QDropEvent *e, const Q3ValueList<Q3IconDragItem> &lst );
 
   QColor blendColors( QColor a, QColor b, double alpha);
 
diff -urN albumshaper_2.1_src/src/gui/subalbumsIconView.cpp albumshaper_2.1_src-qt4/src/gui/subalbumsIconView.cpp
--- albumshaper_2.1_src/src/gui/subalbumsIconView.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/subalbumsIconView.cpp	2014-06-05 11:54:23.776710356 +0200
@@ -14,6 +14,10 @@
 #include <qpainter.h>
 #include <qcursor.h>
 #include <qapplication.h>
+//Added by qt3to4:
+#include <QDropEvent>
+#include <QMouseEvent>
+#include <QDragMoveEvent>
 
 //#include <qscrollbar.h>
 
@@ -25,7 +29,7 @@
 #include "photoPreviewWidget.h"
 
 //==============================================
-SubalbumsIconView::SubalbumsIconView( QWidget *parent ) : QIconView( parent )
+SubalbumsIconView::SubalbumsIconView( QWidget *parent ) : Q3IconView( parent )
 {
 //  setSizePolicy( QSizePolicy::Minimum, QSizePolicy::Minimum);
   setMouseTracking(true);
@@ -33,8 +37,8 @@
   currentPseudoSelection = NULL;
 
   //connect mouse over events to paint pseudo selection in ligher blue
-  connect( this, SIGNAL(onItem(QIconViewItem*)),
-                this, SLOT(repaintGroup(QIconViewItem*)) );
+  connect( this, SIGNAL(onItem(Q3IconViewItem*)),
+                this, SLOT(repaintGroup(Q3IconViewItem*)) );
 
   //clear any pseudo selection when mouse moves off icons
   connect( this, SIGNAL(onViewport()),
@@ -48,7 +52,7 @@
 //==============================================
 void SubalbumsIconView::contentsDropEvent( QDropEvent *e )
 {
-  QIconView::contentsDropEvent( e );
+  Q3IconView::contentsDropEvent( e );
 
    //if drop originated from this viewport then emit item moved signal
   if(e->source() == viewport() )
@@ -59,12 +63,12 @@
 {
     if( bufferPixmap.size() != size())
     {  bufferPixmap.resize( size() ); }
-    QPainter bufferPainter( &bufferPixmap, viewport() );
+    QPainter bufferPainter( &bufferPixmap );
     int xOffset = clipx - contentsX();
     int yOffset = clipy - contentsY();
 
     bufferPainter.translate( -contentsX(), -contentsY() );
-    QIconView::drawContents( &bufferPainter, clipx, clipy, clipw, cliph );
+    Q3IconView::drawContents( &bufferPainter, clipx, clipy, clipw, cliph );
     bitBlt(p->device(), xOffset, yOffset, &bufferPixmap, xOffset, yOffset, clipw, cliph );
 }
 //==============================================
@@ -74,22 +78,22 @@
   if( e->button() != Qt::LeftButton ) return;
 
   dragStartPos = e->pos();
-  QIconView::contentsMousePressEvent( e );
+  Q3IconView::contentsMousePressEvent( e );
 }
 //==============================================
-QDragObject* SubalbumsIconView::dragObject()
+Q3DragObject* SubalbumsIconView::dragObject()
 {
   //no item selected?
   if( !currentItem() )
     return 0;
 
   //create drag object
-  QIconDrag *drag = new QIconDrag( viewport() );
+  Q3IconDrag *drag = new Q3IconDrag( viewport() );
 
   //create buffer and paint item to buffer
   QRect r = currentItem()->rect();
   QPixmap buffer( r.width(), r.height() );
-  QPainter painter( &buffer, this );
+  QPainter painter( &buffer );
   painter.translate( -r.x(), -r.y() );
   ((SubalbumPreviewWidget*)currentItem())->paint( &painter );
 
@@ -103,14 +107,14 @@
 
   //we don't want to show any rectangles, but if we don't append two null rectangles the last drag rectangles this iconview displayed
   //possibly form objects dropped onto it from outside the viewport, aka photos, will be drawn! :(
-  drag->append( QIconDragItem(), QRect(), QRect() );
+  drag->append( Q3IconDragItem(), QRect(), QRect() );
 
   return drag;
 }
 //==============================================
 void SubalbumsIconView::contentsDragMoveEvent( QDragMoveEvent* e )
 {
-  QIconView::contentsDragMoveEvent( e );
+  Q3IconView::contentsDragMoveEvent( e );
    e->accept(true);
 
    //if source of drag is not from application then return
@@ -153,7 +157,7 @@
   }
 }
 //==============================================
-void SubalbumsIconView::repaintGroup( QIconViewItem* pseudoSelection)
+void SubalbumsIconView::repaintGroup( Q3IconViewItem* pseudoSelection)
 {
   //if old pseudo selection unselect it
   clearPseudoSelection();
@@ -182,11 +186,11 @@
 //==============================================
 QSize SubalbumsIconView::sizeHint() const
 {
-  QSize s = QIconView::sizeHint();
+  QSize s = Q3IconView::sizeHint();
   
   //find max item width
   s.setWidth(0);
-  QIconViewItem *item;
+  Q3IconViewItem *item;
   for( item = firstItem(); item != NULL; item = item->nextItem() )
   {
     if(item->width() > s.width() )
diff -urN albumshaper_2.1_src/src/gui/subalbumsIconView.h albumshaper_2.1_src-qt4/src/gui/subalbumsIconView.h
--- albumshaper_2.1_src/src/gui/subalbumsIconView.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/subalbumsIconView.h	2014-06-05 09:42:36.477565199 +0200
@@ -1,3 +1,8 @@
+//Added by qt3to4:
+#include <QMouseEvent>
+#include <QDragMoveEvent>
+#include <QDropEvent>
+#include <QPixmap>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
@@ -15,11 +20,11 @@
 //forward declarations
 class QPixmap;
 class QPainter;
-class QDragObject;
+class Q3DragObject;
 class SubalbumPreviewWidget;
 //--------------------
 
-#include <qiconview.h>
+#include <q3iconview.h>
 #include <qapplication.h>
 
 //=====================================
@@ -28,7 +33,7 @@
 photos to be moved from one subalbum to another.
  */
 //=====================================
-class SubalbumsIconView : public QIconView
+class SubalbumsIconView : public Q3IconView
 {
 Q_OBJECT
 
@@ -45,13 +50,13 @@
 //----------------------
 protected:
   void drawContents ( QPainter * p, int clipx, int clipy, int clipw, int cliph );
-  QDragObject *dragObject();
+  Q3DragObject *dragObject();
   
   void contentsMousePressEvent( QMouseEvent * e );
   void contentsDragMoveEvent( QDragMoveEvent* e );
 //----------------------
 private slots:
-  void repaintGroup( QIconViewItem* pseudoSelection);
+  void repaintGroup( Q3IconViewItem* pseudoSelection);
   void clearPseudoSelection();
 //--
 private:
diff -urN albumshaper_2.1_src/src/gui/subalbumsWidget.cpp albumshaper_2.1_src-qt4/src/gui/subalbumsWidget.cpp
--- albumshaper_2.1_src/src/gui/subalbumsWidget.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/subalbumsWidget.cpp	2014-06-05 09:42:36.268567812 +0200
@@ -17,6 +17,9 @@
 #include <qapplication.h>
 #include <qtoolbutton.h>
 #include <qtooltip.h>
+//Added by qt3to4:
+#include <Q3GridLayout>
+#include <Q3Frame>
 
 //Projectwide includes
 #include "subalbumsWidget.h"
@@ -51,23 +54,23 @@
   collections = new SubalbumsIconView( this );
 
   //only one item can be selected at a time
-  collections->setSelectionMode( QIconView::Single ) ;
+  collections->setSelectionMode( Q3IconView::Single ) ;
 
   //single column of items
   collections->setGridX(1);
 
   //text is on right of icons
-  collections->setItemTextPos( QIconView::Right );
+  collections->setItemTextPos( Q3IconView::Right );
 
   //disable frame
-  collections->setFrameShape ( QFrame::NoFrame );
+  collections->setFrameShape ( Q3Frame::NoFrame );
 
   collections->setMaxItemWidth(500);
   collections->setPaletteBackgroundColor( QColor(193, 210, 238) );
   collections->setDragAutoScroll(true);
   collections->setAcceptDrops(true);
-  collections->setVScrollBarMode( QScrollView::Auto );
-  collections->setHScrollBarMode( QScrollView::Auto );
+  collections->setVScrollBarMode( Q3ScrollView::Auto );
+  collections->setHScrollBarMode( Q3ScrollView::Auto );
   //--------------------------------------
   //no selection by default
   currentSelection = NULL;
@@ -76,8 +79,8 @@
   connect( collections, SIGNAL(itemHasMoved()), SLOT(reorder()) );
 
   //handle selection attempts
-  connect( collections, SIGNAL(selectionChanged(QIconViewItem*)),
-           this,      SLOT(handleSelectionAttempt(QIconViewItem*)));
+  connect( collections, SIGNAL(selectionChanged(Q3IconViewItem*)),
+           this,      SLOT(handleSelectionAttempt(Q3IconViewItem*)));
   //--------------------------------------
   //create create/delete buttons
   QFont buttonFont( qApp->font() );
@@ -87,7 +90,7 @@
   createButton = new QToolButton( this );
   createButton->setTextLabel(tr("Create"));
   createButton->setIconSet( QPixmap(QString(IMAGE_PATH)+"buttonIcons/create.png") );
-  createButton->setTextPosition(QToolButton::Right);
+  createButton->setTextPosition(QToolButton::BesideIcon);
   createButton->setFont( buttonFont );
   createButton->setUsesTextLabel( true );
   createButton->setEnabled(true);
@@ -98,7 +101,7 @@
   deleteButton = new QToolButton( this );
   deleteButton->setTextLabel(tr("Delete"));
   deleteButton->setIconSet( QPixmap(QString(IMAGE_PATH)+"buttonIcons/delete.png") );
-  deleteButton->setTextPosition(QToolButton::Right);
+  deleteButton->setTextPosition(QToolButton::BesideIcon);
   deleteButton->setFont( buttonFont );
   deleteButton->setUsesTextLabel( true );
   deleteButton->setEnabled(false);
@@ -107,7 +110,7 @@
   connect( deleteButton, SIGNAL(clicked()), SLOT(deleteAction()) );
   //--------------------------------------
   //place label, listbox, and buttons in grid
-  QGridLayout* grid = new QGridLayout( this, 3, 2, 0 );
+  Q3GridLayout* grid = new Q3GridLayout( this, 3, 2, 0 );
   grid->addMultiCellWidget( collectionsHeader, 0, 0, 0, 1, Qt::AlignHCenter );
   grid->addMultiCellWidget( collections, 1, 1, 0, 1 );
   grid->addWidget( createButton, 2, 0, Qt::AlignHCenter);
@@ -155,12 +158,12 @@
     if(proceed)
     {
       //get handle on currently selected collection
-      QIconViewItem* oldSelection = collections->currentItem();
+      Q3IconViewItem* oldSelection = collections->currentItem();
 
       //get handle on the next automatically selected collection
       //auto select the new collection. If there is no next 
       //collection, select the previous collection (again if present)
-      QIconViewItem* newSelection = oldSelection->nextItem();
+      Q3IconViewItem* newSelection = oldSelection->nextItem();
       if(newSelection == NULL) newSelection = oldSelection->prevItem();
 
       //auto select a remaining collection if one exists
@@ -229,7 +232,7 @@
 }
 //==============================================
 LayoutWidget* SubalbumsWidget::getParent() { return layout; }
-QIconViewItem* SubalbumsWidget::getCurrentSelection() { return currentSelection; }
+Q3IconViewItem* SubalbumsWidget::getCurrentSelection() { return currentSelection; }
 //==============================================
 Subalbum* SubalbumsWidget::getSelectedSubalbum()
 { 
@@ -239,10 +242,10 @@
 void SubalbumsWidget::refreshCollectionsList()
 {
   //delete all previous entries
-  QIconViewItem* current = collections->firstItem();
+  Q3IconViewItem* current = collections->firstItem();
   while(current != NULL)
   {
-    QIconViewItem* next = current->nextItem();
+    Q3IconViewItem* next = current->nextItem();
     delete current;
     current = next;
   }
@@ -270,7 +273,7 @@
   selectFirstCollection();
 }
 //==============================================
-void SubalbumsWidget::handleSelectionAttempt( QIconViewItem* item )
+void SubalbumsWidget::handleSelectionAttempt( Q3IconViewItem* item )
 {
   //select collections only when program is not busy.
   if( !layout->getWindow()->getTitle()->getBusy() )
@@ -282,7 +285,7 @@
   selectCollection( collections->firstItem() );
 }
 //==============================================
-void SubalbumsWidget::selectCollection( QIconViewItem* item )
+void SubalbumsWidget::selectCollection( Q3IconViewItem* item )
 {
   //no necessary action when selecting the currently selection collection
   if(currentSelection == item) return;
diff -urN albumshaper_2.1_src/src/gui/subalbumsWidget.h albumshaper_2.1_src-qt4/src/gui/subalbumsWidget.h
--- albumshaper_2.1_src/src/gui/subalbumsWidget.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/subalbumsWidget.h	2014-06-05 09:42:36.478565187 +0200
@@ -1,3 +1,5 @@
+//Added by qt3to4:
+#include <QPixmap>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
@@ -12,7 +14,7 @@
 #define GUI_SUBALBUMSWIDGET_H
 
 //forward declarations
-class QIconViewItem;
+class Q3IconViewItem;
 class QToolButton;
 class LayoutWidget;
 class SubalbumsIconView;
@@ -44,7 +46,7 @@
   void updateButtons(bool enable);
 
   ///Returns current selection
-  QIconViewItem* getCurrentSelection();
+  Q3IconViewItem* getCurrentSelection();
 
   ///Returns the currently selected subalbum
   Subalbum* getSelectedSubalbum();    
@@ -57,13 +59,13 @@
   void selectFirstCollection();
   
   ///select specified collection
-  void selectCollection( QIconViewItem* item );
+  void selectCollection( Q3IconViewItem* item );
 
   ///list of subalbums
   SubalbumsIconView* collections;
   
   //Currently selected item
-  QIconViewItem* currentSelection;
+  Q3IconViewItem* currentSelection;
   
   ///Create collection button
   QToolButton* createButton;
@@ -92,7 +94,7 @@
   void deleteAction();
 
   ///respond to user clicking collection icons
-  void handleSelectionAttempt( QIconViewItem* item);
+  void handleSelectionAttempt( Q3IconViewItem* item);
   
   ///relayout collectionicons after a create/delete refresh
   void reorder();
diff -urN albumshaper_2.1_src/src/gui/subalbumWidget.cpp albumshaper_2.1_src-qt4/src/gui/subalbumWidget.cpp
--- albumshaper_2.1_src/src/gui/subalbumWidget.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/subalbumWidget.cpp	2014-06-05 11:54:39.016519832 +0200
@@ -11,16 +11,19 @@
 //Systemwide includes
 #include <qlayout.h>
 #include <qfont.h>
-#include <qframe.h>
+#include <q3frame.h>
 #include <qpushbutton.h>
 #include <qtoolbutton.h>
 #include <qpixmap.h>
-#include <qfiledialog.h>
+#include <q3filedialog.h>
 #include <qcursor.h>
 #include <qapplication.h>
 #include <qtooltip.h>
 #include <qfileinfo.h>
-#include <qaccel.h>
+#include <q3accel.h>
+//Added by qt3to4:
+#include <QResizeEvent>
+#include <Q3GridLayout>
 
 //Projectwide includes
 #include "window.h"
@@ -51,7 +54,7 @@
                                const char* name ) :
                                QWidget(parent,name)
 {
-  setWFlags(WNoAutoErase);
+  setWindowFlags(Qt::WNoAutoErase);
 
   //store subalbum pointer
   subalbum = salbum;
@@ -63,11 +66,11 @@
   photos = new PhotosIconView( this );
 
   //establish a top-down view such that the scrollbar is always placed on the right
-  photos->setArrangement( QIconView::LeftToRight );
-  photos->setVScrollBarMode( QScrollView::Auto );
+  photos->setArrangement( Q3IconView::LeftToRight );
+  photos->setVScrollBarMode( Q3ScrollView::Auto );
 
   //allow multiple photos to be selected with control and shift keys
-  photos->setSelectionMode( QIconView::Extended ) ;
+  photos->setSelectionMode( Q3IconView::Extended ) ;
 
   //set auto-scroll on for drag-n-drop
   photos->setDragAutoScroll(true);
@@ -78,7 +81,7 @@
            this, SLOT( selectionChangedEvent()) );
 
   //connect rightButtonClicked signal to update buttons method
-  connect( photos, SIGNAL(rightButtonClicked(QIconViewItem*, const QPoint&)),
+  connect( photos, SIGNAL(rightButtonClicked(Q3IconViewItem*, const QPoint&)),
            this, SLOT(selectionChangedEvent()) );
   
   //connect itemhasMoved signal on iconview to reorder slot (phots have been rearranged)
@@ -96,11 +99,11 @@
   connect( photos, SIGNAL(editSelectedPhoto()), 
            layout, SLOT(editSelectedPhoto()) );
   //connect double click signal to edit slot
-  connect( photos, SIGNAL( doubleClicked(QIconViewItem*) ), 
+  connect( photos, SIGNAL( doubleClicked(Q3IconViewItem*) ), 
            layout, SLOT(editSelectedPhoto()) );
 
   //create all buttons
-  buttonsFrame = new QFrame(this);
+  buttonsFrame = new Q3Frame(this);
   if(subalbum == NULL) buttonsFrame->hide();
 
   QFont buttonFont( qApp->font() );
@@ -110,7 +113,7 @@
   addImage = new QToolButton( buttonsFrame );
   addImage->setTextLabel(tr("Add Photo"));
   addImage->setIconSet( QPixmap(QString(IMAGE_PATH)+"buttonIcons/add.png") );
-  addImage->setTextPosition(QToolButton::Right);
+  addImage->setTextPosition(QToolButton::BesideIcon);
   addImage->setFont( buttonFont );
   addImage->setUsesTextLabel( true );
   addImage->setEnabled( true );
@@ -120,7 +123,7 @@
   removeImage = new QToolButton( buttonsFrame );
   removeImage->setTextLabel(tr("Remove Photo"));
   removeImage->setIconSet( QPixmap(QString(IMAGE_PATH)+"buttonIcons/remove.png") );
-  removeImage->setTextPosition(QToolButton::Right);
+  removeImage->setTextPosition(QToolButton::BesideIcon);
   removeImage->setFont( buttonFont );
   removeImage->setUsesTextLabel( true );
   removeImage->setEnabled( true );
@@ -129,16 +132,16 @@
 
   rotate90Image = new QToolButton( buttonsFrame );
   rotate90Image->setTextLabel(tr("Rotate Right") );
-  QIconSet rotate90Icon;
+  QIcon rotate90Icon;
   rotate90Icon.setPixmap( QString(IMAGE_PATH)+"buttonIcons/rotate90.png",
-                      QIconSet::Automatic,
-                      QIconSet::Normal );
+                      QIcon::Automatic,
+                      QIcon::Normal );
   rotate90Icon.setPixmap( QString(IMAGE_PATH)+"buttonIcons/rotate90_disabled.png",
-                      QIconSet::Automatic,
-                      QIconSet::Disabled );
+                      QIcon::Automatic,
+                      QIcon::Disabled );
   rotate90Image->setIconSet( rotate90Icon );
   
-  rotate90Image->setTextPosition(QToolButton::Right);
+  rotate90Image->setTextPosition(QToolButton::BesideIcon);
   rotate90Image->setFont( buttonFont );
   rotate90Image->setUsesTextLabel( true );
   QToolTip::add( rotate90Image, tr("Rotate selected photos clockwise") );
@@ -146,23 +149,23 @@
 
   rotate270Image = new QToolButton( buttonsFrame );
   rotate270Image->setTextLabel(tr("Rotate Left") );
-  QIconSet rotate270Icon;
+  QIcon rotate270Icon;
   rotate270Icon.setPixmap( QString(IMAGE_PATH)+"buttonIcons/rotate270.png",
-                          QIconSet::Automatic,
-                          QIconSet::Normal );
+                          QIcon::Automatic,
+                          QIcon::Normal );
   rotate270Icon.setPixmap( QString(IMAGE_PATH)+"buttonIcons/rotate270_disabled.png",
-                          QIconSet::Automatic,
-                          QIconSet::Disabled );
+                          QIcon::Automatic,
+                          QIcon::Disabled );
   rotate270Image->setIconSet( rotate270Icon );
 
-  rotate270Image->setTextPosition(QToolButton::Right);
+  rotate270Image->setTextPosition(QToolButton::BesideIcon);
   rotate270Image->setFont( buttonFont );
   rotate270Image->setUsesTextLabel( true );
   QToolTip::add( rotate270Image, tr("Rotate selected photos counterclockwise") );
   connect( rotate270Image, SIGNAL(clicked()), SLOT(rotate270ImageAction()) );
 
   //place all items in grid layout
-  buttonsGrid = new QGridLayout( buttonsFrame,             1, 7, 0 );
+  buttonsGrid = new Q3GridLayout( buttonsFrame,             1, 7, 0 );
   buttonsGrid->addWidget( addImage,                   0, 1, Qt::AlignLeft );
   buttonsGrid->addWidget( removeImage,                0, 2, Qt::AlignLeft );
   buttonsGrid->addWidget( rotate90Image,              0, 3, Qt::AlignLeft );
@@ -176,16 +179,16 @@
     setDesktopBtn = new QToolButton( buttonsFrame );
     setDesktopBtn->setUsesTextLabel( true );
     setDesktopBtn->setTextLabel(tr("Wallpaper") );
-    QIconSet setDesktopIcon;
+    QIcon setDesktopIcon;
     setDesktopIcon.setPixmap( QString(IMAGE_PATH)+"buttonIcons/setDesktopWallpaper.png",
-                            QIconSet::Automatic,
-                            QIconSet::Normal );
+                            QIcon::Automatic,
+                            QIcon::Normal );
     setDesktopIcon.setPixmap( QString(IMAGE_PATH)+"buttonIcons/setDesktopWallpaper_disabled.png",
-                            QIconSet::Automatic,
-                            QIconSet::Disabled );
+                            QIcon::Automatic,
+                            QIcon::Disabled );
     setDesktopBtn->setIconSet( setDesktopIcon );
     
-    setDesktopBtn->setTextPosition(QToolButton::Right);
+    setDesktopBtn->setTextPosition(QToolButton::BesideIcon);
     setDesktopBtn->setFont( buttonFont );
     setDesktopBtn->setUsesTextLabel( true );
     
@@ -196,7 +199,7 @@
   else
   { setDesktopBtn = NULL; }
 
-  mainGrid = new QGridLayout( this, 2, 1, 0 );
+  mainGrid = new Q3GridLayout( this, 2, 1, 0 );
   mainGrid->addMultiCellWidget( photos, 0, 0, 0, 1 );
   mainGrid->addMultiCellWidget( buttonsFrame, 1, 1, 0, 1 );
   mainGrid->setRowStretch( 0, 1 );
@@ -211,8 +214,8 @@
    
   //hook-up keyboard shortcut for deselecting all photos
   //iconview provides select all shortcut for us
-  QAccel *keyAccel = new QAccel( this );
-  keyAccel->connectItem( keyAccel->insertItem( CTRL + SHIFT + Key_A ),
+  Q3Accel *keyAccel = new Q3Accel( this );
+  keyAccel->connectItem( keyAccel->insertItem( Qt::CTRL + Qt::SHIFT + Qt::Key_A ),
                          this, SLOT(deselectAll()) );
 }
 //==============================================
@@ -270,7 +273,7 @@
   layout->getWindow()->getTitle()->setBusy(true);
   layout->getSubalbums()->updateButtons(false);
   updateButtons(false);
-  photos->setSelectionMode( QIconView::NoSelection ) ;
+  photos->setSelectionMode( Q3IconView::NoSelection ) ;
 
   qApp->setOverrideCursor( QCursor(Qt::WaitCursor));
   
@@ -309,7 +312,7 @@
   layout->getWindow()->getTitle()->setBusy(false);
   layout->getSubalbums()->updateButtons(true);
   updateButtons(true);
-  photos->setSelectionMode( QIconView::Extended ) ;
+  photos->setSelectionMode( Q3IconView::Extended ) ;
  
   qApp->restoreOverrideCursor();
 }
@@ -320,7 +323,7 @@
   layout->getWindow()->getTitle()->setBusy(true);
   layout->getSubalbums()->updateButtons(false);
   updateButtons(false);
-  photos->setSelectionMode( QIconView::NoSelection ) ;
+  photos->setSelectionMode( Q3IconView::NoSelection ) ;
 
   //if user has chosen to not receive destructive action warnings, or agrees to the action, then
   //delete photo and refresh view
@@ -337,8 +340,8 @@
   {
     qApp->setOverrideCursor( QCursor(Qt::WaitCursor));
     //iterate through all photos and remove those that are selected
-    QIconViewItem* current = photos->firstItem();
-    QIconViewItem* temp;
+    Q3IconViewItem* current = photos->firstItem();
+    Q3IconViewItem* temp;
 
     while(current != NULL)
     {
@@ -373,7 +376,7 @@
   layout->getWindow()->getTitle()->setBusy(false);
   layout->getSubalbums()->updateButtons(true);
   updateButtons(true);
-  photos->setSelectionMode( QIconView::Extended ) ;
+  photos->setSelectionMode( Q3IconView::Extended ) ;
 
   //update buttons and emit selection changed signal
   selectionChangedEvent();
@@ -382,7 +385,7 @@
 void SubalbumWidget::revertSelectedPhotos()
 {
   //iterate over photos in current collection
-  QIconViewItem* current = photos->firstItem();
+  Q3IconViewItem* current = photos->firstItem();
   while(current != NULL)
   {
     //found a selected item!
@@ -418,7 +421,7 @@
   qApp->setOverrideCursor( QCursor(Qt::WaitCursor));
   layout->getWindow()->getTitle()->setBusy(true);
   layout->getSubalbums()->updateButtons(false);
-  photos->setSelectionMode( QIconView::NoSelection ) ;
+  photos->setSelectionMode( Q3IconView::NoSelection ) ;
   updateButtons(false);
 
   //setup progress bar
@@ -428,7 +431,7 @@
    
   //rotate the selected photos
   int num = 0;
-  QIconViewItem* current = photos->firstItem();
+  Q3IconViewItem* current = photos->firstItem();
   while(current != NULL)
   {
     if(current->isSelected())
@@ -458,7 +461,7 @@
   layout->getWindow()->getTitle()->setBusy(false);
   layout->getSubalbums()->updateButtons(true);
   updateButtons(true);
-  photos->setSelectionMode( QIconView::Extended ) ;
+  photos->setSelectionMode( Q3IconView::Extended ) ;
   
   qApp->restoreOverrideCursor();
 }
@@ -469,7 +472,7 @@
   qApp->setOverrideCursor( QCursor(Qt::WaitCursor));
   layout->getWindow()->getTitle()->setBusy(true);
   layout->getSubalbums()->updateButtons(false);
-  photos->setSelectionMode( QIconView::NoSelection ) ;
+  photos->setSelectionMode( Q3IconView::NoSelection ) ;
   updateButtons(false);
 
   //setup progress bar
@@ -479,7 +482,7 @@
 
   //rotate the selected photos
   int num = 0;
-  QIconViewItem* current = photos->firstItem();
+  Q3IconViewItem* current = photos->firstItem();
   while(current != NULL)
   {
     if(current->isSelected())
@@ -509,7 +512,7 @@
   layout->getWindow()->getTitle()->setBusy(false);
   layout->getSubalbums()->updateButtons(true);
   updateButtons(true);
-  photos->setSelectionMode( QIconView::Extended ) ;
+  photos->setSelectionMode( Q3IconView::Extended ) ;
   qApp->restoreOverrideCursor();
 }
 //==============================================
@@ -534,7 +537,7 @@
 //==============================================
 void SubalbumWidget::refreshAllPhotos()
 {
-  QIconViewItem* current = photos->firstItem();
+  Q3IconViewItem* current = photos->firstItem();
   while(current != NULL)
   {
     ((PhotoPreviewWidget*)current)->updateImage();
@@ -545,7 +548,7 @@
 //==============================================
 void SubalbumWidget::refreshSelectedPhotos()
 {
-  QIconViewItem* current = photos->firstItem();
+  Q3IconViewItem* current = photos->firstItem();
   while(current != NULL)
   {
     //found a selected item!
@@ -562,7 +565,7 @@
 //==============================================
 void SubalbumWidget::stripDescriptionsFromSelectedPhotos()
 {
-  QIconViewItem* current = photos->firstItem();
+  Q3IconViewItem* current = photos->firstItem();
   while(current != NULL)
   {
     //found a selected item!
@@ -586,8 +589,8 @@
 {
   //determine if one photo is selected
   int numSelected = 0;
-  QIconViewItem* current = photos->firstItem();
-  QIconViewItem* selected = NULL;
+  Q3IconViewItem* current = photos->firstItem();
+  Q3IconViewItem* selected = NULL;
   while(current != NULL)
   {
     //found a selected item!
@@ -612,7 +615,7 @@
 Photo* SubalbumWidget::getFirstSelectedPhoto()
 {
   //determine if one photo is selected
-  QIconViewItem* current = photos->firstItem();
+  Q3IconViewItem* current = photos->firstItem();
   while(current != NULL)
   {
     //found a selected item!
@@ -630,7 +633,7 @@
 void SubalbumWidget::setSelectedPhoto(Photo* selection)
 {
   //select specified photo  
-  QIconViewItem* current = photos->firstItem();
+  Q3IconViewItem* current = photos->firstItem();
   while(current != NULL)
   {
     if( ((PhotoPreviewWidget*)current)->getPhoto() == selection )
@@ -652,7 +655,7 @@
 //==============================================
 bool SubalbumWidget::anyPhotosSelected()
 {
-  QIconViewItem* current = photos->firstItem();
+  Q3IconViewItem* current = photos->firstItem();
   while(current != NULL)
   {
     if(current->isSelected())
@@ -664,7 +667,7 @@
 //==============================================
 bool SubalbumWidget::anySelectedPhotosRevertable()
 {
-  QIconViewItem* current = photos->firstItem();
+  Q3IconViewItem* current = photos->firstItem();
   while(current != NULL)
   {
     if(current->isSelected())
@@ -682,7 +685,7 @@
   photos->arrangeItemsInGrid();
 }
 //==============================================
-QIconView* SubalbumWidget::getPhotos()
+Q3IconView* SubalbumWidget::getPhotos()
 {
   return photos;
 }
@@ -709,7 +712,7 @@
 void SubalbumWidget::updateButtons()
 {
   int numSelected = 0;
-  QIconViewItem* current = photos->firstItem();
+  Q3IconViewItem* current = photos->firstItem();
   while(current != NULL)
   {
     if(current->isSelected())
diff -urN albumshaper_2.1_src/src/gui/subalbumWidget.h albumshaper_2.1_src-qt4/src/gui/subalbumWidget.h
--- albumshaper_2.1_src/src/gui/subalbumWidget.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/subalbumWidget.h	2014-06-05 09:42:36.480565162 +0200
@@ -1,3 +1,8 @@
+//Added by qt3to4:
+#include <QPixmap>
+#include <QResizeEvent>
+#include <Q3GridLayout>
+#include <Q3Frame>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
@@ -13,17 +18,17 @@
 
 //--------------------
 //forward declarations
-class QGridLayout;
+class Q3GridLayout;
 class QPixmap;
-class QIconView;
+class Q3IconView;
 class PhotosIconView;
 class QToolButton;
-class QFrame;
+class Q3Frame;
 class Subalbum;
 class LayoutWidget;
 class Photo;
 
-class QIconViewItem;
+class Q3IconViewItem;
 //--------------------
 
 #include <qwidget.h>
@@ -74,7 +79,7 @@
   bool anySelectedPhotosRevertable();
   
   ///Returns pointer to icon view
-  QIconView* getPhotos();
+  Q3IconView* getPhotos();
 
   ///Activates/Deactives remove/rotate buttons
   void updateButtons(bool enable);
@@ -123,12 +128,12 @@
   //----------------------
 private:
   ///Grids widgets are placed in
-  QGridLayout* mainGrid;
-  QGridLayout* buttonsGrid;
+  Q3GridLayout* mainGrid;
+  Q3GridLayout* buttonsGrid;
 
   ///Grid lower buttons are placed in
-  QFrame* thumbnailFrame;
-  QFrame* buttonsFrame;
+  Q3Frame* thumbnailFrame;
+  Q3Frame* buttonsFrame;
 
   ///Photos layout
   PhotosIconView* photos;
diff -urN albumshaper_2.1_src/src/gui/titleWidget.cpp albumshaper_2.1_src-qt4/src/gui/titleWidget.cpp
--- albumshaper_2.1_src/src/gui/titleWidget.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/titleWidget.cpp	2014-06-05 11:56:11.248366776 +0200
@@ -11,7 +11,7 @@
 //Systemwide includes
 #include <qwidget.h>
 #include <qmenubar.h>
-#include <qpopupmenu.h>
+#include <q3popupmenu.h>
 #include <qlayout.h>
 #include <qlabel.h>
 #include <qfont.h>
@@ -24,10 +24,16 @@
 #include <qapplication.h>
 #include <qdir.h>
 #include <qcursor.h>
-#include <qfiledialog.h>
+#include <q3filedialog.h>
 #include <qtooltip.h>
-#include <qiconset.h>
+#include <qicon.h>
 #include <qdatetime.h>
+//Added by qt3to4:
+#include <Q3GridLayout>
+#include <Q3Frame>
+#include <QDragEnterEvent>
+#include <QDropEvent>
+#include <Q3VBoxLayout>
 
 #include <math.h>
 
@@ -60,7 +66,7 @@
 
 //==============================================
 TitleWidget::TitleWidget(QWidget *parent,
-                                 const char* name ) : QFrame(parent,name)
+                                 const char* name ) : Q3Frame(parent,name)
 {
   tmpDirErrorMessage = tr("Error! Unable to create temp directory!");
   tmpDirErrorDesc = tr("Album Shaper was unable to create the necessary temp directory required: ");
@@ -117,32 +123,32 @@
   menu = new QMenuBar( this, "menuBar" );
   //---
   //File menu
-  file = new QPopupMenu( this, "fileMenu" );
-  NEW_ALBUM = file->insertItem( QIconSet( QPixmap(QString(IMAGE_PATH)+"menuIcons/new.png") ),
-                                tr("&New"), this, SLOT(newAlbum()), CTRL+Key_N );
+  file = new Q3PopupMenu( this, "fileMenu" );
+  NEW_ALBUM = file->insertItem( QIcon( QPixmap(QString(IMAGE_PATH)+"menuIcons/new.png") ),
+                                tr("&New"), this, SLOT(newAlbum()), Qt::CTRL+Qt::Key_N );
 
-  OPEN_ALBUM = file->insertItem( QIconSet( QPixmap(QString(IMAGE_PATH)+"menuIcons/open.png") ),
-                                 tr("&Open..."), this, SLOT(loadAlbum()), CTRL+Key_O );
+  OPEN_ALBUM = file->insertItem( QIcon( QPixmap(QString(IMAGE_PATH)+"menuIcons/open.png") ),
+                                 tr("&Open..."), this, SLOT(loadAlbum()), Qt::CTRL+Qt::Key_O );
 
-  openRecent = new QPopupMenu( this, "openRecentMenu" );
+  openRecent = new Q3PopupMenu( this, "openRecentMenu" );
   populateOpenRecentMenu();
   refreshOpenRecentMenu();
   file->insertItem( tr("Open Recent"), openRecent );
   //----------------------
   file->insertSeparator();
   //----------------------  
-  SAVE_ALBUM = file->insertItem( QIconSet( QPixmap(QString(IMAGE_PATH)+"menuIcons/save.png") ),
-                                 tr("&Save"), this, SLOT(saveAlbum()), CTRL+Key_S );
+  SAVE_ALBUM = file->insertItem( QIcon( QPixmap(QString(IMAGE_PATH)+"menuIcons/save.png") ),
+                                 tr("&Save"), this, SLOT(saveAlbum()), Qt::CTRL+Qt::Key_S );
 
-  SAVEAS_ALBUM = file->insertItem( QIconSet( QPixmap(QString(IMAGE_PATH)+"menuIcons/saveas.png") ),
-                                   tr("&Save As..."), this, SLOT(saveAsAlbum()), CTRL+SHIFT+Key_S );
+  SAVEAS_ALBUM = file->insertItem( QIcon( QPixmap(QString(IMAGE_PATH)+"menuIcons/saveas.png") ),
+                                   tr("&Save As..."), this, SLOT(saveAsAlbum()), Qt::CTRL+Qt::SHIFT+Qt::Key_S );
 
   REVERT_TO_SAVED_ALBUM = file->insertItem( tr("Revert to Saved"), this, SLOT(revertToSaved()) );
   file->setItemEnabled( REVERT_TO_SAVED_ALBUM, false );  
   //----------------------
   file->insertSeparator();
   //----------------------
-  QPopupMenu* exportAs = new QPopupMenu( this, "exportAs" );
+  Q3PopupMenu* exportAs = new Q3PopupMenu( this, "exportAs" );
   EXPORT_SMALL_WEB_GALLERY = exportAs->insertItem( tr("Small Web Gallery..."), 
                                                    this, SLOT(exportSmallWebGallery()) );
   EXPORT_LARGE_IMAGES = exportAs->insertItem( tr("Images for Printing..."), 
@@ -152,14 +158,14 @@
   //----------------------  
   file->insertSeparator();
   //----------------------
-  file->insertItem( QIconSet( QPixmap(QString(IMAGE_PATH)+"menuIcons/quit.png") ),
-                    tr("&Quit"), this, SLOT(quitApplication()), CTRL+Key_Q);
+  file->insertItem( QIcon( QPixmap(QString(IMAGE_PATH)+"menuIcons/quit.png") ),
+                    tr("&Quit"), this, SLOT(quitApplication()), Qt::CTRL+Qt::Key_Q);
 
   
   menu->insertItem( tr("&File"), file );
   //---
   //Photo menu
-  photoMenu = new QPopupMenu( this, "phooMenu" );
+  photoMenu = new Q3PopupMenu( this, "phooMenu" );
     
   REMOVE_DESCRIPTIONS = photoMenu->insertItem( tr("Remove Description"), this, SLOT(removeSelectedPhotoDesc()) );
   REVERT_PHOTOS = photoMenu->insertItem( tr("Revert to Original"), this, SLOT(revertPhotos()) );
@@ -167,7 +173,7 @@
   menu->insertItem( tr("&Photos"), photoMenu );
   //---
   //Tools menu
-  tools = new QPopupMenu( this, "toolsMenu" );
+  tools = new Q3PopupMenu( this, "toolsMenu" );
 /*
   BEGIN_PRESENTATION_AT = tools->insertItem( QIconSet( QPixmap(QString(IMAGE_PATH)+"menuIcons/startPresentation.png") ),
                                           tr("Begin Presentation"), 
@@ -177,10 +183,10 @@
   updateMenus();
  */
 
-  tools->insertItem( QIconSet( QPixmap(QString(IMAGE_PATH)+"menuIcons/albumStatistics.png") ),
-                     tr("Album Statistics"), this, SLOT(albumStatistics()), CTRL+Key_I );
+  tools->insertItem( QIcon( QPixmap(QString(IMAGE_PATH)+"menuIcons/albumStatistics.png") ),
+                     tr("Album Statistics"), this, SLOT(albumStatistics()), Qt::CTRL+Qt::Key_I );
 
-  tools->insertItem( QIconSet( QPixmap(QString(IMAGE_PATH)+"menuIcons/settings.png") ),
+  tools->insertItem( QIcon( QPixmap(QString(IMAGE_PATH)+"menuIcons/settings.png") ),
                      tr("Settings"), this, SLOT(settings()) );
 
   menu->insertItem( tr("&Tools"), tools );
@@ -188,33 +194,33 @@
   //PLATFORM_SPECIFIC_CODE
   //Window menu
   #if defined(Q_OS_MACX)
-  windowMenu = new QPopupMenu( this, "windoMenu" );
-  WINDOW_MINIMIZE = windowMenu->insertItem( tr("&Minimize"), (QWidget*)window, SLOT(showMinimized()), CTRL+Key_M );
+  windowMenu = new Q3PopupMenu( this, "windoMenu" );
+  WINDOW_MINIMIZE = windowMenu->insertItem( tr("&Minimize"), (QWidget*)window, SLOT(showMinimized()), Qt::CTRL+Qt::Key_M );
   menu->insertItem( tr("&Window"), windowMenu );
   #endif
   //---    
   //Help menu
-  helpMenu = new QPopupMenu( this, "helpMenu" );
-  helpMenu->insertItem( tr("Album Shaper Help"), this, SLOT(help()), CTRL+Key_Question );
+  helpMenu = new Q3PopupMenu( this, "helpMenu" );
+  helpMenu->insertItem( tr("Album Shaper Help"), this, SLOT(help()), Qt::CTRL+Qt::Key_Question );
 
-  helpMenu->insertItem( QIconSet( QPixmap(QString(IMAGE_PATH)+"menuIcons/about.png") ),
+  helpMenu->insertItem( QIcon( QPixmap(QString(IMAGE_PATH)+"menuIcons/about.png") ),
                     tr("About"), this, SLOT(aboutProgram()) );
   menu->insertSeparator();
   menu->insertItem( tr("&Help"), helpMenu );
   //--------------------------------------------------------------
   //create all widgets
-  mainFrame = new QFrame( this, "mainFrame" );
+  mainFrame = new Q3Frame( this, "mainFrame" );
   mainFrame->setPaletteBackgroundColor( darkBlue );
   //------
   //album annotations
-  albumAnnotationFrame = new QFrame( mainFrame, "albumAnnotationFrame" );
+  albumAnnotationFrame = new Q3Frame( mainFrame, "albumAnnotationFrame" );
   albumAnnotationFrame->setLineWidth(2);
   albumAnnotationFrame->setMidLineWidth(0);
-  albumAnnotationFrame->setFrameStyle( QFrame::Panel | QFrame::Plain );
+  albumAnnotationFrame->setFrameStyle( Q3Frame::Panel | Q3Frame::Plain );
   albumAnnotationFrame->setPaletteForegroundColor( white );
   albumAnnotationFrame->setPaletteBackgroundColor( darkBlue );
 
-  QFrame* albumImageFrame = new QFrame( albumAnnotationFrame, "albumImageFrame" );
+  Q3Frame* albumImageFrame = new Q3Frame( albumAnnotationFrame, "albumImageFrame" );
   albumImage = new ALabel( albumImageFrame, "albumImage",
                                                new QPixmap( QString(IMAGE_PATH)+"buttonIcons/removeImage.png") );
   connect( albumImage, SIGNAL(mouseRelease()),
@@ -239,14 +245,14 @@
            SLOT( storeAnnotations()) );
   //------
   //subalbum annotations
-  subalbumAnnotationFrame = new QFrame( mainFrame, "subalbumAnnotationFrame" );
+  subalbumAnnotationFrame = new Q3Frame( mainFrame, "subalbumAnnotationFrame" );
   subalbumAnnotationFrame->setLineWidth(2);
   subalbumAnnotationFrame->setMidLineWidth(0);
-  subalbumAnnotationFrame->setFrameStyle( QFrame::Panel | QFrame::Plain );
+  subalbumAnnotationFrame->setFrameStyle( Q3Frame::Panel | Q3Frame::Plain );
   subalbumAnnotationFrame->setPaletteForegroundColor( white );
   subalbumAnnotationFrame->setPaletteBackgroundColor( darkBlue );
 
-  QFrame* subalbumImageFrame = new QFrame( subalbumAnnotationFrame, "subalbumImageFrame" );
+  Q3Frame* subalbumImageFrame = new Q3Frame( subalbumAnnotationFrame, "subalbumImageFrame" );
   subalbumImage = new ALabel( subalbumImageFrame, "subalbumImage",
                                                     new QPixmap( QString(IMAGE_PATH)+"buttonIcons/removeImage.png") );
 
@@ -274,7 +280,7 @@
   albumNameVal->setFont( labelFont );
   albumNameVal->setPaletteForegroundColor( black );
   albumNameVal->setPaletteBackgroundColor( lightBlue );
-  albumNameVal->setFrameShape ( QFrame::NoFrame );
+  albumNameVal->setFrame ( false );
 
   albumDescription->setFont( labelFont );
   albumDescription->setPaletteForegroundColor( white );
@@ -283,7 +289,7 @@
   albumDescriptionVal->setFont( labelFont );
   albumDescriptionVal->setPaletteForegroundColor( black );
   albumDescriptionVal->setPaletteBackgroundColor( lightBlue );
-  albumDescriptionVal->setFrameShape ( QFrame::NoFrame );
+  albumDescriptionVal->setFrame ( false );
 
   albumAuthor->setFont( labelFont );
   albumAuthor->setPaletteForegroundColor( white );
@@ -292,7 +298,7 @@
   albumAuthorVal->setFont( labelFont );
   albumAuthorVal->setPaletteForegroundColor( black );
   albumAuthorVal->setPaletteBackgroundColor( lightBlue );
-  albumAuthorVal->setFrameShape ( QFrame::NoFrame );
+  albumAuthorVal->setFrame ( false );
 
   subalbumName->setFont( labelFont );
   subalbumName->setPaletteForegroundColor( white );
@@ -301,7 +307,7 @@
   subalbumNameVal->setFont( labelFont );
   subalbumNameVal->setPaletteForegroundColor( black );
   subalbumNameVal->setPaletteBackgroundColor( lightBlue );
-  subalbumNameVal->setFrameShape ( QFrame::NoFrame );
+  subalbumNameVal->setFrame ( false );
 
   subalbumDescription->setFont( labelFont );
   subalbumDescription->setPaletteForegroundColor( white );
@@ -310,16 +316,16 @@
   subalbumDescriptionVal->setFont( labelFont );
   subalbumDescriptionVal->setPaletteForegroundColor( black );
   subalbumDescriptionVal->setPaletteBackgroundColor( lightBlue );
-  subalbumDescriptionVal->setFrameShape ( QFrame::NoFrame );
+  subalbumDescriptionVal->setFrame ( false );
   //--------------------------------------------------------------
   //place widgets in grids
   //------------------------
   //album annotations
-  QGridLayout* albumImageGrid = new QGridLayout( albumImageFrame, 1, 1 );
+  Q3GridLayout* albumImageGrid = new Q3GridLayout( albumImageFrame, 1, 1 );
   albumImageGrid->addWidget( albumImage, 0, 0 );
   albumImageGrid->setRowSpacing( 0, REP_IMAGE_HEIGHT );
 
-  albumAnnotationGrid =      new QGridLayout( albumAnnotationFrame, 3, 3);
+  albumAnnotationGrid =      new Q3GridLayout( albumAnnotationFrame, 3, 3);
   albumAnnotationGrid->setMargin(WIDGET_SPACING);
   albumAnnotationGrid->setSpacing(WIDGET_SPACING);
 
@@ -335,11 +341,11 @@
   albumAnnotationGrid->addWidget( albumAuthorVal, 2, 2);
   //------------------------
   //subalbum annotations
-  QGridLayout* subalbumImageGrid = new QGridLayout( subalbumImageFrame, 1, 1 );
+  Q3GridLayout* subalbumImageGrid = new Q3GridLayout( subalbumImageFrame, 1, 1 );
   subalbumImageGrid->addWidget( subalbumImage, 0, 0 );
   subalbumImageGrid->setRowSpacing( 0, REP_IMAGE_HEIGHT );
 
-  subalbumAnnotationGrid = new QGridLayout( subalbumAnnotationFrame, 5, 5);
+  subalbumAnnotationGrid = new Q3GridLayout( subalbumAnnotationFrame, 5, 5);
   subalbumAnnotationGrid->setMargin(WIDGET_SPACING);
   subalbumAnnotationGrid->setSpacing(WIDGET_SPACING);
 
@@ -354,7 +360,7 @@
   subalbumAnnotationGrid->addWidget( subalbumDescriptionVal, 1, 2);
   //------------------------
   //place menu and album and subalbum annotations into main grid
-  mainGrid =                       new QGridLayout( mainFrame, 1, 2);
+  mainGrid =                       new Q3GridLayout( mainFrame, 1, 2);
   mainGrid->setMargin(WIDGET_SPACING);
   mainGrid->setSpacing(WIDGET_SPACING);
 
@@ -364,7 +370,7 @@
   mainGrid->addWidget          ( subalbumAnnotationFrame, 0, 1);
   mainGrid->setColStretch(1, 1);
 
-  QVBoxLayout* vb = new QVBoxLayout(this);
+  Q3VBoxLayout* vb = new Q3VBoxLayout(this);
   this->layout()->setMenuBar( menu );
   vb->addWidget(mainFrame);
   //-----------------------------------------------
@@ -632,7 +638,7 @@
     path = window->getConfig()->getString( "loadSave", "loadSaveDir" );
   }
   
-  QString albumXML = QFileDialog::getOpenFileName( path,
+  QString albumXML = Q3FileDialog::getOpenFileName( path,
                                                    tr("XML Files (*.xml)"),
                                                    this,
                                                    "open file dialog",
@@ -722,9 +728,9 @@
   newDir = fixFilename( newDir );
   
   //get filename from user
-  QFileDialog* fd = new QFileDialog( this, "file dialog", TRUE );
+  Q3FileDialog* fd = new Q3FileDialog( this, "file dialog", TRUE );
   fd->setCaption( tr("Export Location") );
-  fd->setMode( QFileDialog::DirectoryOnly );
+  fd->setMode( Q3FileDialog::DirectoryOnly );
   fd->setDir( window->getConfig()->getString( "loadSave", "loadSaveDir" ) );
   
   //user canceled operation
@@ -811,9 +817,9 @@
   newDir = fixFilename( newDir );
   
   //get filename from user
-  QFileDialog* fd = new QFileDialog( this, "file dialog", TRUE );
+  Q3FileDialog* fd = new Q3FileDialog( this, "file dialog", TRUE );
   fd->setCaption( tr("Export Location") );
-  fd->setMode( QFileDialog::DirectoryOnly );
+  fd->setMode( Q3FileDialog::DirectoryOnly );
   fd->setDir( window->getConfig()->getString( "loadSave", "loadSaveDir" ) );
   
   //user canceled operation
@@ -1376,17 +1382,17 @@
   int i;
   for(i = 0; i<maxItems; i++)
   {
-    Key key;
-    if(i == 0) key = Key_1;
-    else if(i == 1) key = Key_2;
-    else if(i == 2) key = Key_3;
-    else if(i == 3) key = Key_4;
-    else if(i == 4) key = Key_5;
-    else if(i == 5) key = Key_6;
-    else if(i == 6) key = Key_7;
-    else if(i == 7) key = Key_8;
-    else if(i == 8) key = Key_9;
-    else key = Key_unknown;
+    Qt::Key key;
+    if(i == 0) key = Qt::Key_1;
+    else if(i == 1) key = Qt::Key_2;
+    else if(i == 2) key = Qt::Key_3;
+    else if(i == 3) key = Qt::Key_4;
+    else if(i == 4) key = Qt::Key_5;
+    else if(i == 5) key = Qt::Key_6;
+    else if(i == 6) key = Qt::Key_7;
+    else if(i == 7) key = Qt::Key_8;
+    else if(i == 8) key = Qt::Key_9;
+    else key = Qt::Key_unknown;
     
     //get album name + location
     QString recentName = "recentName";
@@ -1409,9 +1415,9 @@
 #endif   
     //----------------------------------------------         
     //Set accelerator key sequence if valid    
-    if( key != Key_unknown )
+    if( key != Qt::Key_unknown )
     {
-      openRecent->setAccel( CTRL+key, recentMenuItems[i] ); 
+      openRecent->setAccel( Qt::CTRL+key, recentMenuItems[i] ); 
       openRecent->setItemParameter( recentMenuItems[i], i );
     }
 
@@ -1475,7 +1481,7 @@
         scaledAlbumImagePixmap.convertFromImage( scaledAlbumImage );
         
         openRecent->changeItem( recentMenuItems[i],
-                                QIconSet( scaledAlbumImagePixmap ),
+                                QIcon( scaledAlbumImagePixmap ),
                                 QString("%1%2").arg(recentName).arg(recentPhotoCount) );
       }      
       //otherwise simply display the album name and number of phots (if available)
@@ -1483,7 +1489,7 @@
       {
         //using just text
         openRecent->changeItem( recentMenuItems[i],
-                                QIconSet(NULL),
+                                QIcon(NULL),
                                 QString("%1%2").arg(recentName).arg(recentPhotoCount) );
       }
       //----------------------------------------------    
diff -urN albumshaper_2.1_src/src/gui/titleWidget.h albumshaper_2.1_src-qt4/src/gui/titleWidget.h
--- albumshaper_2.1_src/src/gui/titleWidget.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/titleWidget.h	2014-06-05 09:42:36.483565124 +0200
@@ -1,3 +1,10 @@
+//Added by qt3to4:
+#include <QDropEvent>
+#include <Q3GridLayout>
+#include <QPixmap>
+#include <QLabel>
+#include <Q3PopupMenu>
+#include <QDragEnterEvent>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
@@ -14,8 +21,8 @@
 //--------------------
 //forward declarations
 class QMenuBar;
-class QPopupMenu;
-class QGridLayout;
+class Q3PopupMenu;
+class Q3GridLayout;
 class QLabel;
 class QLineEdit;
 class QPixmap;
@@ -29,7 +36,7 @@
 class HelpWindow;
 class Shortcuts;
 class ALabel;
-class QIconViewItem;
+class Q3IconViewItem;
 class Photo;
 class RecentAlbumMenuItem;
 //--------------------
@@ -38,7 +45,7 @@
 #define UPDATES 1
 #define UPCOMING 2
 
-#include <qframe.h>
+#include <q3frame.h>
 #include "../backend/recentAlbums.h"
 
 //=====================================
@@ -46,7 +53,7 @@
    image, and album shaper logo.
  */
 //=====================================
-class TitleWidget : public QFrame
+class TitleWidget : public Q3Frame
 {
 Q_OBJECT
 
@@ -205,38 +212,38 @@
   QMenuBar* menu;
 
   ///File menu
-  QPopupMenu* file;
+  Q3PopupMenu* file;
 
   ///Open recent submenu
-  QPopupMenu* openRecent;
+  Q3PopupMenu* openRecent;
   int* recentMenuItems;
   int numRecentMenuItems;
   RecentAlbumMenuItem** customRecentMenuItems;
   
   
   ///Photos menu
-  QPopupMenu* photoMenu;
+  Q3PopupMenu* photoMenu;
   
   ///Tools menu
-  QPopupMenu* tools;
+  Q3PopupMenu* tools;
 
   //PLATFORM_SPECIFIC_CODE
   ///Window menu, only used in OSX
   #if defined(Q_OS_MACX)
-  QPopupMenu* windowMenu;
+  Q3PopupMenu* windowMenu;
   int WINDOW_MINIMIZE;
   #endif
   
   ///Help menu
-  QPopupMenu* helpMenu;
+  Q3PopupMenu* helpMenu;
 
   ///Main grid
-  QGridLayout* mainGrid;
-  QFrame* mainFrame;
+  Q3GridLayout* mainGrid;
+  Q3Frame* mainFrame;
 
   ///Album annotation grid
-  QGridLayout* albumAnnotationGrid;
-  QFrame* albumAnnotationFrame;
+  Q3GridLayout* albumAnnotationGrid;
+  Q3Frame* albumAnnotationFrame;
   ALabel* albumImage;
   QLabel* albumName;
   QLineEdit* albumNameVal;
@@ -246,8 +253,8 @@
   QLineEdit* albumAuthorVal;
 
   ///Subalbum annotation grid
-  QGridLayout* subalbumAnnotationGrid;
-  QFrame* subalbumAnnotationFrame;
+  Q3GridLayout* subalbumAnnotationGrid;
+  Q3Frame* subalbumAnnotationFrame;
   ALabel* subalbumImage;
   QLabel* subalbumName;
   QLineEdit* subalbumNameVal;
diff -urN albumshaper_2.1_src/src/gui/welcomeWindow/item.cpp albumshaper_2.1_src-qt4/src/gui/welcomeWindow/item.cpp
--- albumshaper_2.1_src/src/gui/welcomeWindow/item.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/welcomeWindow/item.cpp	2014-06-05 09:42:36.428565812 +0200
@@ -12,13 +12,13 @@
 #include <qpixmap.h>
 #include <qstring.h>
 #include <qpainter.h>
-#include <qiconview.h>
+#include <q3iconview.h>
 
 //Projectwide includes
 #include "item.h"
 
 //==============================================
-Item::Item( QIconView* parent, QPixmap icon, QString text ) : QIconViewItem(parent, text, icon)
+Item::Item( Q3IconView* parent, QPixmap icon, QString text ) : Q3IconViewItem(parent, text, icon)
 {
   mousedOver = false;
 }
@@ -53,7 +53,7 @@
 
    p->drawPixmap( x() , y() + ( height() - pixmap()->height() ) / 2, *pixmap());
 
-    int align = AlignLeft | WordBreak | BreakAnywhere;
+    int align = Qt::AlignLeft | Qt::TextWordWrap | Qt::TextWrapAnywhere;
    p->drawText( textRect( FALSE ), align, text());
 }
 //==============================================
diff -urN albumshaper_2.1_src/src/gui/welcomeWindow/item.h albumshaper_2.1_src-qt4/src/gui/welcomeWindow/item.h
--- albumshaper_2.1_src/src/gui/welcomeWindow/item.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/welcomeWindow/item.h	2014-06-05 09:42:36.513564749 +0200
@@ -1,3 +1,5 @@
+//Added by qt3to4:
+#include <QPixmap>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
@@ -17,15 +19,15 @@
 class QString;
 //--------------------
 
-#include <qiconview.h>
+#include <q3iconview.h>
 #include <qobject.h>
 #include <qstring.h>
 
 //=====================================
-class Item : public QIconViewItem
+class Item : public Q3IconViewItem
 {
 public:
-  Item( QIconView* parent, QPixmap icon, QString text);
+  Item( Q3IconView* parent, QPixmap icon, QString text);
 
   void paintItem( QPainter* p, const QColorGroup& cg);
   void paintFocus( QPainter *, const QColorGroup &) { }
diff -urN albumshaper_2.1_src/src/gui/welcomeWindow/items.cpp albumshaper_2.1_src-qt4/src/gui/welcomeWindow/items.cpp
--- albumshaper_2.1_src/src/gui/welcomeWindow/items.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/welcomeWindow/items.cpp	2014-06-05 09:42:36.429565799 +0200
@@ -9,7 +9,10 @@
 //==============================================
 
 //Systemwide includes
-#include <qiconview.h>
+#include <q3iconview.h>
+//Added by qt3to4:
+#include <QKeyEvent>
+#include <QEvent>
 
 //Projectwide includes
 #include "items.h"
@@ -17,14 +20,14 @@
 
 //==============================================
 Items::Items( QWidget* parent,
-                      const char* name ) : QIconView( parent, name)
+                      const char* name ) : Q3IconView( parent, name)
 {
   currentPseudoSelection = NULL;
 //  setSizePolicy( QSizePolicy::Fixed, QSizePolicy::Minimum);
 
   //connect mouse over events to paint pseudo selection in ligher blue
-  connect( this, SIGNAL(onItem(QIconViewItem*)),
-                this, SLOT(repaintGroup(QIconViewItem*)) );
+  connect( this, SIGNAL(onItem(Q3IconViewItem*)),
+                this, SLOT(repaintGroup(Q3IconViewItem*)) );
 
   //clear any pseudo selection when mouse moves off icons
   connect( this, SIGNAL(onViewport()),
@@ -35,10 +38,10 @@
 {
   //change key left/right presses to up/down events
   int key = e->key();
-  if( key == Key_Left) key = Key_Up;
-  if( key == Key_Right) key = Key_Down;
+  if( key == Qt::Key_Left) key = Qt::Key_Up;
+  if( key == Qt::Key_Right) key = Qt::Key_Down;
 
-  QIconView::keyPressEvent(
+  Q3IconView::keyPressEvent(
     new QKeyEvent(QEvent::KeyPress,
               key,
               e->ascii(),
@@ -50,11 +53,11 @@
 //==============================================
 QSize Items::sizeHint() const
 {
-  QSize s = QIconView::sizeHint();
+  QSize s = Q3IconView::sizeHint();
 
   //find max item width
   s.setWidth(0);
-  QIconViewItem *item;
+  Q3IconViewItem *item;
   for( item = firstItem(); item != NULL; item = item->nextItem() )
   {
     if(item->width() + 2 > s.width() )
@@ -64,7 +67,7 @@
   return s;
 }
 //==============================================
-void Items::repaintGroup( QIconViewItem* pseudoSelection)
+void Items::repaintGroup( Q3IconViewItem* pseudoSelection)
 {
   //if old pseudo selection unselect it
   clearPseudoSelection();
diff -urN albumshaper_2.1_src/src/gui/welcomeWindow/items.h albumshaper_2.1_src-qt4/src/gui/welcomeWindow/items.h
--- albumshaper_2.1_src/src/gui/welcomeWindow/items.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/welcomeWindow/items.h	2014-06-05 09:42:36.514564736 +0200
@@ -1,3 +1,5 @@
+//Added by qt3to4:
+#include <QKeyEvent>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
@@ -16,11 +18,11 @@
 //--------------------
 class Item;
 
-#include <qiconview.h>
+#include <q3iconview.h>
 #include <qobject.h>
 
 //=====================================
-class Items : public QIconView
+class Items : public Q3IconView
 {
 Q_OBJECT
 //--
@@ -31,7 +33,7 @@
   QSize sizeHint() const;
 //--
 private slots:
-  void repaintGroup( QIconViewItem* pseudoSelection);
+  void repaintGroup( Q3IconViewItem* pseudoSelection);
   void clearPseudoSelection();
 //--
 private:
diff -urN albumshaper_2.1_src/src/gui/welcomeWindow/welcomeWindow.cpp albumshaper_2.1_src-qt4/src/gui/welcomeWindow/welcomeWindow.cpp
--- albumshaper_2.1_src/src/gui/welcomeWindow/welcomeWindow.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/welcomeWindow/welcomeWindow.cpp	2014-06-05 12:10:14.360826419 +0200
@@ -17,6 +17,9 @@
 #include <qpushbutton.h>
 #include <qpushbutton.h>
 #include <qapplication.h>
+//Added by qt3to4:
+#include <Q3GridLayout>
+#include <Q3Frame>
 
 //Projectwide includes
 #include "welcomeWindow.h"
@@ -39,7 +42,7 @@
   sideImage->setPixmap( QPixmap( QString(IMAGE_PATH) + "miscImages/welcome.png" ) );
   sideImage->setSizePolicy( QSizePolicy::Fixed, QSizePolicy::Fixed );
   //--
-  QFrame* itemsFrame = new QFrame(this);
+  Q3Frame* itemsFrame = new Q3Frame(this);
 
   welcomeTitle = new QLabel( QString(tr("Welcome to Album Shaper %1")).arg(ALBUMSHAPER_VERSION), itemsFrame );
   QFont textFont = welcomeTitle->font();
@@ -48,19 +51,19 @@
   welcomeTitle->setFont( textFont );
   //--
   welcomeMessage = new QLabel( QString(tr("It appears you are a new Album Shaper user! Before you begin creating photo albums, you may want to explore the following features of this program:" ) ), itemsFrame );
-  welcomeMessage->setAlignment( Qt::AlignLeft | Qt::WordBreak | Qt::BreakAnywhere );
+  welcomeMessage->setAlignment( Qt::AlignLeft | Qt::TextWordWrap | Qt::TextWrapAnywhere );
   //--
   items = new Items(itemsFrame);
-  items->setItemTextPos( QIconView::Right );
+  items->setItemTextPos( Q3IconView::Right );
   items->setMaxItemWidth(500);
-  items->setFrameShape ( QFrame::NoFrame );
-  items->setSelectionMode( QIconView::NoSelection ) ;
+  items->setFrameShape ( Q3Frame::NoFrame );
+  items->setSelectionMode( Q3IconView::NoSelection ) ;
 
   items->setSizePolicy( QSizePolicy::Minimum, QSizePolicy::Minimum );
 
   items->setSpacing( WIDGET_SPACING );
 
-  connect( items, SIGNAL(clicked(QIconViewItem*)), this, SLOT(itemClicked(QIconViewItem*)) );
+  connect( items, SIGNAL(clicked(Q3IconViewItem*)), this, SLOT(itemClicked(Q3IconViewItem*)) );
 
   help = new Item( items, QPixmap(QString(IMAGE_PATH)+"welcomeImages/handbook.png"),
                     tr("Read short tutorials which cover all of the program's ins and outs.") );
@@ -71,7 +74,7 @@
 
     //set text rects of icons
   int maxWidth = 0;
-  QIconViewItem *item;
+  Q3IconViewItem *item;
   for( item = items->firstItem(); item != NULL; item = item->nextItem() )
   {
     if(item->textRect().width() > maxWidth)
@@ -95,14 +98,14 @@
   closeButton->setDefault(true);
   connect( closeButton, SIGNAL(clicked()), SLOT(close()) );
   //--
-  setPaletteBackgroundColor( white );
-  closeButton->setEraseColor( white );
+  setPaletteBackgroundColor( Qt::white );
+  closeButton->setEraseColor( Qt::white );
   //--
-  QGridLayout* grid = new QGridLayout( this, 1, 2, 0);
+  Q3GridLayout* grid = new Q3GridLayout( this, 1, 2, 0);
   grid->addWidget( sideImage, 0, 0 );
   grid->addWidget( itemsFrame, 0, 1 );
 
-  QGridLayout* itemsGrid = new QGridLayout( itemsFrame, 4, 3, 0 );
+  Q3GridLayout* itemsGrid = new Q3GridLayout( itemsFrame, 4, 3, 0 );
 
   itemsGrid->addMultiCellWidget( welcomeTitle,  0, 0, 0, 2 );
   itemsGrid->addMultiCellWidget( welcomeMessage,  1, 1, 0, 2 );
@@ -121,7 +124,7 @@
   //-------------------------------
 }
 //==============================================
-void WelcomeWindow::itemClicked(QIconViewItem* item)
+void WelcomeWindow::itemClicked(Q3IconViewItem* item)
 {
   if(item == NULL)
    return;
diff -urN albumshaper_2.1_src/src/gui/welcomeWindow/welcomeWindow.h albumshaper_2.1_src-qt4/src/gui/welcomeWindow/welcomeWindow.h
--- albumshaper_2.1_src/src/gui/welcomeWindow/welcomeWindow.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/welcomeWindow/welcomeWindow.h	2014-06-05 09:42:36.514564736 +0200
@@ -12,13 +12,17 @@
 #define GUI_WELCOMEWINDOW_WELCOMEWINDOW_H
 
 #include <qdialog.h>
+//Added by qt3to4:
+#include <QPixmap>
+#include <Q3GridLayout>
+#include <QLabel>
 
 //forward declarations
-class QGridLayout;
+class Q3GridLayout;
 class QPixmap;
 class QLabel;
 class QPushButton;
-class QIconViewItem;
+class Q3IconViewItem;
 class Items;
 class Item;
 
@@ -31,10 +35,10 @@
   WelcomeWindow( QWidget *parent=0, const char* name=0);
 //----------------------
 private slots:
-  void itemClicked( QIconViewItem *item );
+  void itemClicked( Q3IconViewItem *item );
 //----------------------
 private:
-  QGridLayout* grid;
+  Q3GridLayout* grid;
 
   QLabel* sideImage;
   QLabel* welcomeTitle;
diff -urN albumshaper_2.1_src/src/gui/window.cpp albumshaper_2.1_src-qt4/src/gui/window.cpp
--- albumshaper_2.1_src/src/gui/window.cpp	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/window.cpp	2014-06-05 11:59:08.800147073 +0200
@@ -9,13 +9,19 @@
 //==============================================
 
 //Systemwide includes
-#include <qframe.h>
+#include <q3frame.h>
 #include <qlayout.h>
 #include <qpixmap.h>
 #include <qtooltip.h>
 #include <qdir.h>
 #include <qapplication.h>
-#include <qiconview.h>
+#include <q3iconview.h>
+//Added by qt3to4:
+#include <Q3GridLayout>
+#include <QShowEvent>
+#include <QEvent>
+#include <QHideEvent>
+#include <QCloseEvent>
 
 //PLATFORM_SPECIFIC_CODE
 #if defined(Q_OS_MACX)
@@ -48,7 +54,7 @@
 Window::Window( QWidget* parent, const char* name ) : QWidget(parent,name)
 {
   //don't clear pixmap area before painting, prevents flicker
-  setWFlags(WRepaintNoErase);
+  setWindowFlags(Qt::WNoAutoErase);
 
   //load shadow pixmaps
   shadowBL = new QPixmap( QString(IMAGE_PATH)+"miscImages/photoGradientBottomLeft.png" );
@@ -122,7 +128,7 @@
   layout->refresh();
 
   //place widgets in main frame
-  grid = new QGridLayout( this, 3, 2, 0);                
+  grid = new Q3GridLayout( this, 3, 2, 0);                
   grid->addWidget( title,     0, 0 );
   grid->addWidget( layout,    1, 0 );
   grid->setRowStretch( 1, 1 );
@@ -144,7 +150,7 @@
               tr("Album Shaper"));
   //------------------------------------------------
   //apply settings
-  QToolTip::setGloballyEnabled( config->getBool( "layout", "showTooltips" ) );
+  //QToolTip::setGloballyEnabled( config->getBool( "layout", "showTooltips" ) );
   title->useAnimation( config->getBool( "layout", "animation" ) );
   //------------------------------------------------
 }
@@ -326,7 +332,7 @@
     return true;
   
   //handle showMinimized events
-  if ( e->type() == QEvent::ShowMinimized )
+  if ( e->type() == QEvent::WindowStateChange && windowState() == Qt::WindowMinimized )
   {
     //update menu entries as per window state change
     title->windowStateChanged( false );
diff -urN albumshaper_2.1_src/src/gui/window.h albumshaper_2.1_src-qt4/src/gui/window.h
--- albumshaper_2.1_src/src/gui/window.h	2005-04-07 17:17:07.000000000 +0200
+++ albumshaper_2.1_src-qt4/src/gui/window.h	2014-06-05 09:42:36.485565099 +0200
@@ -1,3 +1,10 @@
+//Added by qt3to4:
+#include <QShowEvent>
+#include <QHideEvent>
+#include <QEvent>
+#include <Q3GridLayout>
+#include <QCloseEvent>
+#include <QPixmap>
 //==============================================
 //  copyright            : (C) 2003-2005 by Will Stokes
 //==============================================
@@ -13,7 +20,7 @@
 
 //--------------------
 //forward declarations
-class QGridLayout;
+class Q3GridLayout;
 class QPixmap;
 class TitleWidget;
 class LayoutWidget;
@@ -100,7 +107,7 @@
   Configuration* config;
 
   ///Grid objects placed in
-  QGridLayout* grid;
+  Q3GridLayout* grid;
 
   ///Title widget cont  ains menu's, album information and Album Shaper icon
   TitleWidget* title;
diff -urN albumshaper_2.1_src/src/main.cpp albumshaper_2.1_src-qt4/src/main.cpp
--- albumshaper_2.1_src/src/main.cpp	2014-06-05 09:42:13.235855760 +0200
+++ albumshaper_2.1_src-qt4/src/main.cpp	2014-06-05 09:46:24.230717893 +0200
@@ -14,6 +14,7 @@
 #include <qtranslator.h>
 #include <qtextcodec.h>
 #include <qdir.h>
+#include <QDesktopWidget>
 #include <iostream>
 
 //PLATFORM_SPECIFIC_CODE
